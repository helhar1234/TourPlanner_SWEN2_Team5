2024-06-20 11:47:29.305 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-20 11:47:29.314 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-20 11:47:29.316 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-20 11:47:29.322 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-20 11:47:29.349 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version [WORKING]
2024-06-20 11:47:29.350 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-06-20 11:47:29.540 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2024-06-20 11:47:29.541 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2024-06-20 11:47:29.547 [JavaFX Application Thread] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-20 11:47:29.774 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-20 11:47:29.775 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-20 11:47:29.775 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-20 11:47:29.785 [JavaFX Application Thread] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-06-20 11:47:29.786 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
2024-06-20 11:47:29.794 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-20 11:47:29.795 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-06-20 11:47:29.815 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-20 11:47:29.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6f2e7245
2024-06-20 11:47:29.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6f2e7245
2024-06-20 11:47:29.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f2e7245
2024-06-20 11:47:29.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1337b99b
2024-06-20 11:47:29.870 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c33fc4b
2024-06-20 11:47:29.870 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5d4efc22
2024-06-20 11:47:29.871 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@b87bf0
2024-06-20 11:47:29.871 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@b87bf0
2024-06-20 11:47:29.872 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b87bf0
2024-06-20 11:47:29.873 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@44040331
2024-06-20 11:47:29.873 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@44040331
2024-06-20 11:47:29.873 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44040331
2024-06-20 11:47:29.875 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6c675ea
2024-06-20 11:47:29.875 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6c675ea
2024-06-20 11:47:29.875 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c675ea
2024-06-20 11:47:29.876 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6163c4be
2024-06-20 11:47:29.876 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6163c4be
2024-06-20 11:47:29.877 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6163c4be
2024-06-20 11:47:29.878 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1fa4fae6
2024-06-20 11:47:29.878 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1fa4fae6
2024-06-20 11:47:29.878 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1fa4fae6
2024-06-20 11:47:29.879 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6e36a135
2024-06-20 11:47:29.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6e36a135
2024-06-20 11:47:29.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e36a135
2024-06-20 11:47:29.881 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@16c655c1
2024-06-20 11:47:29.881 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@16c655c1
2024-06-20 11:47:29.882 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16c655c1
2024-06-20 11:47:29.882 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@42ead4d7
2024-06-20 11:47:29.883 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@42ead4d7
2024-06-20 11:47:29.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@cc9e90f
2024-06-20 11:47:29.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@cc9e90f
2024-06-20 11:47:29.885 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@70b7da2a
2024-06-20 11:47:29.885 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@70b7da2a
2024-06-20 11:47:29.886 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d9bf45d
2024-06-20 11:47:29.886 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4d54875e
2024-06-20 11:47:29.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3b2b63e1
2024-06-20 11:47:29.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b2b63e1
2024-06-20 11:47:29.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4916e131
2024-06-20 11:47:29.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4916e131
2024-06-20 11:47:29.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7907274c
2024-06-20 11:47:29.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7907274c
2024-06-20 11:47:29.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@567fbc94
2024-06-20 11:47:29.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@567fbc94
2024-06-20 11:47:29.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@45055cdd
2024-06-20 11:47:29.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@45055cdd
2024-06-20 11:47:29.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@59e818b
2024-06-20 11:47:29.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@59e818b
2024-06-20 11:47:29.893 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4aa82131
2024-06-20 11:47:29.893 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4aa82131
2024-06-20 11:47:29.895 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@54c82b13
2024-06-20 11:47:29.895 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@54c82b13
2024-06-20 11:47:29.897 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6323c299
2024-06-20 11:47:29.898 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6323c299
2024-06-20 11:47:29.899 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@59aa6566
2024-06-20 11:47:29.899 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59aa6566
2024-06-20 11:47:29.900 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@636d24a2
2024-06-20 11:47:29.900 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@636d24a2
2024-06-20 11:47:29.902 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2bed1b0f
2024-06-20 11:47:29.902 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2bed1b0f
2024-06-20 11:47:29.902 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2bed1b0f
2024-06-20 11:47:29.904 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@154fffbf
2024-06-20 11:47:29.905 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@49c64022
2024-06-20 11:47:29.905 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@49c64022
2024-06-20 11:47:29.905 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@49c64022
2024-06-20 11:47:29.905 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@451a91df
2024-06-20 11:47:29.906 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3ee6397f
2024-06-20 11:47:29.907 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6a1efc04
2024-06-20 11:47:29.907 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a1efc04
2024-06-20 11:47:29.908 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1019607f
2024-06-20 11:47:29.908 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1019607f
2024-06-20 11:47:29.909 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54b5d4b5
2024-06-20 11:47:29.909 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54b5d4b5
2024-06-20 11:47:29.909 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@161eff40
2024-06-20 11:47:29.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@161eff40
2024-06-20 11:47:29.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@177ecc70
2024-06-20 11:47:29.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@177ecc70
2024-06-20 11:47:29.911 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3df95c8
2024-06-20 11:47:29.912 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@9abf20e
2024-06-20 11:47:29.912 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@9abf20e
2024-06-20 11:47:29.912 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@9abf20e
2024-06-20 11:47:29.913 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5e884440
2024-06-20 11:47:29.913 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5e884440
2024-06-20 11:47:29.913 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5e884440
2024-06-20 11:47:29.914 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3f0c47d8
2024-06-20 11:47:29.914 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@29163f3e
2024-06-20 11:47:29.915 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@658e40d3
2024-06-20 11:47:29.915 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@658e40d3
2024-06-20 11:47:29.915 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@658e40d3
2024-06-20 11:47:29.916 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12cba68e
2024-06-20 11:47:29.916 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12cba68e
2024-06-20 11:47:29.916 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12cba68e
2024-06-20 11:47:29.916 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@cde04c7
2024-06-20 11:47:29.916 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@40b2545a
2024-06-20 11:47:29.919 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@39bcf8ee
2024-06-20 11:47:29.919 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39bcf8ee
2024-06-20 11:47:29.919 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@70a02379
2024-06-20 11:47:29.920 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@592c99b5
2024-06-20 11:47:29.920 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@592c99b5
2024-06-20 11:47:29.921 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@10fd6ff4
2024-06-20 11:47:29.921 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10fd6ff4
2024-06-20 11:47:29.921 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21a4dcf1
2024-06-20 11:47:29.922 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5526ea0b
2024-06-20 11:47:29.923 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6db958da
2024-06-20 11:47:29.925 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@76ba0a6b
2024-06-20 11:47:29.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76ba0a6b
2024-06-20 11:47:29.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43bb29d7
2024-06-20 11:47:29.927 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7b734ef
2024-06-20 11:47:29.927 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1bd5b06
2024-06-20 11:47:29.927 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@407a537f
2024-06-20 11:47:29.927 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a953f36
2024-06-20 11:47:29.927 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@643b68c7
2024-06-20 11:47:29.927 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f357a2d
2024-06-20 11:47:29.928 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d46211f
2024-06-20 11:47:29.959 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-20 11:47:29.960 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-20 11:47:29.961 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-20 11:47:29.961 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-20 11:47:29.961 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-20 11:47:29.962 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-20 11:47:29.963 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-20 11:47:29.963 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-20 11:47:29.964 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-06-20 11:47:29.965 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-20 11:47:29.965 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-20 11:47:29.965 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-06-20 11:47:29.966 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-20 11:47:29.966 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-20 11:47:29.970 [JavaFX Application Thread] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-06-20 11:47:29.975 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/tour_planner_g5_db]
2024-06-20 11:47:29.976 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-20 11:47:29.976 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-06-20 11:47:29.978 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-06-20 11:47:29.978 [JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-06-20 11:47:30.228 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 16.3 (Debian 16.3-1.pgdg120+1)
      major : 16
      minor : 3
2024-06-20 11:47:30.228 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.7.2
      major : 42
      minor : 7
2024-06-20 11:47:30.228 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-06-20 11:47:30.242 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-06-20 11:47:30.250 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-20 11:47:30.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c4516d
2024-06-20 11:47:30.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@c4516d
2024-06-20 11:47:30.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@177ecc70
2024-06-20 11:47:30.286 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e57de2e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d6bb255]
2024-06-20 11:47:30.316 [JavaFX Application Thread] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-20 11:47:30.328 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-20 11:47:30.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-20 11:47:30.342 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourModel
2024-06-20 11:47:30.344 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel on table tours
2024-06-20 11:47:30.367 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=tourid, insertable=true, updatable=false, unique=false}
2024-06-20 11:47:30.369 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-20 11:47:30.369 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-20 11:47:30.370 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-20 11:47:30.371 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:id]
2024-06-20 11:47:30.373 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-20 11:47:30.375 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-20 11:47:30.376 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourid)]), id, assigned, , ...)
2024-06-20 11:47:30.377 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=description, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.377 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
2024-06-20 11:47:30.378 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:description]
2024-06-20 11:47:30.378 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for description
2024-06-20 11:47:30.378 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property description
2024-06-20 11:47:30.378 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=destination, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.378 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property destination with lazy=false
2024-06-20 11:47:30.379 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:destination]
2024-06-20 11:47:30.379 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for destination
2024-06-20 11:47:30.379 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property destination
2024-06-20 11:47:30.379 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.379 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-20 11:47:30.380 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:distance]
2024-06-20 11:47:30.380 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-20 11:47:30.380 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-20 11:47:30.380 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.380 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-20 11:47:30.381 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:name]
2024-06-20 11:47:30.381 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-20 11:47:30.381 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-20 11:47:30.381 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=start, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.381 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property start with lazy=false
2024-06-20 11:47:30.382 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:start]
2024-06-20 11:47:30.382 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for start
2024-06-20 11:47:30.382 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property start
2024-06-20 11:47:30.382 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=time, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.382 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property time with lazy=false
2024-06-20 11:47:30.382 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:time]
2024-06-20 11:47:30.382 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for time
2024-06-20 11:47:30.382 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property time
2024-06-20 11:47:30.383 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-20 11:47:30.385 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.387 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-20 11:47:30.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-20 11:47:30.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-20 11:47:30.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourLogModel
2024-06-20 11:47:30.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel on table tourlogs
2024-06-20 11:47:30.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tourlogid, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.394 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-20 11:47:30.394 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-20 11:47:30.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-20 11:47:30.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:id]
2024-06-20 11:47:30.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-20 11:47:30.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-20 11:47:30.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourlogid)]), id, assigned, , ...)
2024-06-20 11:47:30.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2024-06-20 11:47:30.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:comment]
2024-06-20 11:47:30.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2024-06-20 11:47:30.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2024-06-20 11:47:30.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-06-20 11:47:30.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:date]
2024-06-20 11:47:30.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-06-20 11:47:30.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-06-20 11:47:30.397 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='difficultyid', referencedColumn='difficultyid', mappedBy=''}
2024-06-20 11:47:30.397 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.397 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-20 11:47:30.397 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.397 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-20 11:47:30.397 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:distance]
2024-06-20 11:47:30.397 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-20 11:47:30.397 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-20 11:47:30.397 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=rating, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property rating with lazy=false
2024-06-20 11:47:30.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:rating]
2024-06-20 11:47:30.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for rating
2024-06-20 11:47:30.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property rating
2024-06-20 11:47:30.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeHours, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeHours with lazy=false
2024-06-20 11:47:30.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeHours]
2024-06-20 11:47:30.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeHours
2024-06-20 11:47:30.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeHours
2024-06-20 11:47:30.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeMinutes, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeMinutes with lazy=false
2024-06-20 11:47:30.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeMinutes]
2024-06-20 11:47:30.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeMinutes
2024-06-20 11:47:30.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeMinutes
2024-06-20 11:47:30.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=totaltime, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property totalTime with lazy=false
2024-06-20 11:47:30.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:totalTime]
2024-06-20 11:47:30.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for totalTime
2024-06-20 11:47:30.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property totalTime
2024-06-20 11:47:30.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='tourid_fk', referencedColumn='tourid', mappedBy=''}
2024-06-20 11:47:30.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tour, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tour
2024-06-20 11:47:30.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-20 11:47:30.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-20 11:47:30.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-20 11:47:30.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-20 11:47:30.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourMapModel
2024-06-20 11:47:30.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel on table maps
2024-06-20 11:47:30.404 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.404 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-20 11:47:30.404 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-20 11:47:30.404 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-20 11:47:30.404 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:id]
2024-06-20 11:47:30.404 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-20 11:47:30.404 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-20 11:47:30.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-06-20 11:47:30.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=filename, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property filename with lazy=false
2024-06-20 11:47:30.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:filename]
2024-06-20 11:47:30.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for filename
2024-06-20 11:47:30.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property filename
2024-06-20 11:47:30.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=tourid_fk, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property tourId with lazy=false
2024-06-20 11:47:30.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:tourId]
2024-06-20 11:47:30.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for tourId
2024-06-20 11:47:30.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tourId
2024-06-20 11:47:30.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-20 11:47:30.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-20 11:47:30.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name DifficultyModel
2024-06-20 11:47:30.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel on table difficulties
2024-06-20 11:47:30.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficultyid, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.408 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-20 11:47:30.408 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-20 11:47:30.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-20 11:47:30.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:id]
2024-06-20 11:47:30.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-20 11:47:30.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-20 11:47:30.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(difficultyid)]), id, identity, , ...)
2024-06-20 11:47:30.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property difficulty with lazy=false
2024-06-20 11:47:30.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:difficulty]
2024-06-20 11:47:30.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for difficulty
2024-06-20 11:47:30.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-20 11:47:30.410 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-20 11:47:30.410 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-20 11:47:30.410 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TransportTypeModel
2024-06-20 11:47:30.410 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel on table transporttypes
2024-06-20 11:47:30.411 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=transporttypeid, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.411 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-20 11:47:30.411 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-20 11:47:30.411 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-20 11:47:30.411 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:id]
2024-06-20 11:47:30.411 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-20 11:47:30.411 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-20 11:47:30.411 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(transporttypeid)]), id, identity, , ...)
2024-06-20 11:47:30.411 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-20 11:47:30.412 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-20 11:47:30.412 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:name]
2024-06-20 11:47:30.412 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-20 11:47:30.412 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-20 11:47:30.413 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-20 11:47:30.413 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for description
2024-06-20 11:47:30.413 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for destination
2024-06-20 11:47:30.413 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-20 11:47:30.413 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for start
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for time
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for comment
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for rating
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeHours
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeMinutes
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for totalTime
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for filename
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for tourId
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-20 11:47:30.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for difficulty
2024-06-20 11:47:30.415 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-20 11:47:30.415 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-20 11:47:30.417 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourid] to be non-null as it is part of the primary key for table [tours]
2024-06-20 11:47:30.418 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourlogid] to be non-null as it is part of the primary key for table [tourlogs]
2024-06-20 11:47:30.418 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [maps]
2024-06-20 11:47:30.418 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [difficultyid] to be non-null as it is part of the primary key for table [difficulties]
2024-06-20 11:47:30.418 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [transporttypeid] to be non-null as it is part of the primary key for table [transporttypes]
2024-06-20 11:47:30.418 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-20 11:47:30.420 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-20 11:47:30.420 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-20 11:47:30.420 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-20 11:47:30.421 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-20 11:47:30.421 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-20 11:47:30.421 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-20 11:47:30.422 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-20 11:47:30.445 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-06-20 11:47:30.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-06-20 11:47:30.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-06-20 11:47:30.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-06-20 11:47:30.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-06-20 11:47:30.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-06-20 11:47:30.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-06-20 11:47:30.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-06-20 11:47:30.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-06-20 11:47:30.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-06-20 11:47:30.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-06-20 11:47:30.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-06-20 11:47:30.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-06-20 11:47:30.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-06-20 11:47:30.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-06-20 11:47:30.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-06-20 11:47:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-06-20 11:47:30.449 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-06-20 11:47:30.449 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-06-20 11:47:30.449 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-06-20 11:47:30.449 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-06-20 11:47:30.490 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-20 11:47:30.492 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-20 11:47:30.503 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-06-20 11:47:30.503 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=21, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Users\helen\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-web\21\javafx-web-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-media\21\javafx-media-21.jar;C:\Users\helen\.m2\repository\org\jacoco\org.jacoco.agent\0.8.8\org.jacoco.agent-0.8.8-runtime.jar;C:\Users\helen\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\helen\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\helen\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\helen\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\helen\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\helen\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\helen\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\helen\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\helen\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\helen\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\helen\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\helen\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\helen\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\helen\.m2\repository\org\postgresql\postgresql\42.7.2\postgresql-42.7.2.jar;C:\Users\helen\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.17.2\log4j-slf4j-impl-2.17.2.jar;C:\Users\helen\.m2\repository\com\squareup\okio\okio\2.8.0\okio-2.8.0.jar;C:\Users\helen\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.0\kotlin-stdlib-common-1.4.0.jar;C:\Users\helen\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.10\kotlin-stdlib-1.4.10.jar;C:\Users\helen\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\helen\.m2\repository\com\itextpdf\bouncy-castle-connector\8.0.4\bouncy-castle-connector-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\io\8.0.4\io-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\commons\8.0.4\commons-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\forms\8.0.4\forms-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\pdfa\8.0.4\pdfa-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\sign\8.0.4\sign-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\barcodes\8.0.4\barcodes-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\font-asian\8.0.4\font-asian-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\hyph\8.0.4\hyph-8.0.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Vienna, java.vm.specification.version=21, os.name=Windows 11, javafx.version=21, sun.java.launcher=SUN_STANDARD, user.country=AT, sun.boot.library.path=C:\Users\helen\.jdks\openjdk-21.0.1\bin, sun.java.command=technikum.at.tourplanner_swen2_team5/technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\helen, user.language=de, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\helen\.m2\repository\com\squareup\okhttp3\okhttp\4.9.3\okhttp-4.9.3.jar;C:\Users\helen\OneDrive - FH Technikum Wien\FH\SS2024\SWEN2\TourPlanner_SWEN2_Team5\target\classes;C:\Users\helen\.m2\repository\com\itextpdf\kernel\8.0.4\kernel-8.0.4.jar;C:\Users\helen\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\helen\.m2\repository\org\json\json\20210307\json-20210307.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-media\21\javafx-media-21-win.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-core\2.23.1\log4j-core-2.23.1.jar;C:\Users\helen\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\helen\.m2\repository\com\itextpdf\layout\8.0.4\layout-8.0.4.jar;C:\Users\helen\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\helen\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\helen\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-web\21\javafx-web-21-win.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar, java.version.date=2023-10-17, java.home=C:\Users\helen\.jdks\openjdk-21.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, jdk.module.main.class=technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.module.main=technikum.at.tourplanner_swen2_team5, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.1+12-29, user.name=helen, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/tour_planner_g5_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\helen\AppData\Local\Temp\, java.version=21.0.1, user.dir=C:\Users\helen\OneDrive - FH Technikum Wien\FH\SS2024\SWEN2\TourPlanner_SWEN2_Team5, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e21c20d, native.encoding=Cp1252, java.library.path=C:\Users\helen\.jdks\openjdk-21.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\xampp\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\Program Files\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\helen\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\helen\AppData\Local\Programs\Python\Python38\;C:\Users\helen\AppData\Local\Microsoft\WindowsApps;C:\Users\helen\AppData\Local\Programs\Microsoft VS Code\bin;PATH TO PYTHON;C:\Users\helen\AppData\Local\GitHubDesktop\bin;C:\Users\helen\AppData\Roaming\npm;C:\Users\helen\AppData\Roaming\Composer\vendor\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\msys64\ucrt64\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2023.2.4\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.1+12-29, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=65.0}
2024-06-20 11:47:30.515 [JavaFX Application Thread] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-06-20 11:47:30.516 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-06-20 11:47:30.516 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e57de2e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@40bb37d4]
2024-06-20 11:47:30.569 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-20 11:47:30.569 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-20 11:47:30.733 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-20 11:47:30.733 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-20 11:47:30.748 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.749 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.749 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.749 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.749 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.749 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.749 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-20 11:47:30.749 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-20 11:47:30.770 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.770 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.770 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.770 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.770 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.770 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.771 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-20 11:47:30.771 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-20 11:47:30.780 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.780 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.780 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-20 11:47:30.780 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-20 11:47:30.792 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.792 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-20 11:47:30.801 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-20 11:47:30.801 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select difficultyid from difficulties where difficultyid =?
2024-06-20 11:47:30.801 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select difficulty_.difficultyid, difficulty_.difficulty as difficul2_0_ from difficulties difficulty_ where difficulty_.difficultyid=?
2024-06-20 11:47:30.801 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into difficulties (difficulty, difficultyid) values (?, ?)
2024-06-20 11:47:30.801 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update difficulties set difficulty=? where difficultyid=?
2024-06-20 11:47:30.801 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from difficulties where difficultyid=?
2024-06-20 11:47:30.801 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into difficulties (difficulty) values (?)
2024-06-20 11:47:30.821 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c7f794f]
2024-06-20 11:47:30.821 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-20 11:47:30.822 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-20 11:47:30.828 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-20 11:47:30.831 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
          - SQL table alias mapping - difficulty0_
          - alias suffix - 0_
          - suffixed key columns - {difficul1_0_0_}

2024-06-20 11:47:30.833 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel [NONE]: select difficulty0_.difficultyid as difficul1_0_0_, difficulty0_.difficulty as difficul2_0_0_ from difficulties difficulty0_ where difficulty0_.difficultyid=?
2024-06-20 11:47:30.833 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-20 11:47:30.833 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from maps where id =?
2024-06-20 11:47:30.833 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmapmod_.id, tourmapmod_.filename as filename2_1_, tourmapmod_.tourid_fk as tourid_f3_1_ from maps tourmapmod_ where tourmapmod_.id=?
2024-06-20 11:47:30.833 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into maps (filename, tourid_fk, id) values (?, ?, ?)
2024-06-20 11:47:30.833 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update maps set filename=?, tourid_fk=? where id=?
2024-06-20 11:47:30.833 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from maps where id=?
2024-06-20 11:47:30.833 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into maps (filename, tourid_fk) values (?, ?)
2024-06-20 11:47:30.833 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e402278]
2024-06-20 11:47:30.834 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : filename
2024-06-20 11:47:30.834 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tourId
2024-06-20 11:47:30.834 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-20 11:47:30.834 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-20 11:47:30.834 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
          - SQL table alias mapping - tourmapmod0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-06-20 11:47:30.834 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel [NONE]: select tourmapmod0_.id as id1_1_0_, tourmapmod0_.filename as filename2_1_0_, tourmapmod0_.tourid_fk as tourid_f3_1_0_ from maps tourmapmod0_ where tourmapmod0_.id=?
2024-06-20 11:47:30.835 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-20 11:47:30.835 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourlogid from tourlogs where tourlogid =?
2024-06-20 11:47:30.835 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourlogmod_.tourlogid, tourlogmod_.comment as comment2_2_, tourlogmod_.date as date3_2_, tourlogmod_.difficultyid as difficul9_2_, tourlogmod_.distance as distance4_2_, tourlogmod_.rating as rating5_2_, tourlogmod_.timeHours as timehour6_2_, tourlogmod_.timeMinutes as timeminu7_2_, tourlogmod_.totaltime as totaltim8_2_, tourlogmod_.tourid_fk as tourid_10_2_, tourlogmod_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod_ where tourlogmod_.tourlogid=?
2024-06-20 11:47:30.835 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tourlogs (comment, date, difficultyid, distance, rating, timeHours, timeMinutes, totaltime, tourid_fk, transporttypeid_fk, tourlogid) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2024-06-20 11:47:30.835 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tourlogs set comment=?, date=?, difficultyid=?, distance=?, rating=?, timeHours=?, timeMinutes=?, totaltime=?, tourid_fk=?, transporttypeid_fk=? where tourlogid=?
2024-06-20 11:47:30.835 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tourlogs where tourlogid=?
2024-06-20 11:47:30.835 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d50fac7]
2024-06-20 11:47:30.835 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2024-06-20 11:47:30.836 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-06-20 11:47:30.836 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-20 11:47:30.839 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44db6480]
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty.difficulty
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : rating
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeHours
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeMinutes
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : totalTime
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72445729]
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.description
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.destination
2024-06-20 11:47:30.840 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.distance
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.name
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.start
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.time
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e5ca9c]
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType.name
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a347589]
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-20 11:47:30.841 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-20 11:47:30.843 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.difficulty)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:2>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour)
             - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:3>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour.transportType)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:4>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - SQL table alias mapping - tourlogmod0_
          - alias suffix - 0_
          - suffixed key columns - {tourlogi1_2_0_}
          - JOIN (JoinDefinedByMetadata(difficulty)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
                - SQL table alias mapping - difficulty1_
                - alias suffix - 1_
                - suffixed key columns - {difficul1_0_1_}
          - JOIN (JoinDefinedByMetadata(tour)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
                - SQL table alias mapping - tourmodel2_
                - alias suffix - 2_
                - suffixed key columns - {tourid1_3_2_}
                - JOIN (JoinDefinedByMetadata(transportType)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                      - SQL table alias mapping - transportt3_
                      - alias suffix - 3_
                      - suffixed key columns - {transpor1_4_3_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt4_
                - alias suffix - 4_
                - suffixed key columns - {transpor1_4_4_}

2024-06-20 11:47:30.843 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel [NONE]: select tourlogmod0_.tourlogid as tourlogi1_2_0_, tourlogmod0_.comment as comment2_2_0_, tourlogmod0_.date as date3_2_0_, tourlogmod0_.difficultyid as difficul9_2_0_, tourlogmod0_.distance as distance4_2_0_, tourlogmod0_.rating as rating5_2_0_, tourlogmod0_.timeHours as timehour6_2_0_, tourlogmod0_.timeMinutes as timeminu7_2_0_, tourlogmod0_.totaltime as totaltim8_2_0_, tourlogmod0_.tourid_fk as tourid_10_2_0_, tourlogmod0_.transporttypeid_fk as transpo11_2_0_, difficulty1_.difficultyid as difficul1_0_1_, difficulty1_.difficulty as difficul2_0_1_, tourmodel2_.tourid as tourid1_3_2_, tourmodel2_.description as descript2_3_2_, tourmodel2_.destination as destinat3_3_2_, tourmodel2_.distance as distance4_3_2_, tourmodel2_.name as name5_3_2_, tourmodel2_.start as start6_3_2_, tourmodel2_.time as time7_3_2_, tourmodel2_.transporttypeid_fk as transpor8_3_2_, transportt3_.transporttypeid as transpor1_4_3_, transportt3_.name as name2_4_3_, transportt4_.transporttypeid as transpor1_4_4_, transportt4_.name as name2_4_4_ from tourlogs tourlogmod0_ left outer join difficulties difficulty1_ on tourlogmod0_.difficultyid=difficulty1_.difficultyid inner join tours tourmodel2_ on tourlogmod0_.tourid_fk=tourmodel2_.tourid inner join transporttypes transportt3_ on tourmodel2_.transporttypeid_fk=transportt3_.transporttypeid left outer join transporttypes transportt4_ on tourlogmod0_.transporttypeid_fk=transportt4_.transporttypeid where tourlogmod0_.tourlogid=?
2024-06-20 11:47:30.843 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-20 11:47:30.843 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select transporttypeid from transporttypes where transporttypeid =?
2024-06-20 11:47:30.843 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select transportt_.transporttypeid, transportt_.name as name2_4_ from transporttypes transportt_ where transportt_.transporttypeid=?
2024-06-20 11:47:30.843 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into transporttypes (name, transporttypeid) values (?, ?)
2024-06-20 11:47:30.843 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update transporttypes set name=? where transporttypeid=?
2024-06-20 11:47:30.843 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from transporttypes where transporttypeid=?
2024-06-20 11:47:30.844 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into transporttypes (name) values (?)
2024-06-20 11:47:30.844 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78eed1e1]
2024-06-20 11:47:30.844 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-20 11:47:30.844 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-20 11:47:30.844 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-20 11:47:30.844 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
          - SQL table alias mapping - transportt0_
          - alias suffix - 0_
          - suffixed key columns - {transpor1_4_0_}

2024-06-20 11:47:30.844 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel [NONE]: select transportt0_.transporttypeid as transpor1_4_0_, transportt0_.name as name2_4_0_ from transporttypes transportt0_ where transportt0_.transporttypeid=?
2024-06-20 11:47:30.844 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-20 11:47:30.844 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourid from tours where tourid =?
2024-06-20 11:47:30.844 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmodel_.tourid, tourmodel_.description as descript2_3_, tourmodel_.destination as destinat3_3_, tourmodel_.distance as distance4_3_, tourmodel_.name as name5_3_, tourmodel_.start as start6_3_, tourmodel_.time as time7_3_, tourmodel_.transporttypeid_fk as transpor8_3_ from tours tourmodel_ where tourmodel_.tourid=?
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tours (description, destination, distance, name, start, time, transporttypeid_fk, tourid) values (?, ?, ?, ?, ?, ?, ?, ?)
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tours set description=?, destination=?, distance=?, name=?, start=?, time=?, transporttypeid_fk=? where tourid=?
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tours where tourid=?
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@685c5e5f]
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : destination
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : start
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : time
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70e08772]
2024-06-20 11:47:30.845 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-20 11:47:30.846 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-20 11:47:30.846 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-20 11:47:30.846 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - SQL table alias mapping - tourmodel0_
          - alias suffix - 0_
          - suffixed key columns - {tourid1_3_0_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt1_
                - alias suffix - 1_
                - suffixed key columns - {transpor1_4_1_}

2024-06-20 11:47:30.846 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel [NONE]: select tourmodel0_.tourid as tourid1_3_0_, tourmodel0_.description as descript2_3_0_, tourmodel0_.destination as destinat3_3_0_, tourmodel0_.distance as distance4_3_0_, tourmodel0_.name as name5_3_0_, tourmodel0_.start as start6_3_0_, tourmodel0_.time as time7_3_0_, tourmodel0_.transporttypeid_fk as transpor8_3_0_, transportt1_.transporttypeid as transpor1_4_1_, transportt1_.name as name2_4_1_ from tours tourmodel0_ inner join transporttypes transportt1_ on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid where tourmodel0_.tourid=?
2024-06-20 11:47:30.874 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6f9c642] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-06-20 11:47:30.939 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : difficulties
2024-06-20 11:47:30.939 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : maps
2024-06-20 11:47:30.939 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tourlogs
2024-06-20 11:47:30.939 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tours
2024-06-20 11:47:30.939 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : transporttypes
2024-06-20 11:47:31.115 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-06-20 11:47:31.115 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-20 11:47:31.119 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-20 11:47:31.119 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-20 11:47:31.123 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-20 11:47:31.124 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4168a0e8
2024-06-20 11:47:31.128 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
2024-06-20 11:47:31.128 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-06-20 11:47:31.129 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@45df6cf
2024-06-20 11:47:31.131 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 0648ba24-05d6-496c-b834-b4b9760e4276 (<unnamed>)
2024-06-20 11:47:31.131 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-20 11:47:31.131 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.DAL.HibernateUtil - Hibernate SessionFactory created successfully
2024-06-20 11:47:31.173 [JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-06-20 11:47:31.208 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-20 11:47:31.212 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-20 11:47:31.221 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourModel'

2024-06-20 11:47:31.241 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-20 11:47:31.251 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-20 11:47:31.251 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-20 11:47:31.251 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) )
2024-06-20 11:47:31.254 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-20 11:47:31.256 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-20 11:47:31.259 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-20 11:47:31.259 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-20 11:47:31.260 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}

2024-06-20 11:47:31.260 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-20 11:47:31.263 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-20 11:47:31.263 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_
2024-06-20 11:47:31.263 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-20 11:47:31.271 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-20 11:47:31.276 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-20 11:47:31.278 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:47:31.282 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-20 11:47:31.283 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-20 11:47:31.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:47:31.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-20 11:47:31.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-20 11:47:31.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-20 11:47:31.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-20 11:47:31.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-20 11:47:31.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-20 11:47:31.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-20 11:47:31.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.288 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-20 11:47:31.295 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-20 11:47:31.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-20 11:47:31.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-20 11:47:31.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.297 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-20 11:47:31.299 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-20 11:47:31.300 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:47:31.300 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-20 11:47:31.300 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.301 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-20 11:47:31.304 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-20 11:47:31.304 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-20 11:47:31.304 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-20 11:47:31.304 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.304 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-20 11:47:31.304 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-20 11:47:31.304 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-20 11:47:31.305 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-20 11:47:31.326 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-20 11:47:31.329 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-20 11:47:31.329 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-20 11:47:31.331 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.331 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-20 11:47:31.331 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.331 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-20 11:47:31.331 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.331 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-20 11:47:31.333 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-20 11:47:31.333 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-20 11:47:31.333 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-20 11:47:31.333 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.333 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-20 11:47:31.333 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.334 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-20 11:47:31.337 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-20 11:47:31.337 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-20 11:47:31.337 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-20 11:47:31.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:31.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-20 11:47:31.338 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-20 11:47:31.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-20 11:47:31.338 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-20 11:47:33.562 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-20 11:47:33.564 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-20 11:47:33.565 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-20 11:47:33.566 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-20 11:47:33.566 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-20 11:47:33.569 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-20 11:47:33.569 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@70b7da2a
2024-06-20 11:47:33.571 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourmodel0_.tourid
2024-06-20 11:47:33.571 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-20 11:47:33.571 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) ( WHERE ( = ( tourmodel0_.tourid {synthetic-alias} id ) ? ) ) )
2024-06-20 11:47:33.571 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-20 11:47:33.573 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-20 11:47:33.573 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-20 11:47:33.573 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-20 11:47:33.573 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourmodel0_.tourid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourmodel0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@70b7da2a}

2024-06-20 11:47:33.573 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-20 11:47:33.573 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-20 11:47:33.573 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_ where tourmodel0_.tourid=?
2024-06-20 11:47:33.574 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-20 11:47:33.577 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_ 
    where
        tourmodel0_.tourid=?
2024-06-20 11:47:33.582 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-20 11:47:33.582 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:47:33.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:47:33.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-20 11:47:33.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:33.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-20 11:47:33.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:33.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-20 11:47:33.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:33.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-20 11:47:33.583 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:33.583 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-20 11:47:33.583 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:33.583 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-20 11:47:33.583 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:33.583 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-20 11:47:33.583 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:33.583 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-20 11:47:33.586 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-20 11:47:33.586 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-20 11:47:33.586 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-20 11:47:33.587 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:47:33.587 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-20 11:47:33.587 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-20 11:47:33.587 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:47:33.587 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-20 11:48:00.224 [Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
2024-06-20 11:48:06.761 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-20 11:48:06.762 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-20 11:48:06.762 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourLogModel'

2024-06-20 11:48:06.762 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-20 11:48:06.763 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-20 11:48:06.763 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-20 11:48:06.763 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) )
2024-06-20 11:48:06.763 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-20 11:48:06.763 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-20 11:48:06.763 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-20 11:48:06.763 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-20 11:48:06.763 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}

2024-06-20 11:48:06.763 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-20 11:48:06.763 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-20 11:48:06.764 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_
2024-06-20 11:48:06.764 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-20 11:48:06.764 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-20 11:48:06.768 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-20 11:48:06.768 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-20 11:48:06.769 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-20 11:48:06.769 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-20 11:48:06.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-20 11:48:06.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-20 11:48:06.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-20 11:48:06.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-20 11:48:06.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.769 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-20 11:48:06.771 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.772 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-20 11:48:06.772 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.772 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-20 11:48:06.775 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-20 11:48:06.776 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tour