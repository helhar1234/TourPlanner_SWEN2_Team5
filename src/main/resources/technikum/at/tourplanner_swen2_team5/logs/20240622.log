2024-06-22 01:10:49.388 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-22 01:10:49.397 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-22 01:10:49.400 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-22 01:10:49.406 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-22 01:10:49.433 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version [WORKING]
2024-06-22 01:10:49.434 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-06-22 01:10:49.614 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2024-06-22 01:10:49.615 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2024-06-22 01:10:49.622 [JavaFX Application Thread] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-22 01:10:49.875 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-22 01:10:49.875 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-22 01:10:49.875 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-22 01:10:49.886 [JavaFX Application Thread] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-06-22 01:10:49.886 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
2024-06-22 01:10:49.895 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-22 01:10:49.896 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-06-22 01:10:49.912 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-22 01:10:49.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2565f8bb
2024-06-22 01:10:49.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2565f8bb
2024-06-22 01:10:49.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2565f8bb
2024-06-22 01:10:49.972 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@772c00c7
2024-06-22 01:10:49.972 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@180792ec
2024-06-22 01:10:49.973 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6a3dcc78
2024-06-22 01:10:49.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@225eb219
2024-06-22 01:10:49.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@225eb219
2024-06-22 01:10:49.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@225eb219
2024-06-22 01:10:49.975 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@20053a3d
2024-06-22 01:10:49.976 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@20053a3d
2024-06-22 01:10:49.976 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@20053a3d
2024-06-22 01:10:49.977 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@295ab73c
2024-06-22 01:10:49.977 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@295ab73c
2024-06-22 01:10:49.977 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@295ab73c
2024-06-22 01:10:49.978 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@78422239
2024-06-22 01:10:49.978 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@78422239
2024-06-22 01:10:49.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@78422239
2024-06-22 01:10:49.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@357926e0
2024-06-22 01:10:49.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@357926e0
2024-06-22 01:10:49.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@357926e0
2024-06-22 01:10:49.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6bea086f
2024-06-22 01:10:49.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6bea086f
2024-06-22 01:10:49.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6bea086f
2024-06-22 01:10:49.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@11517c63
2024-06-22 01:10:49.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@11517c63
2024-06-22 01:10:49.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@11517c63
2024-06-22 01:10:49.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@313b5c81
2024-06-22 01:10:49.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@313b5c81
2024-06-22 01:10:49.985 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7c598e8c
2024-06-22 01:10:49.985 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7c598e8c
2024-06-22 01:10:49.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7dfbabed
2024-06-22 01:10:49.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dfbabed
2024-06-22 01:10:49.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@541477da
2024-06-22 01:10:49.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71554d0e
2024-06-22 01:10:49.988 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@239564f9
2024-06-22 01:10:49.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@239564f9
2024-06-22 01:10:49.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7450d3e
2024-06-22 01:10:49.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7450d3e
2024-06-22 01:10:49.990 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@53dca854
2024-06-22 01:10:49.990 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@53dca854
2024-06-22 01:10:49.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@691d624f
2024-06-22 01:10:49.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@691d624f
2024-06-22 01:10:49.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@9ca69af
2024-06-22 01:10:49.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@9ca69af
2024-06-22 01:10:49.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6e0e76eb
2024-06-22 01:10:49.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6e0e76eb
2024-06-22 01:10:49.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@73cd7ea2
2024-06-22 01:10:49.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@73cd7ea2
2024-06-22 01:10:49.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c3c324f
2024-06-22 01:10:49.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c3c324f
2024-06-22 01:10:49.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d8529d3
2024-06-22 01:10:49.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d8529d3
2024-06-22 01:10:49.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@41c4ad7e
2024-06-22 01:10:50.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@41c4ad7e
2024-06-22 01:10:50.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@587a5dfc
2024-06-22 01:10:50.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@587a5dfc
2024-06-22 01:10:50.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@350180a6
2024-06-22 01:10:50.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@350180a6
2024-06-22 01:10:50.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@350180a6
2024-06-22 01:10:50.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@427a2bd1
2024-06-22 01:10:50.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@8e96e88
2024-06-22 01:10:50.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@8e96e88
2024-06-22 01:10:50.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@8e96e88
2024-06-22 01:10:50.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@599ac192
2024-06-22 01:10:50.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@26e64176
2024-06-22 01:10:50.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@90e7d0e
2024-06-22 01:10:50.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@90e7d0e
2024-06-22 01:10:50.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@926a779
2024-06-22 01:10:50.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@926a779
2024-06-22 01:10:50.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@ed2408
2024-06-22 01:10:50.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ed2408
2024-06-22 01:10:50.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5fc88ed7
2024-06-22 01:10:50.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fc88ed7
2024-06-22 01:10:50.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2df881b0
2024-06-22 01:10:50.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2df881b0
2024-06-22 01:10:50.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@65392522
2024-06-22 01:10:50.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@24dcc8be
2024-06-22 01:10:50.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@24dcc8be
2024-06-22 01:10:50.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@24dcc8be
2024-06-22 01:10:50.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@653e841e
2024-06-22 01:10:50.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@653e841e
2024-06-22 01:10:50.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@653e841e
2024-06-22 01:10:50.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3ca6edd9
2024-06-22 01:10:50.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1942b6d8
2024-06-22 01:10:50.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3b8b873f
2024-06-22 01:10:50.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b8b873f
2024-06-22 01:10:50.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3b8b873f
2024-06-22 01:10:50.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@396aa068
2024-06-22 01:10:50.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@396aa068
2024-06-22 01:10:50.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@396aa068
2024-06-22 01:10:50.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5c63f508
2024-06-22 01:10:50.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@447d0573
2024-06-22 01:10:50.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3926d88e
2024-06-22 01:10:50.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3926d88e
2024-06-22 01:10:50.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@275816df
2024-06-22 01:10:50.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1ec2188e
2024-06-22 01:10:50.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ec2188e
2024-06-22 01:10:50.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@72b29fe4
2024-06-22 01:10:50.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@72b29fe4
2024-06-22 01:10:50.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77b1838b
2024-06-22 01:10:50.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@12856962
2024-06-22 01:10:50.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2d8bd8a5
2024-06-22 01:10:50.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2719d79c
2024-06-22 01:10:50.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2719d79c
2024-06-22 01:10:50.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6d9c9537
2024-06-22 01:10:50.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1eb47009
2024-06-22 01:10:50.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46083f91
2024-06-22 01:10:50.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@42e4e8f1
2024-06-22 01:10:50.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b58e8b7
2024-06-22 01:10:50.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7651eded
2024-06-22 01:10:50.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@71a2a001
2024-06-22 01:10:50.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@14e46da4
2024-06-22 01:10:50.051 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-22 01:10:50.052 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-22 01:10:50.053 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-22 01:10:50.053 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-22 01:10:50.054 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-22 01:10:50.054 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-22 01:10:50.055 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-22 01:10:50.055 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-22 01:10:50.056 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-06-22 01:10:50.056 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-22 01:10:50.058 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-22 01:10:50.058 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-06-22 01:10:50.058 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-22 01:10:50.059 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-22 01:10:50.064 [JavaFX Application Thread] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-06-22 01:10:50.069 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/tour_planner_g5_db]
2024-06-22 01:10:50.069 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-22 01:10:50.069 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-06-22 01:10:50.072 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-06-22 01:10:50.072 [JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-06-22 01:10:50.575 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 16.3 (Debian 16.3-1.pgdg120+1)
      major : 16
      minor : 3
2024-06-22 01:10:50.575 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.7.2
      major : 42
      minor : 7
2024-06-22 01:10:50.575 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-06-22 01:10:50.594 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-06-22 01:10:50.611 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-22 01:10:50.677 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@276620f6
2024-06-22 01:10:50.677 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@276620f6
2024-06-22 01:10:50.677 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2df881b0
2024-06-22 01:10:50.679 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52555a61] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a17f9e7]
2024-06-22 01:10:50.731 [JavaFX Application Thread] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-22 01:10:50.750 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:10:50.767 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:10:50.772 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourModel
2024-06-22 01:10:50.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel on table tours
2024-06-22 01:10:50.810 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=tourid, insertable=true, updatable=false, unique=false}
2024-06-22 01:10:50.813 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-22 01:10:50.813 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:10:50.814 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:10:50.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:id]
2024-06-22 01:10:50.820 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:10:50.822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:10:50.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourid)]), id, assigned, , ...)
2024-06-22 01:10:50.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=description, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
2024-06-22 01:10:50.826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:description]
2024-06-22 01:10:50.826 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for description
2024-06-22 01:10:50.827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property description
2024-06-22 01:10:50.827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=destination, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property destination with lazy=false
2024-06-22 01:10:50.827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:destination]
2024-06-22 01:10:50.828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for destination
2024-06-22 01:10:50.828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property destination
2024-06-22 01:10:50.828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-22 01:10:50.828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:distance]
2024-06-22 01:10:50.828 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-22 01:10:50.830 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-22 01:10:50.830 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.830 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-22 01:10:50.830 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:name]
2024-06-22 01:10:50.830 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-22 01:10:50.830 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-22 01:10:50.831 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=start, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.831 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property start with lazy=false
2024-06-22 01:10:50.831 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:start]
2024-06-22 01:10:50.831 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for start
2024-06-22 01:10:50.831 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property start
2024-06-22 01:10:50.831 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=time, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.832 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property time with lazy=false
2024-06-22 01:10:50.832 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:time]
2024-06-22 01:10:50.832 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for time
2024-06-22 01:10:50.832 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property time
2024-06-22 01:10:50.833 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-22 01:10:50.833 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.835 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-22 01:10:50.840 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:10:50.841 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:10:50.841 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourLogModel
2024-06-22 01:10:50.841 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel on table tourlogs
2024-06-22 01:10:50.842 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tourlogid, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.843 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-22 01:10:50.843 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:10:50.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:10:50.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:id]
2024-06-22 01:10:50.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:10:50.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:10:50.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourlogid)]), id, assigned, , ...)
2024-06-22 01:10:50.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2024-06-22 01:10:50.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:comment]
2024-06-22 01:10:50.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2024-06-22 01:10:50.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2024-06-22 01:10:50.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-06-22 01:10:50.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:date]
2024-06-22 01:10:50.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-06-22 01:10:50.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-06-22 01:10:50.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='difficultyid', referencedColumn='difficultyid', mappedBy=''}
2024-06-22 01:10:50.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-22 01:10:50.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-22 01:10:50.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:distance]
2024-06-22 01:10:50.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-22 01:10:50.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-22 01:10:50.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=rating, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property rating with lazy=false
2024-06-22 01:10:50.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:rating]
2024-06-22 01:10:50.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for rating
2024-06-22 01:10:50.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property rating
2024-06-22 01:10:50.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeHours, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeHours with lazy=false
2024-06-22 01:10:50.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeHours]
2024-06-22 01:10:50.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeHours
2024-06-22 01:10:50.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeHours
2024-06-22 01:10:50.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeMinutes, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeMinutes with lazy=false
2024-06-22 01:10:50.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeMinutes]
2024-06-22 01:10:50.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeMinutes
2024-06-22 01:10:50.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeMinutes
2024-06-22 01:10:50.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=totaltime, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property totalTime with lazy=false
2024-06-22 01:10:50.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:totalTime]
2024-06-22 01:10:50.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for totalTime
2024-06-22 01:10:50.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property totalTime
2024-06-22 01:10:50.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='tourid_fk', referencedColumn='tourid', mappedBy=''}
2024-06-22 01:10:50.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tour, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tour
2024-06-22 01:10:50.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-22 01:10:50.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-22 01:10:50.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:10:50.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:10:50.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourMapModel
2024-06-22 01:10:50.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel on table maps
2024-06-22 01:10:50.854 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.854 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-22 01:10:50.855 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:10:50.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:10:50.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:id]
2024-06-22 01:10:50.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:10:50.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:10:50.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-06-22 01:10:50.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=filename, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property filename with lazy=false
2024-06-22 01:10:50.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:filename]
2024-06-22 01:10:50.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for filename
2024-06-22 01:10:50.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property filename
2024-06-22 01:10:50.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=tourid_fk, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property tourId with lazy=false
2024-06-22 01:10:50.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:tourId]
2024-06-22 01:10:50.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for tourId
2024-06-22 01:10:50.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tourId
2024-06-22 01:10:50.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:10:50.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:10:50.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name DifficultyModel
2024-06-22 01:10:50.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel on table difficulties
2024-06-22 01:10:50.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficultyid, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.859 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-22 01:10:50.859 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:10:50.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:10:50.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:id]
2024-06-22 01:10:50.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:10:50.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:10:50.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(difficultyid)]), id, identity, , ...)
2024-06-22 01:10:50.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property difficulty with lazy=false
2024-06-22 01:10:50.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:difficulty]
2024-06-22 01:10:50.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for difficulty
2024-06-22 01:10:50.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-22 01:10:50.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:10:50.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:10:50.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TransportTypeModel
2024-06-22 01:10:50.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel on table transporttypes
2024-06-22 01:10:50.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=transporttypeid, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.862 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-22 01:10:50.862 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:10:50.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:10:50.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:id]
2024-06-22 01:10:50.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:10:50.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:10:50.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(transporttypeid)]), id, identity, , ...)
2024-06-22 01:10:50.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-22 01:10:50.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-22 01:10:50.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:name]
2024-06-22 01:10:50.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-22 01:10:50.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-22 01:10:50.865 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:10:50.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for description
2024-06-22 01:10:50.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for destination
2024-06-22 01:10:50.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-22 01:10:50.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-22 01:10:50.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for start
2024-06-22 01:10:50.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for time
2024-06-22 01:10:50.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:10:50.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for comment
2024-06-22 01:10:50.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for rating
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeHours
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeMinutes
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for totalTime
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for filename
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for tourId
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for difficulty
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:10:50.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-22 01:10:50.870 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourid] to be non-null as it is part of the primary key for table [tours]
2024-06-22 01:10:50.870 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourlogid] to be non-null as it is part of the primary key for table [tourlogs]
2024-06-22 01:10:50.870 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [maps]
2024-06-22 01:10:50.870 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [difficultyid] to be non-null as it is part of the primary key for table [difficulties]
2024-06-22 01:10:50.871 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [transporttypeid] to be non-null as it is part of the primary key for table [transporttypes]
2024-06-22 01:10:50.871 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:10:50.874 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:10:50.874 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:10:50.875 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:10:50.876 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:10:50.876 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:10:50.877 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:10:50.877 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:10:50.902 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-06-22 01:10:50.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-06-22 01:10:50.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-06-22 01:10:50.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-06-22 01:10:50.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-06-22 01:10:50.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-06-22 01:10:50.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-06-22 01:10:50.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-06-22 01:10:50.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-06-22 01:10:50.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-06-22 01:10:50.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-06-22 01:10:50.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-06-22 01:10:50.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-06-22 01:10:50.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-06-22 01:10:50.942 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:10:50.943 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:10:50.954 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-06-22 01:10:50.955 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=21, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Users\helen\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-web\21\javafx-web-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-media\21\javafx-media-21.jar;C:\Users\helen\.m2\repository\org\jacoco\org.jacoco.agent\0.8.8\org.jacoco.agent-0.8.8-runtime.jar;C:\Users\helen\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\helen\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\helen\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\helen\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\helen\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\helen\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\helen\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\helen\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\helen\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\helen\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\helen\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\helen\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\helen\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\helen\.m2\repository\org\postgresql\postgresql\42.7.2\postgresql-42.7.2.jar;C:\Users\helen\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.17.2\log4j-slf4j-impl-2.17.2.jar;C:\Users\helen\.m2\repository\com\squareup\okio\okio\2.8.0\okio-2.8.0.jar;C:\Users\helen\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.0\kotlin-stdlib-common-1.4.0.jar;C:\Users\helen\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.10\kotlin-stdlib-1.4.10.jar;C:\Users\helen\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\helen\.m2\repository\com\itextpdf\bouncy-castle-connector\8.0.4\bouncy-castle-connector-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\io\8.0.4\io-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\commons\8.0.4\commons-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\forms\8.0.4\forms-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\pdfa\8.0.4\pdfa-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\sign\8.0.4\sign-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\barcodes\8.0.4\barcodes-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\font-asian\8.0.4\font-asian-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\hyph\8.0.4\hyph-8.0.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Vienna, java.vm.specification.version=21, os.name=Windows 11, javafx.version=21, sun.java.launcher=SUN_STANDARD, user.country=AT, sun.boot.library.path=C:\Users\helen\.jdks\openjdk-21.0.1\bin, sun.java.command=technikum.at.tourplanner_swen2_team5/technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\helen, user.language=de, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\helen\.m2\repository\com\squareup\okhttp3\okhttp\4.9.3\okhttp-4.9.3.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-media\21\javafx-media-21-win.jar;C:\Users\helen\.m2\repository\com\itextpdf\kernel\8.0.4\kernel-8.0.4.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\helen\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-web\21\javafx-web-21-win.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\helen\.m2\repository\org\json\json\20210307\json-20210307.jar;C:\Users\helen\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-core\2.23.1\log4j-core-2.23.1.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\helen\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\helen\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\helen\.m2\repository\com\itextpdf\layout\8.0.4\layout-8.0.4.jar;C:\Users\helen\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\helen\OneDrive - FH Technikum Wien\FH\SS2024\SWEN2\TourPlanner_SWEN2_Team5\target\classes, java.version.date=2023-10-17, java.home=C:\Users\helen\.jdks\openjdk-21.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, jdk.module.main.class=technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.module.main=technikum.at.tourplanner_swen2_team5, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.1+12-29, user.name=helen, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/tour_planner_g5_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\helen\AppData\Local\Temp\, java.version=21.0.1, user.dir=C:\Users\helen\OneDrive - FH Technikum Wien\FH\SS2024\SWEN2\TourPlanner_SWEN2_Team5, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4115bb7b, native.encoding=Cp1252, java.library.path=C:\Users\helen\.jdks\openjdk-21.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\xampp\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\Program Files\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\helen\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\helen\AppData\Local\Programs\Python\Python38\;C:\Users\helen\AppData\Local\Microsoft\WindowsApps;C:\Users\helen\AppData\Local\Programs\Microsoft VS Code\bin;PATH TO PYTHON;C:\Users\helen\AppData\Local\GitHubDesktop\bin;C:\Users\helen\AppData\Roaming\npm;C:\Users\helen\AppData\Roaming\Composer\vendor\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\msys64\ucrt64\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2023.2.4\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.1+12-29, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=65.0}
2024-06-22 01:10:50.971 [JavaFX Application Thread] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-06-22 01:10:50.972 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-06-22 01:10:50.972 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52555a61] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26e3b492]
2024-06-22 01:10:51.029 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-22 01:10:51.029 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:10:51.221 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-22 01:10:51.221 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:10:51.234 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.235 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.236 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.236 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.236 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.236 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.236 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-22 01:10:51.236 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:10:51.258 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.259 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.259 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.259 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.259 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.259 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.260 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-22 01:10:51.260 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:10:51.270 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.270 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.270 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-22 01:10:51.270 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:10:51.281 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.281 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:10:51.288 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:10:51.288 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select difficultyid from difficulties where difficultyid =?
2024-06-22 01:10:51.288 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select difficulty_.difficultyid, difficulty_.difficulty as difficul2_0_ from difficulties difficulty_ where difficulty_.difficultyid=?
2024-06-22 01:10:51.288 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into difficulties (difficulty, difficultyid) values (?, ?)
2024-06-22 01:10:51.288 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update difficulties set difficulty=? where difficultyid=?
2024-06-22 01:10:51.288 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from difficulties where difficultyid=?
2024-06-22 01:10:51.288 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into difficulties (difficulty) values (?)
2024-06-22 01:10:51.304 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2728d511]
2024-06-22 01:10:51.304 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-22 01:10:51.304 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:10:51.310 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:10:51.313 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
          - SQL table alias mapping - difficulty0_
          - alias suffix - 0_
          - suffixed key columns - {difficul1_0_0_}

2024-06-22 01:10:51.313 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel [NONE]: select difficulty0_.difficultyid as difficul1_0_0_, difficulty0_.difficulty as difficul2_0_0_ from difficulties difficulty0_ where difficulty0_.difficultyid=?
2024-06-22 01:10:51.313 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from maps where id =?
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmapmod_.id, tourmapmod_.filename as filename2_1_, tourmapmod_.tourid_fk as tourid_f3_1_ from maps tourmapmod_ where tourmapmod_.id=?
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into maps (filename, tourid_fk, id) values (?, ?, ?)
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update maps set filename=?, tourid_fk=? where id=?
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from maps where id=?
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into maps (filename, tourid_fk) values (?, ?)
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59bab796]
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : filename
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tourId
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
          - SQL table alias mapping - tourmapmod0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-06-22 01:10:51.315 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel [NONE]: select tourmapmod0_.id as id1_1_0_, tourmapmod0_.filename as filename2_1_0_, tourmapmod0_.tourid_fk as tourid_f3_1_0_ from maps tourmapmod0_ where tourmapmod0_.id=?
2024-06-22 01:10:51.316 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:10:51.316 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourlogid from tourlogs where tourlogid =?
2024-06-22 01:10:51.316 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourlogmod_.tourlogid, tourlogmod_.comment as comment2_2_, tourlogmod_.date as date3_2_, tourlogmod_.difficultyid as difficul9_2_, tourlogmod_.distance as distance4_2_, tourlogmod_.rating as rating5_2_, tourlogmod_.timeHours as timehour6_2_, tourlogmod_.timeMinutes as timeminu7_2_, tourlogmod_.totaltime as totaltim8_2_, tourlogmod_.tourid_fk as tourid_10_2_, tourlogmod_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod_ where tourlogmod_.tourlogid=?
2024-06-22 01:10:51.316 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tourlogs (comment, date, difficultyid, distance, rating, timeHours, timeMinutes, totaltime, tourid_fk, transporttypeid_fk, tourlogid) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2024-06-22 01:10:51.316 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tourlogs set comment=?, date=?, difficultyid=?, distance=?, rating=?, timeHours=?, timeMinutes=?, totaltime=?, tourid_fk=?, transporttypeid_fk=? where tourlogid=?
2024-06-22 01:10:51.316 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tourlogs where tourlogid=?
2024-06-22 01:10:51.316 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17eec53b]
2024-06-22 01:10:51.316 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2024-06-22 01:10:51.316 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-06-22 01:10:51.316 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-22 01:10:51.319 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b89b1c2]
2024-06-22 01:10:51.320 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty.difficulty
2024-06-22 01:10:51.320 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-22 01:10:51.320 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : rating
2024-06-22 01:10:51.320 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeHours
2024-06-22 01:10:51.320 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeMinutes
2024-06-22 01:10:51.320 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : totalTime
2024-06-22 01:10:51.320 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@210dabe]
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.description
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.destination
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.distance
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.name
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.start
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.time
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68c7a9bb]
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType.name
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ad2c33]
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-22 01:10:51.321 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:10:51.322 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:10:51.322 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.difficulty)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:2>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour)
             - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:3>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour.transportType)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:4>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - SQL table alias mapping - tourlogmod0_
          - alias suffix - 0_
          - suffixed key columns - {tourlogi1_2_0_}
          - JOIN (JoinDefinedByMetadata(difficulty)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
                - SQL table alias mapping - difficulty1_
                - alias suffix - 1_
                - suffixed key columns - {difficul1_0_1_}
          - JOIN (JoinDefinedByMetadata(tour)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
                - SQL table alias mapping - tourmodel2_
                - alias suffix - 2_
                - suffixed key columns - {tourid1_3_2_}
                - JOIN (JoinDefinedByMetadata(transportType)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                      - SQL table alias mapping - transportt3_
                      - alias suffix - 3_
                      - suffixed key columns - {transpor1_4_3_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt4_
                - alias suffix - 4_
                - suffixed key columns - {transpor1_4_4_}

2024-06-22 01:10:51.322 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel [NONE]: select tourlogmod0_.tourlogid as tourlogi1_2_0_, tourlogmod0_.comment as comment2_2_0_, tourlogmod0_.date as date3_2_0_, tourlogmod0_.difficultyid as difficul9_2_0_, tourlogmod0_.distance as distance4_2_0_, tourlogmod0_.rating as rating5_2_0_, tourlogmod0_.timeHours as timehour6_2_0_, tourlogmod0_.timeMinutes as timeminu7_2_0_, tourlogmod0_.totaltime as totaltim8_2_0_, tourlogmod0_.tourid_fk as tourid_10_2_0_, tourlogmod0_.transporttypeid_fk as transpo11_2_0_, difficulty1_.difficultyid as difficul1_0_1_, difficulty1_.difficulty as difficul2_0_1_, tourmodel2_.tourid as tourid1_3_2_, tourmodel2_.description as descript2_3_2_, tourmodel2_.destination as destinat3_3_2_, tourmodel2_.distance as distance4_3_2_, tourmodel2_.name as name5_3_2_, tourmodel2_.start as start6_3_2_, tourmodel2_.time as time7_3_2_, tourmodel2_.transporttypeid_fk as transpor8_3_2_, transportt3_.transporttypeid as transpor1_4_3_, transportt3_.name as name2_4_3_, transportt4_.transporttypeid as transpor1_4_4_, transportt4_.name as name2_4_4_ from tourlogs tourlogmod0_ left outer join difficulties difficulty1_ on tourlogmod0_.difficultyid=difficulty1_.difficultyid inner join tours tourmodel2_ on tourlogmod0_.tourid_fk=tourmodel2_.tourid inner join transporttypes transportt3_ on tourmodel2_.transporttypeid_fk=transportt3_.transporttypeid left outer join transporttypes transportt4_ on tourlogmod0_.transporttypeid_fk=transportt4_.transporttypeid where tourlogmod0_.tourlogid=?
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select transporttypeid from transporttypes where transporttypeid =?
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select transportt_.transporttypeid, transportt_.name as name2_4_ from transporttypes transportt_ where transportt_.transporttypeid=?
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into transporttypes (name, transporttypeid) values (?, ?)
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update transporttypes set name=? where transporttypeid=?
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from transporttypes where transporttypeid=?
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into transporttypes (name) values (?)
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9927c0d]
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
          - SQL table alias mapping - transportt0_
          - alias suffix - 0_
          - suffixed key columns - {transpor1_4_0_}

2024-06-22 01:10:51.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel [NONE]: select transportt0_.transporttypeid as transpor1_4_0_, transportt0_.name as name2_4_0_ from transporttypes transportt0_ where transportt0_.transporttypeid=?
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourid from tours where tourid =?
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmodel_.tourid, tourmodel_.description as descript2_3_, tourmodel_.destination as destinat3_3_, tourmodel_.distance as distance4_3_, tourmodel_.name as name5_3_, tourmodel_.start as start6_3_, tourmodel_.time as time7_3_, tourmodel_.transporttypeid_fk as transpor8_3_ from tours tourmodel_ where tourmodel_.tourid=?
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tours (description, destination, distance, name, start, time, transporttypeid_fk, tourid) values (?, ?, ?, ?, ?, ?, ?, ?)
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tours set description=?, destination=?, distance=?, name=?, start=?, time=?, transporttypeid_fk=? where tourid=?
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tours where tourid=?
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14e2e5c]
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : destination
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : start
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : time
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f68c9d6]
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:10:51.324 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:10:51.325 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - SQL table alias mapping - tourmodel0_
          - alias suffix - 0_
          - suffixed key columns - {tourid1_3_0_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt1_
                - alias suffix - 1_
                - suffixed key columns - {transpor1_4_1_}

2024-06-22 01:10:51.326 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel [NONE]: select tourmodel0_.tourid as tourid1_3_0_, tourmodel0_.description as descript2_3_0_, tourmodel0_.destination as destinat3_3_0_, tourmodel0_.distance as distance4_3_0_, tourmodel0_.name as name5_3_0_, tourmodel0_.start as start6_3_0_, tourmodel0_.time as time7_3_0_, tourmodel0_.transporttypeid_fk as transpor8_3_0_, transportt1_.transporttypeid as transpor1_4_1_, transportt1_.name as name2_4_1_ from tours tourmodel0_ inner join transporttypes transportt1_ on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid where tourmodel0_.tourid=?
2024-06-22 01:10:51.351 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@58dd500a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-06-22 01:10:51.510 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : difficulties
2024-06-22 01:10:51.510 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : maps
2024-06-22 01:10:51.510 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tourlogs
2024-06-22 01:10:51.510 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tours
2024-06-22 01:10:51.510 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : transporttypes
2024-06-22 01:10:51.629 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-06-22 01:10:51.629 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-22 01:10:51.633 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-22 01:10:51.633 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-22 01:10:51.641 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:10:51.644 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5329e370
2024-06-22 01:10:51.650 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
2024-06-22 01:10:51.650 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-06-22 01:10:51.653 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7b4309b3
2024-06-22 01:10:51.655 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: f3afab78-5a86-43c6-bc0f-6d19479ede40 (<unnamed>)
2024-06-22 01:10:51.655 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-22 01:10:51.655 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.DAL.HibernateUtil - Hibernate SessionFactory created successfully
2024-06-22 01:10:51.728 [JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-06-22 01:10:51.773 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:10:51.781 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:10:51.789 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourModel'

2024-06-22 01:10:51.813 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:10:51.826 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-22 01:10:51.828 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:10:51.828 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) )
2024-06-22 01:10:51.831 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:10:51.833 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:10:51.836 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-22 01:10:51.836 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:10:51.837 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}

2024-06-22 01:10:51.837 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:10:51.843 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:10:51.843 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_
2024-06-22 01:10:51.843 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:10:51.851 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-22 01:10:51.856 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:10:51.858 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:51.863 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:10:51.863 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:10:51.865 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:10:51.866 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.869 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:10:51.878 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:10:51.879 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:10:51.880 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:10:51.880 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.882 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:10:51.884 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:10:51.887 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:51.887 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:10:51.887 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:10:51.887 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.887 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:10:51.888 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.889 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:10:51.891 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:10:51.891 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:10:51.891 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:10:51.891 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.891 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:10:51.892 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-22 01:10:51.892 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:10:51.894 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:10:51.911 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-22 01:10:51.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:10:51.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:51.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:10:51.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.916 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:10:51.916 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.916 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:10:51.918 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:10:51.919 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.920 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:10:51.922 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:10:51.922 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:10:51.922 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:10:51.922 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:51.922 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:10:51.923 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-22 01:10:51.923 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:10:51.923 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:10:54.718 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-22 01:10:54.720 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:10:54.721 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-22 01:10:54.721 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:10:54.722 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-22 01:10:54.724 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-22 01:10:54.725 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@7dfbabed
2024-06-22 01:10:54.726 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourmodel0_.tourid
2024-06-22 01:10:54.727 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:10:54.727 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) ( WHERE ( = ( tourmodel0_.tourid {synthetic-alias} id ) ? ) ) )
2024-06-22 01:10:54.727 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:10:54.728 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-22 01:10:54.728 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-22 01:10:54.728 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:10:54.728 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourmodel0_.tourid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourmodel0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@7dfbabed}

2024-06-22 01:10:54.729 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:10:54.729 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-22 01:10:54.729 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_ where tourmodel0_.tourid=?
2024-06-22 01:10:54.729 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:10:54.733 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_ 
    where
        tourmodel0_.tourid=?
2024-06-22 01:10:54.746 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:10:54.746 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:54.746 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:54.746 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:10:54.746 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.746 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:10:54.747 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.748 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:10:54.750 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:10:54.750 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:10:54.750 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:10:54.750 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.750 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:10:54.750 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:10:54.750 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:54.751 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:10:54.805 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:10:54.806 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:10:54.807 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourLogModel'

2024-06-22 01:10:54.808 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:10:54.808 [Thread-4] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-22 01:10:54.808 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:10:54.808 [Thread-4] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) )
2024-06-22 01:10:54.808 [Thread-4] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:10:54.808 [Thread-4] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:10:54.808 [Thread-4] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-22 01:10:54.810 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:10:54.810 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}

2024-06-22 01:10:54.810 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:10:54.810 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:10:54.810 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_
2024-06-22 01:10:54.810 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:10:54.811 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-22 01:10:54.815 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:10:54.815 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:10:54.816 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:10:54.816 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:10:54.816 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:10:54.816 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:10:54.816 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.816 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:10:54.816 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.816 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:10:54.816 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.817 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:10:54.822 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:10:54.823 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:10:54.823 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:10:54.823 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.823 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:10:54.823 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.824 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:10:54.828 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:10:54.830 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:54.830 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:10:54.830 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.831 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:10:54.832 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:10:54.832 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:10:54.832 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.833 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:10:54.833 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:10:54.833 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-22 01:10:54.833 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.833 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:10:54.833 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.833 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:10:54.833 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:10:54.834 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.835 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:10:54.837 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:10:54.838 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:10:54.838 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:10:54.838 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.838 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:10:54.838 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.838 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:10:54.838 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.838 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.839 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:10:54.840 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:10:54.840 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:10:54.840 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:10:54.840 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:10:54.840 [Thread-4] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:11:03.436 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel WHERE id = :id
2024-06-22 01:11:03.437 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:11:03.438 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourLogModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-22 01:11:03.438 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:11:03.439 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-22 01:11:03.439 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-22 01:11:03.439 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@7dfbabed
2024-06-22 01:11:03.439 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourlogmod0_.tourlogid
2024-06-22 01:11:03.439 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:11:03.440 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) ( WHERE ( = ( tourlogmod0_.tourlogid {synthetic-alias} id ) ? ) ) )
2024-06-22 01:11:03.440 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:11:03.441 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-22 01:11:03.441 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-22 01:11:03.441 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:11:03.441 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourlogmod0_.tourlogid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourlogmod0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@7dfbabed}

2024-06-22 01:11:03.442 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:11:03.442 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel WHERE id = :id
2024-06-22 01:11:03.442 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_ where tourlogmod0_.tourlogid=?
2024-06-22 01:11:03.442 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:11:03.443 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_ 
    where
        tourlogmod0_.tourlogid=?
2024-06-22 01:11:03.446 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:11:03.446 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:11:03.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:11:03.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:11:03.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:11:03.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:11:03.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.447 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.449 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:11:03.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:11:03.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:11:03.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.450 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:11:03.452 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.453 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:11:03.453 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:03.453 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:11:03.453 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.453 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:03.453 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:11:03.453 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:11:03.453 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.453 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:11:03.453 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:11:03.498 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel 
2024-06-22 01:11:03.499 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:11:03.499 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'DifficultyModel'

2024-06-22 01:11:03.499 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel (<no alias>) -> difficulty0_
2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} difficulties difficulty0_ ) )
2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity DifficultyModel): [difficulties]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [difficulties difficulty0_]
2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (difficulties)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'difficulty0_.difficultyid as difficul1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=difficulties,tableAlias=difficulty0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'difficulty0_.difficulty as difficul2_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[difficulty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'difficulties difficulty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=difficulties,tableAlias=difficulty0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel}}

2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel 
2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select difficulty0_.difficultyid as difficul1_0_, difficulty0_.difficulty as difficul2_0_ from difficulties difficulty0_
2024-06-22 01:11:03.500 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:11:03.501 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_,
        difficulty0_.difficulty as difficul2_0_ 
    from
        difficulties difficulty0_
2024-06-22 01:11:03.503 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:11:03.503 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:11:03.503 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:11:03.503 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:03.503 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:11:03.503 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:11:03.503 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Easy
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:11:03.504 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:11:03.506 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:11:03.507 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:11:03.507 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TransportTypeModel'

2024-06-22 01:11:03.507 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:11:03.507 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel (<no alias>) -> transportt0_
2024-06-22 01:11:03.507 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:11:03.507 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} transporttypes transportt0_ ) )
2024-06-22 01:11:03.507 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:11:03.508 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TransportTypeModel): [transporttypes]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:11:03.508 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [transporttypes transportt0_]
2024-06-22 01:11:03.508 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:11:03.508 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (transporttypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'transportt0_.transporttypeid as transpor1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transporttypes,tableAlias=transportt0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'transportt0_.name as name2_4_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[transportt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'transporttypes transportt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transporttypes,tableAlias=transportt0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel}}

2024-06-22 01:11:03.508 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:11:03.508 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:11:03.508 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select transportt0_.transporttypeid as transpor1_4_, transportt0_.name as name2_4_ from transporttypes transportt0_
2024-06-22 01:11:03.508 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:11:03.508 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-22 01:11:03.510 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:03.511 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:11:08.695 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_ 
    where
        tourlogmod0_.tourlogid=?
2024-06-22 01:11:08.700 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:11:08.700 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:11:08.700 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:11:08.700 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:11:08.700 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.700 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:11:08.701 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.701 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:11:08.701 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.701 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:11:08.704 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:11:08.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:08.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:11:08.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.705 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:11:08.708 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:11:08.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:11:08.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.710 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:08.710 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:11:08.710 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:11:08.710 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.710 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:11:08.710 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:11:08.722 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_,
        difficulty0_.difficulty as difficul2_0_ 
    from
        difficulties difficulty0_
2024-06-22 01:11:08.724 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:11:08.724 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:11:08.724 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Easy
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:11:08.725 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-22 01:11:08.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:11:08.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:11:08.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:11:08.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:11:08.726 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:11:08.728 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-22 01:11:08.730 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:11:08.730 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:11:08.730 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:11:08.730 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:08.731 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:11:08.732 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:08.732 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:08.732 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:11:20.573 [Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
2024-06-22 01:11:55.611 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_,
        difficulty0_.difficulty as difficul2_0_ 
    from
        difficulties difficulty0_
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Easy
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:11:55.615 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:11:55.618 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-22 01:11:55.619 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:11:55.620 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:11:55.620 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:11:55.620 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:11:55.620 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:11:55.620 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:11:55.621 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:12:24.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-22 01:12:24.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
2024-06-22 01:12:24.115 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: d49e30b2-27fe-49b5-aeca-492f7586ef33, using strategy: org.hibernate.id.Assigned
2024-06-22 01:12:24.129 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel_.tourid,
        tourmodel_.description as descript2_3_,
        tourmodel_.destination as destinat3_3_,
        tourmodel_.distance as distance4_3_,
        tourmodel_.name as name5_3_,
        tourmodel_.start as start6_3_,
        tourmodel_.time as time7_3_,
        tourmodel_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel_ 
    where
        tourmodel_.tourid=?
2024-06-22 01:12:24.135 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
2024-06-22 01:12:24.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
2024-06-22 01:12:24.140 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2024-06-22 01:12:24.140 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2024-06-22 01:12:24.147 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-06-22 01:12:24.147 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-22 01:12:24.148 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
2024-06-22 01:12:24.148 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel{date=12.06.2024, difficulty=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4, distance=5, totalTime=1h 0min, rating=5, comment=ecscd, transportType=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3, id=d49e30b2-27fe-49b5-aeca-492f7586ef33, timeHours=7, timeMinutes=9, tour=technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51}
2024-06-22 01:12:24.154 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    insert 
    into
        tourlogs
        (comment, date, difficultyid, distance, rating, timeHours, timeMinutes, totaltime, tourid_fk, transporttypeid_fk, tourlogid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2024-06-22 01:12:24.176 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:12:24.176 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:12:24.176 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2024-06-22 01:12:24.176 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-22 01:12:24.181 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:12:24.181 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:12:24.181 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:12:24.181 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:12:24.181 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:12:24.181 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:12:24.182 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:12:24.182 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:12:24.182 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.182 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:12:24.182 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.182 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:12:24.182 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.182 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:12:24.185 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.186 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:12:24.189 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:12:24.189 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:12:24.189 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.190 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:12:24.191 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.192 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:12:24.194 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:12:24.195 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.196 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:12:24.196 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:12:24.196 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = ecscd
2024-06-22 01:12:24.196 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.196 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 12.06.2024
2024-06-22 01:12:24.196 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.196 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 4
2024-06-22 01:12:24.196 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.196 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 5
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 5
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 1h 0min
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 3
2024-06-22 01:12:24.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.199 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:12:24.202 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:12:24.202 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:12:24.202 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:12:24.202 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:24.202 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:12:24.203 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3
2024-06-22 01:12:24.203 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:12:24.203 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:12:44.411 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_ 
    where
        tourlogmod0_.tourlogid=?
2024-06-22 01:12:44.415 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:12:44.415 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:12:44.415 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:12:44.415 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = ecscd
2024-06-22 01:12:44.415 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.415 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 12.06.2024
2024-06-22 01:12:44.415 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.415 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 4
2024-06-22 01:12:44.415 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.416 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 5
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 5
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 1h 0min
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.418 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:12:44.420 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 3
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.421 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:12:44.423 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:12:44.423 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:12:44.423 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:12:44.423 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.423 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:12:44.423 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3
2024-06-22 01:12:44.423 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:12:44.423 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:12:44.441 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_,
        difficulty0_.difficulty as difficul2_0_ 
    from
        difficulties difficulty0_
2024-06-22 01:12:44.444 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:12:44.445 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:12:44.445 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:12:44.445 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:12:44.445 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:12:44.445 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:12:44.445 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:12:44.445 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Easy
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:12:44.446 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:12:44.448 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:12:44.450 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:14:10.070 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-22 01:14:10.089 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-22 01:14:10.092 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-22 01:14:10.100 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-22 01:14:10.143 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version [WORKING]
2024-06-22 01:14:10.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-06-22 01:14:10.364 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2024-06-22 01:14:10.365 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2024-06-22 01:14:10.371 [JavaFX Application Thread] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-22 01:14:10.621 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-22 01:14:10.621 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-22 01:14:10.621 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-22 01:14:10.631 [JavaFX Application Thread] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-06-22 01:14:10.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
2024-06-22 01:14:10.642 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-22 01:14:10.642 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-06-22 01:14:10.659 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-22 01:14:10.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@690ad033
2024-06-22 01:14:10.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@690ad033
2024-06-22 01:14:10.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@690ad033
2024-06-22 01:14:10.707 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@336eeece
2024-06-22 01:14:10.707 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c49c61
2024-06-22 01:14:10.707 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@8fbd586
2024-06-22 01:14:10.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@636d0c60
2024-06-22 01:14:10.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@636d0c60
2024-06-22 01:14:10.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@636d0c60
2024-06-22 01:14:10.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@40cd40c6
2024-06-22 01:14:10.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@40cd40c6
2024-06-22 01:14:10.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40cd40c6
2024-06-22 01:14:10.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@15adfd84
2024-06-22 01:14:10.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@15adfd84
2024-06-22 01:14:10.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15adfd84
2024-06-22 01:14:10.711 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@37b810b1
2024-06-22 01:14:10.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@37b810b1
2024-06-22 01:14:10.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37b810b1
2024-06-22 01:14:10.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@54bc2f20
2024-06-22 01:14:10.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@54bc2f20
2024-06-22 01:14:10.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54bc2f20
2024-06-22 01:14:10.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4ebbf13d
2024-06-22 01:14:10.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4ebbf13d
2024-06-22 01:14:10.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4ebbf13d
2024-06-22 01:14:10.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@17fe7173
2024-06-22 01:14:10.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@17fe7173
2024-06-22 01:14:10.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@17fe7173
2024-06-22 01:14:10.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3fab4839
2024-06-22 01:14:10.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3fab4839
2024-06-22 01:14:10.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fd43e8d
2024-06-22 01:14:10.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fd43e8d
2024-06-22 01:14:10.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@763f4d21
2024-06-22 01:14:10.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@763f4d21
2024-06-22 01:14:10.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@777b4580
2024-06-22 01:14:10.720 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@16527972
2024-06-22 01:14:10.721 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@89d07e0
2024-06-22 01:14:10.721 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@89d07e0
2024-06-22 01:14:10.721 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@398e8ce0
2024-06-22 01:14:10.721 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@398e8ce0
2024-06-22 01:14:10.722 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5935fc94
2024-06-22 01:14:10.722 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5935fc94
2024-06-22 01:14:10.723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@d96da2c
2024-06-22 01:14:10.723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@d96da2c
2024-06-22 01:14:10.724 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@78960404
2024-06-22 01:14:10.724 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@78960404
2024-06-22 01:14:10.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7c926938
2024-06-22 01:14:10.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7c926938
2024-06-22 01:14:10.729 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@58cc34e2
2024-06-22 01:14:10.729 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@58cc34e2
2024-06-22 01:14:10.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@504518fe
2024-06-22 01:14:10.731 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@504518fe
2024-06-22 01:14:10.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19bf048
2024-06-22 01:14:10.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19bf048
2024-06-22 01:14:10.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@420d3af0
2024-06-22 01:14:10.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@420d3af0
2024-06-22 01:14:10.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@b26d14f
2024-06-22 01:14:10.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b26d14f
2024-06-22 01:14:10.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5374852e
2024-06-22 01:14:10.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5374852e
2024-06-22 01:14:10.735 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5374852e
2024-06-22 01:14:10.736 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b01942f
2024-06-22 01:14:10.737 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1298f749
2024-06-22 01:14:10.737 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1298f749
2024-06-22 01:14:10.737 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1298f749
2024-06-22 01:14:10.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ad67b76
2024-06-22 01:14:10.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3be1c305
2024-06-22 01:14:10.739 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@560f8f1c
2024-06-22 01:14:10.739 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@560f8f1c
2024-06-22 01:14:10.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6688ce2c
2024-06-22 01:14:10.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6688ce2c
2024-06-22 01:14:10.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4d02ab4
2024-06-22 01:14:10.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4d02ab4
2024-06-22 01:14:10.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4d58a752
2024-06-22 01:14:10.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d58a752
2024-06-22 01:14:10.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f5ba376
2024-06-22 01:14:10.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f5ba376
2024-06-22 01:14:10.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1363e106
2024-06-22 01:14:10.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@137e4f3e
2024-06-22 01:14:10.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@137e4f3e
2024-06-22 01:14:10.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@137e4f3e
2024-06-22 01:14:10.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@52b768d1
2024-06-22 01:14:10.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@52b768d1
2024-06-22 01:14:10.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@52b768d1
2024-06-22 01:14:10.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40475b5a
2024-06-22 01:14:10.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@64527f25
2024-06-22 01:14:10.749 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4ff83bbd
2024-06-22 01:14:10.749 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4ff83bbd
2024-06-22 01:14:10.749 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4ff83bbd
2024-06-22 01:14:10.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c779071
2024-06-22 01:14:10.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c779071
2024-06-22 01:14:10.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c779071
2024-06-22 01:14:10.751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4cfe1b9c
2024-06-22 01:14:10.751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@217e82ef
2024-06-22 01:14:10.752 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@483d2db7
2024-06-22 01:14:10.753 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@483d2db7
2024-06-22 01:14:10.753 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6faa5bc1
2024-06-22 01:14:10.755 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@34508711
2024-06-22 01:14:10.755 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@34508711
2024-06-22 01:14:10.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@242f7ac2
2024-06-22 01:14:10.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@242f7ac2
2024-06-22 01:14:10.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@121c2c78
2024-06-22 01:14:10.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2ab7c4a1
2024-06-22 01:14:10.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3041dcaa
2024-06-22 01:14:10.760 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@745e8f62
2024-06-22 01:14:10.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@745e8f62
2024-06-22 01:14:10.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d964e64
2024-06-22 01:14:10.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4237a9e4
2024-06-22 01:14:10.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7220ec89
2024-06-22 01:14:10.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@70a8e77d
2024-06-22 01:14:10.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f627262
2024-06-22 01:14:10.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@206598e3
2024-06-22 01:14:10.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55d46cc2
2024-06-22 01:14:10.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62f0fa0a
2024-06-22 01:14:10.788 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-22 01:14:10.788 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-22 01:14:10.789 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-22 01:14:10.789 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-22 01:14:10.789 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-22 01:14:10.790 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-22 01:14:10.790 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-22 01:14:10.793 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-22 01:14:10.794 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-06-22 01:14:10.794 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-22 01:14:10.795 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-22 01:14:10.796 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-06-22 01:14:10.796 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-22 01:14:10.797 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-22 01:14:10.802 [JavaFX Application Thread] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-06-22 01:14:10.807 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/tour_planner_g5_db]
2024-06-22 01:14:10.808 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-22 01:14:10.808 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-06-22 01:14:10.810 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-06-22 01:14:10.811 [JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-06-22 01:14:11.059 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 16.3 (Debian 16.3-1.pgdg120+1)
      major : 16
      minor : 3
2024-06-22 01:14:11.059 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.7.2
      major : 42
      minor : 7
2024-06-22 01:14:11.060 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-06-22 01:14:11.072 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-06-22 01:14:11.086 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-22 01:14:11.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@16e2229a
2024-06-22 01:14:11.118 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@16e2229a
2024-06-22 01:14:11.118 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1f5ba376
2024-06-22 01:14:11.118 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d5c51a1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@e77faaa]
2024-06-22 01:14:11.143 [JavaFX Application Thread] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-22 01:14:11.151 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:14:11.164 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:14:11.168 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourModel
2024-06-22 01:14:11.170 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel on table tours
2024-06-22 01:14:11.187 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=tourid, insertable=true, updatable=false, unique=false}
2024-06-22 01:14:11.190 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-22 01:14:11.190 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:14:11.191 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:14:11.194 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:id]
2024-06-22 01:14:11.196 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:14:11.197 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:14:11.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourid)]), id, assigned, , ...)
2024-06-22 01:14:11.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=description, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
2024-06-22 01:14:11.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:description]
2024-06-22 01:14:11.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for description
2024-06-22 01:14:11.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property description
2024-06-22 01:14:11.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=destination, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property destination with lazy=false
2024-06-22 01:14:11.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:destination]
2024-06-22 01:14:11.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for destination
2024-06-22 01:14:11.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property destination
2024-06-22 01:14:11.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-22 01:14:11.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:distance]
2024-06-22 01:14:11.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-22 01:14:11.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-22 01:14:11.203 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.203 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-22 01:14:11.203 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:name]
2024-06-22 01:14:11.203 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-22 01:14:11.203 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-22 01:14:11.203 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=start, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.204 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property start with lazy=false
2024-06-22 01:14:11.204 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:start]
2024-06-22 01:14:11.204 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for start
2024-06-22 01:14:11.204 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property start
2024-06-22 01:14:11.204 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=time, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.204 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property time with lazy=false
2024-06-22 01:14:11.205 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:time]
2024-06-22 01:14:11.205 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for time
2024-06-22 01:14:11.205 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property time
2024-06-22 01:14:11.206 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-22 01:14:11.207 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-22 01:14:11.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:14:11.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:14:11.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourLogModel
2024-06-22 01:14:11.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel on table tourlogs
2024-06-22 01:14:11.216 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tourlogid, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.216 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-22 01:14:11.216 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:14:11.216 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:14:11.216 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:id]
2024-06-22 01:14:11.216 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:14:11.216 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:14:11.217 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourlogid)]), id, assigned, , ...)
2024-06-22 01:14:11.217 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.217 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2024-06-22 01:14:11.217 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:comment]
2024-06-22 01:14:11.217 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2024-06-22 01:14:11.217 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2024-06-22 01:14:11.218 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.218 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-06-22 01:14:11.218 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:date]
2024-06-22 01:14:11.218 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-06-22 01:14:11.218 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-06-22 01:14:11.218 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='difficultyid', referencedColumn='difficultyid', mappedBy=''}
2024-06-22 01:14:11.218 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.219 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-22 01:14:11.219 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.219 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-22 01:14:11.219 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:distance]
2024-06-22 01:14:11.219 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-22 01:14:11.219 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-22 01:14:11.219 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=rating, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.219 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property rating with lazy=false
2024-06-22 01:14:11.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:rating]
2024-06-22 01:14:11.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for rating
2024-06-22 01:14:11.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property rating
2024-06-22 01:14:11.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeHours, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeHours with lazy=false
2024-06-22 01:14:11.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeHours]
2024-06-22 01:14:11.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeHours
2024-06-22 01:14:11.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeHours
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeMinutes, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeMinutes with lazy=false
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeMinutes]
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeMinutes
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeMinutes
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=totaltime, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property totalTime with lazy=false
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:totalTime]
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for totalTime
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property totalTime
2024-06-22 01:14:11.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='tourid_fk', referencedColumn='tourid', mappedBy=''}
2024-06-22 01:14:11.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tour, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tour
2024-06-22 01:14:11.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-22 01:14:11.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-22 01:14:11.223 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:14:11.223 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:14:11.223 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourMapModel
2024-06-22 01:14:11.223 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel on table maps
2024-06-22 01:14:11.226 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.227 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-22 01:14:11.227 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:14:11.227 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:14:11.227 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:id]
2024-06-22 01:14:11.227 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:14:11.228 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:14:11.228 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-06-22 01:14:11.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=filename, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property filename with lazy=false
2024-06-22 01:14:11.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:filename]
2024-06-22 01:14:11.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for filename
2024-06-22 01:14:11.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property filename
2024-06-22 01:14:11.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=tourid_fk, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property tourId with lazy=false
2024-06-22 01:14:11.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:tourId]
2024-06-22 01:14:11.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for tourId
2024-06-22 01:14:11.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tourId
2024-06-22 01:14:11.230 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:14:11.230 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:14:11.230 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name DifficultyModel
2024-06-22 01:14:11.230 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel on table difficulties
2024-06-22 01:14:11.231 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficultyid, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.231 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-22 01:14:11.231 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:14:11.231 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:14:11.231 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:id]
2024-06-22 01:14:11.231 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:14:11.231 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:14:11.232 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(difficultyid)]), id, identity, , ...)
2024-06-22 01:14:11.232 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.232 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property difficulty with lazy=false
2024-06-22 01:14:11.232 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:difficulty]
2024-06-22 01:14:11.232 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for difficulty
2024-06-22 01:14:11.232 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-22 01:14:11.232 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:14:11.232 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:14:11.233 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TransportTypeModel
2024-06-22 01:14:11.233 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel on table transporttypes
2024-06-22 01:14:11.233 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=transporttypeid, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.233 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-22 01:14:11.234 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:14:11.234 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:14:11.234 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:id]
2024-06-22 01:14:11.234 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:14:11.234 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:14:11.234 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(transporttypeid)]), id, identity, , ...)
2024-06-22 01:14:11.235 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-22 01:14:11.235 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-22 01:14:11.235 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:name]
2024-06-22 01:14:11.235 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-22 01:14:11.235 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-22 01:14:11.236 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:14:11.236 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for description
2024-06-22 01:14:11.236 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for destination
2024-06-22 01:14:11.236 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-22 01:14:11.236 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-22 01:14:11.236 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for start
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for time
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for comment
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for rating
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeHours
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeMinutes
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for totalTime
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for filename
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for tourId
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:14:11.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for difficulty
2024-06-22 01:14:11.238 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:14:11.238 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-22 01:14:11.241 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourid] to be non-null as it is part of the primary key for table [tours]
2024-06-22 01:14:11.241 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourlogid] to be non-null as it is part of the primary key for table [tourlogs]
2024-06-22 01:14:11.241 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [maps]
2024-06-22 01:14:11.241 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [difficultyid] to be non-null as it is part of the primary key for table [difficulties]
2024-06-22 01:14:11.241 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [transporttypeid] to be non-null as it is part of the primary key for table [transporttypes]
2024-06-22 01:14:11.242 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:14:11.243 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:14:11.244 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:14:11.244 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:14:11.245 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:14:11.245 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:14:11.245 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:14:11.245 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:14:11.267 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-06-22 01:14:11.268 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-06-22 01:14:11.268 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-06-22 01:14:11.268 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-06-22 01:14:11.269 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-06-22 01:14:11.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-06-22 01:14:11.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-06-22 01:14:11.310 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:14:11.311 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:14:11.320 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-06-22 01:14:11.320 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=21, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Users\helen\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-web\21\javafx-web-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-media\21\javafx-media-21.jar;C:\Users\helen\.m2\repository\org\jacoco\org.jacoco.agent\0.8.8\org.jacoco.agent-0.8.8-runtime.jar;C:\Users\helen\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\helen\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\helen\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\helen\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\helen\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\helen\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\helen\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\helen\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\helen\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\helen\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\helen\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\helen\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\helen\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\helen\.m2\repository\org\postgresql\postgresql\42.7.2\postgresql-42.7.2.jar;C:\Users\helen\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.17.2\log4j-slf4j-impl-2.17.2.jar;C:\Users\helen\.m2\repository\com\squareup\okio\okio\2.8.0\okio-2.8.0.jar;C:\Users\helen\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.0\kotlin-stdlib-common-1.4.0.jar;C:\Users\helen\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.10\kotlin-stdlib-1.4.10.jar;C:\Users\helen\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\helen\.m2\repository\com\itextpdf\bouncy-castle-connector\8.0.4\bouncy-castle-connector-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\io\8.0.4\io-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\commons\8.0.4\commons-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\forms\8.0.4\forms-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\pdfa\8.0.4\pdfa-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\sign\8.0.4\sign-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\barcodes\8.0.4\barcodes-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\font-asian\8.0.4\font-asian-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\hyph\8.0.4\hyph-8.0.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Vienna, java.vm.specification.version=21, os.name=Windows 11, javafx.version=21, sun.java.launcher=SUN_STANDARD, user.country=AT, sun.boot.library.path=C:\Users\helen\.jdks\openjdk-21.0.1\bin, sun.java.command=technikum.at.tourplanner_swen2_team5/technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\helen, user.language=de, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\helen\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\helen\.m2\repository\com\squareup\okhttp3\okhttp\4.9.3\okhttp-4.9.3.jar;C:\Users\helen\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-web\21\javafx-web-21-win.jar;C:\Users\helen\.m2\repository\com\itextpdf\kernel\8.0.4\kernel-8.0.4.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\helen\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-media\21\javafx-media-21-win.jar;C:\Users\helen\.m2\repository\org\json\json\20210307\json-20210307.jar;C:\Users\helen\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-core\2.23.1\log4j-core-2.23.1.jar;C:\Users\helen\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\helen\.m2\repository\com\itextpdf\layout\8.0.4\layout-8.0.4.jar;C:\Users\helen\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\helen\OneDrive - FH Technikum Wien\FH\SS2024\SWEN2\TourPlanner_SWEN2_Team5\target\classes;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar, java.version.date=2023-10-17, java.home=C:\Users\helen\.jdks\openjdk-21.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, jdk.module.main.class=technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.module.main=technikum.at.tourplanner_swen2_team5, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.1+12-29, user.name=helen, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/tour_planner_g5_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\helen\AppData\Local\Temp\, java.version=21.0.1, user.dir=C:\Users\helen\OneDrive - FH Technikum Wien\FH\SS2024\SWEN2\TourPlanner_SWEN2_Team5, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6d9a150a, native.encoding=Cp1252, java.library.path=C:\Users\helen\.jdks\openjdk-21.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\xampp\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\Program Files\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\helen\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\helen\AppData\Local\Programs\Python\Python38\;C:\Users\helen\AppData\Local\Microsoft\WindowsApps;C:\Users\helen\AppData\Local\Programs\Microsoft VS Code\bin;PATH TO PYTHON;C:\Users\helen\AppData\Local\GitHubDesktop\bin;C:\Users\helen\AppData\Roaming\npm;C:\Users\helen\AppData\Roaming\Composer\vendor\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\msys64\ucrt64\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2023.2.4\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.1+12-29, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=65.0}
2024-06-22 01:14:11.330 [JavaFX Application Thread] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-06-22 01:14:11.331 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-06-22 01:14:11.331 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d5c51a1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd2995c]
2024-06-22 01:14:11.392 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-22 01:14:11.392 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:14:11.556 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-22 01:14:11.556 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:14:11.571 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.572 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.573 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.573 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.573 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.573 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.573 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-22 01:14:11.573 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:14:11.595 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.595 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.595 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.596 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.596 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.596 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.597 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-22 01:14:11.597 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:14:11.606 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.606 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.606 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-22 01:14:11.606 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:14:11.620 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.620 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:14:11.627 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:14:11.627 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select difficultyid from difficulties where difficultyid =?
2024-06-22 01:14:11.627 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select difficulty_.difficultyid, difficulty_.difficulty as difficul2_0_ from difficulties difficulty_ where difficulty_.difficultyid=?
2024-06-22 01:14:11.627 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into difficulties (difficulty, difficultyid) values (?, ?)
2024-06-22 01:14:11.627 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update difficulties set difficulty=? where difficultyid=?
2024-06-22 01:14:11.627 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from difficulties where difficultyid=?
2024-06-22 01:14:11.627 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into difficulties (difficulty) values (?)
2024-06-22 01:14:11.641 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434dc917]
2024-06-22 01:14:11.642 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-22 01:14:11.642 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:14:11.649 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:14:11.651 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
          - SQL table alias mapping - difficulty0_
          - alias suffix - 0_
          - suffixed key columns - {difficul1_0_0_}

2024-06-22 01:14:11.652 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel [NONE]: select difficulty0_.difficultyid as difficul1_0_0_, difficulty0_.difficulty as difficul2_0_0_ from difficulties difficulty0_ where difficulty0_.difficultyid=?
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from maps where id =?
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmapmod_.id, tourmapmod_.filename as filename2_1_, tourmapmod_.tourid_fk as tourid_f3_1_ from maps tourmapmod_ where tourmapmod_.id=?
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into maps (filename, tourid_fk, id) values (?, ?, ?)
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update maps set filename=?, tourid_fk=? where id=?
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from maps where id=?
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into maps (filename, tourid_fk) values (?, ?)
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba726e4]
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : filename
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tourId
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
          - SQL table alias mapping - tourmapmod0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-06-22 01:14:11.653 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel [NONE]: select tourmapmod0_.id as id1_1_0_, tourmapmod0_.filename as filename2_1_0_, tourmapmod0_.tourid_fk as tourid_f3_1_0_ from maps tourmapmod0_ where tourmapmod0_.id=?
2024-06-22 01:14:11.654 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:14:11.654 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourlogid from tourlogs where tourlogid =?
2024-06-22 01:14:11.654 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourlogmod_.tourlogid, tourlogmod_.comment as comment2_2_, tourlogmod_.date as date3_2_, tourlogmod_.difficultyid as difficul9_2_, tourlogmod_.distance as distance4_2_, tourlogmod_.rating as rating5_2_, tourlogmod_.timeHours as timehour6_2_, tourlogmod_.timeMinutes as timeminu7_2_, tourlogmod_.totaltime as totaltim8_2_, tourlogmod_.tourid_fk as tourid_10_2_, tourlogmod_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod_ where tourlogmod_.tourlogid=?
2024-06-22 01:14:11.654 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tourlogs (comment, date, difficultyid, distance, rating, timeHours, timeMinutes, totaltime, tourid_fk, transporttypeid_fk, tourlogid) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2024-06-22 01:14:11.654 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tourlogs set comment=?, date=?, difficultyid=?, distance=?, rating=?, timeHours=?, timeMinutes=?, totaltime=?, tourid_fk=?, transporttypeid_fk=? where tourlogid=?
2024-06-22 01:14:11.654 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tourlogs where tourlogid=?
2024-06-22 01:14:11.654 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616dd689]
2024-06-22 01:14:11.654 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2024-06-22 01:14:11.654 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-06-22 01:14:11.654 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-22 01:14:11.656 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299d1af9]
2024-06-22 01:14:11.657 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty.difficulty
2024-06-22 01:14:11.657 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-22 01:14:11.657 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : rating
2024-06-22 01:14:11.657 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeHours
2024-06-22 01:14:11.657 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeMinutes
2024-06-22 01:14:11.657 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : totalTime
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47581c1a]
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.description
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.destination
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.distance
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.name
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.start
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.time
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601c03]
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType.name
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fe0ac82]
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-22 01:14:11.658 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:14:11.659 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:14:11.659 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.difficulty)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:2>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour)
             - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:3>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour.transportType)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:4>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - SQL table alias mapping - tourlogmod0_
          - alias suffix - 0_
          - suffixed key columns - {tourlogi1_2_0_}
          - JOIN (JoinDefinedByMetadata(difficulty)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
                - SQL table alias mapping - difficulty1_
                - alias suffix - 1_
                - suffixed key columns - {difficul1_0_1_}
          - JOIN (JoinDefinedByMetadata(tour)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
                - SQL table alias mapping - tourmodel2_
                - alias suffix - 2_
                - suffixed key columns - {tourid1_3_2_}
                - JOIN (JoinDefinedByMetadata(transportType)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                      - SQL table alias mapping - transportt3_
                      - alias suffix - 3_
                      - suffixed key columns - {transpor1_4_3_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt4_
                - alias suffix - 4_
                - suffixed key columns - {transpor1_4_4_}

2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel [NONE]: select tourlogmod0_.tourlogid as tourlogi1_2_0_, tourlogmod0_.comment as comment2_2_0_, tourlogmod0_.date as date3_2_0_, tourlogmod0_.difficultyid as difficul9_2_0_, tourlogmod0_.distance as distance4_2_0_, tourlogmod0_.rating as rating5_2_0_, tourlogmod0_.timeHours as timehour6_2_0_, tourlogmod0_.timeMinutes as timeminu7_2_0_, tourlogmod0_.totaltime as totaltim8_2_0_, tourlogmod0_.tourid_fk as tourid_10_2_0_, tourlogmod0_.transporttypeid_fk as transpo11_2_0_, difficulty1_.difficultyid as difficul1_0_1_, difficulty1_.difficulty as difficul2_0_1_, tourmodel2_.tourid as tourid1_3_2_, tourmodel2_.description as descript2_3_2_, tourmodel2_.destination as destinat3_3_2_, tourmodel2_.distance as distance4_3_2_, tourmodel2_.name as name5_3_2_, tourmodel2_.start as start6_3_2_, tourmodel2_.time as time7_3_2_, tourmodel2_.transporttypeid_fk as transpor8_3_2_, transportt3_.transporttypeid as transpor1_4_3_, transportt3_.name as name2_4_3_, transportt4_.transporttypeid as transpor1_4_4_, transportt4_.name as name2_4_4_ from tourlogs tourlogmod0_ left outer join difficulties difficulty1_ on tourlogmod0_.difficultyid=difficulty1_.difficultyid inner join tours tourmodel2_ on tourlogmod0_.tourid_fk=tourmodel2_.tourid inner join transporttypes transportt3_ on tourmodel2_.transporttypeid_fk=transportt3_.transporttypeid left outer join transporttypes transportt4_ on tourlogmod0_.transporttypeid_fk=transportt4_.transporttypeid where tourlogmod0_.tourlogid=?
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select transporttypeid from transporttypes where transporttypeid =?
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select transportt_.transporttypeid, transportt_.name as name2_4_ from transporttypes transportt_ where transportt_.transporttypeid=?
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into transporttypes (name, transporttypeid) values (?, ?)
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update transporttypes set name=? where transporttypeid=?
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from transporttypes where transporttypeid=?
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into transporttypes (name) values (?)
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9767d72]
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:14:11.660 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
          - SQL table alias mapping - transportt0_
          - alias suffix - 0_
          - suffixed key columns - {transpor1_4_0_}

2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel [NONE]: select transportt0_.transporttypeid as transpor1_4_0_, transportt0_.name as name2_4_0_ from transporttypes transportt0_ where transportt0_.transporttypeid=?
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourid from tours where tourid =?
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmodel_.tourid, tourmodel_.description as descript2_3_, tourmodel_.destination as destinat3_3_, tourmodel_.distance as distance4_3_, tourmodel_.name as name5_3_, tourmodel_.start as start6_3_, tourmodel_.time as time7_3_, tourmodel_.transporttypeid_fk as transpor8_3_ from tours tourmodel_ where tourmodel_.tourid=?
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tours (description, destination, distance, name, start, time, transporttypeid_fk, tourid) values (?, ?, ?, ?, ?, ?, ?, ?)
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tours set description=?, destination=?, distance=?, name=?, start=?, time=?, transporttypeid_fk=? where tourid=?
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tours where tourid=?
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53609511]
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : destination
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : start
2024-06-22 01:14:11.661 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : time
2024-06-22 01:14:11.662 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-22 01:14:11.662 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35c2e200]
2024-06-22 01:14:11.662 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-22 01:14:11.662 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:14:11.662 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:14:11.662 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - SQL table alias mapping - tourmodel0_
          - alias suffix - 0_
          - suffixed key columns - {tourid1_3_0_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt1_
                - alias suffix - 1_
                - suffixed key columns - {transpor1_4_1_}

2024-06-22 01:14:11.662 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel [NONE]: select tourmodel0_.tourid as tourid1_3_0_, tourmodel0_.description as descript2_3_0_, tourmodel0_.destination as destinat3_3_0_, tourmodel0_.distance as distance4_3_0_, tourmodel0_.name as name5_3_0_, tourmodel0_.start as start6_3_0_, tourmodel0_.time as time7_3_0_, tourmodel0_.transporttypeid_fk as transpor8_3_0_, transportt1_.transporttypeid as transpor1_4_1_, transportt1_.name as name2_4_1_ from tours tourmodel0_ inner join transporttypes transportt1_ on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid where tourmodel0_.tourid=?
2024-06-22 01:14:11.688 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@243486fc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-06-22 01:14:11.749 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : difficulties
2024-06-22 01:14:11.750 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : maps
2024-06-22 01:14:11.750 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tourlogs
2024-06-22 01:14:11.750 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tours
2024-06-22 01:14:11.750 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : transporttypes
2024-06-22 01:14:11.871 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-06-22 01:14:11.872 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-22 01:14:11.875 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-22 01:14:11.876 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-22 01:14:11.880 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:14:11.882 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@609d5ef5
2024-06-22 01:14:11.884 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
2024-06-22 01:14:11.884 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-06-22 01:14:11.886 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@79c4c7ef
2024-06-22 01:14:11.887 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 920cd2c0-4d49-469a-a931-9b236c7004d0 (<unnamed>)
2024-06-22 01:14:11.887 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-22 01:14:11.888 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.DAL.HibernateUtil - Hibernate SessionFactory created successfully
2024-06-22 01:14:11.950 [JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-06-22 01:14:12.001 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:14:12.007 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:12.024 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourModel'

2024-06-22 01:14:12.042 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:14:12.048 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-22 01:14:12.049 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:14:12.049 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) )
2024-06-22 01:14:12.051 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:14:12.053 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:14:12.056 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-22 01:14:12.056 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:14:12.057 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}

2024-06-22 01:14:12.057 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:12.063 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:14:12.064 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_
2024-06-22 01:14:12.064 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:12.074 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-22 01:14:12.080 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:14:12.084 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:12.090 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:14:12.090 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:14:12.091 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:12.091 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:14:12.091 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:14:12.093 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.096 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:14:12.103 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:12.104 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:12.104 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:14:12.105 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:12.107 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:14:12.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:12.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:14:12.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:14:12.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:14:12.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:14:12.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:14:12.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:14:12.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:14:12.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:14:12.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.110 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:14:12.112 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:12.112 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:14:12.113 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:14:12.113 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.113 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:14:12.113 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-22 01:14:12.113 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:14:12.114 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:14:12.136 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-22 01:14:12.139 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:14:12.139 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:12.139 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:14:12.140 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.141 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:14:12.145 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:12.145 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:12.145 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:14:12.145 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.145 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:14:12.146 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.147 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:14:12.150 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:12.150 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:14:12.150 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:14:12.150 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:12.150 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:14:12.150 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-22 01:14:12.151 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:14:12.151 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:14:13.995 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-22 01:14:13.995 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:13.996 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-22 01:14:13.996 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:14:13.997 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-22 01:14:13.998 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-22 01:14:13.999 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@763f4d21
2024-06-22 01:14:13.999 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourmodel0_.tourid
2024-06-22 01:14:14.000 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:14:14.000 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) ( WHERE ( = ( tourmodel0_.tourid {synthetic-alias} id ) ? ) ) )
2024-06-22 01:14:14.000 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:14:14.001 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-22 01:14:14.001 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-22 01:14:14.001 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:14:14.001 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourmodel0_.tourid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourmodel0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@763f4d21}

2024-06-22 01:14:14.001 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:14.002 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-22 01:14:14.002 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_ where tourmodel0_.tourid=?
2024-06-22 01:14:14.002 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:14.005 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_ 
    where
        tourmodel0_.tourid=?
2024-06-22 01:14:14.010 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:14:14.010 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.011 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:14:14.013 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:14.013 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:14.013 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:14:14.013 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.014 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:14.014 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:14:14.014 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:14.014 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:14:14.051 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:14:14.051 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:14.052 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourLogModel'

2024-06-22 01:14:14.052 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:14:14.052 [Thread-4] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-22 01:14:14.053 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:14:14.053 [Thread-4] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) )
2024-06-22 01:14:14.053 [Thread-4] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:14:14.053 [Thread-4] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:14:14.053 [Thread-4] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-22 01:14:14.054 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:14:14.054 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}

2024-06-22 01:14:14.054 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:14.054 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:14:14.054 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_
2024-06-22 01:14:14.054 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:14.055 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-22 01:14:14.058 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:14:14.058 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:14:14.059 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.060 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:14:14.063 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:14:14.064 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.065 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:14:14.068 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:14:14.069 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.070 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:14.070 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:14.070 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:14:14.070 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.070 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:14.070 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:14:14.070 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:14:14.070 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:14:14.071 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.072 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:14:14.075 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:14.076 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:14:14.076 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:14:14.076 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.076 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:14:14.076 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:14:14.077 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = ecscd
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.078 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 12.06.2024
2024-06-22 01:14:14.079 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.079 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 4
2024-06-22 01:14:14.079 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.079 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:14:14.082 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:14.083 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:14:14.083 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:14:14.083 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 5
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 5
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 1h 0min
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 3
2024-06-22 01:14:14.084 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.085 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:14:14.087 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:14.087 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:14:14.087 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:14:14.088 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:14.088 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:14:14.088 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3
2024-06-22 01:14:14.088 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:14:14.088 [Thread-4] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:14:18.307 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel WHERE id = :id
2024-06-22 01:14:18.308 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:18.309 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourLogModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-22 01:14:18.309 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:14:18.309 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-22 01:14:18.309 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-22 01:14:18.310 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@763f4d21
2024-06-22 01:14:18.310 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourlogmod0_.tourlogid
2024-06-22 01:14:18.310 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:14:18.310 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) ( WHERE ( = ( tourlogmod0_.tourlogid {synthetic-alias} id ) ? ) ) )
2024-06-22 01:14:18.310 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:14:18.312 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-22 01:14:18.312 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-22 01:14:18.312 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:14:18.312 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourlogmod0_.tourlogid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourlogmod0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@763f4d21}

2024-06-22 01:14:18.312 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:18.312 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel WHERE id = :id
2024-06-22 01:14:18.312 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_ where tourlogmod0_.tourlogid=?
2024-06-22 01:14:18.312 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:18.313 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_ 
    where
        tourlogmod0_.tourlogid=?
2024-06-22 01:14:18.318 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:14:18.318 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:14:18.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:14:18.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:14:18.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:14:18.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:14:18.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.319 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:14:18.322 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:18.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:14:18.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:14:18.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:14:18.322 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.323 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:14:18.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.329 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:14:18.329 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:18.329 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:14:18.329 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.329 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:18.329 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:14:18.329 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:14:18.329 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.329 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:14:18.329 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:14:18.378 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel 
2024-06-22 01:14:18.379 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:18.379 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'DifficultyModel'

2024-06-22 01:14:18.379 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:14:18.379 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel (<no alias>) -> difficulty0_
2024-06-22 01:14:18.379 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:14:18.379 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} difficulties difficulty0_ ) )
2024-06-22 01:14:18.380 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:14:18.380 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity DifficultyModel): [difficulties]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:14:18.380 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [difficulties difficulty0_]
2024-06-22 01:14:18.380 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:14:18.380 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (difficulties)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'difficulty0_.difficultyid as difficul1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=difficulties,tableAlias=difficulty0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'difficulty0_.difficulty as difficul2_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[difficulty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'difficulties difficulty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=difficulties,tableAlias=difficulty0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel}}

2024-06-22 01:14:18.380 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:18.380 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel 
2024-06-22 01:14:18.380 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select difficulty0_.difficultyid as difficul1_0_, difficulty0_.difficulty as difficul2_0_ from difficulties difficulty0_
2024-06-22 01:14:18.380 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:18.381 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_,
        difficulty0_.difficulty as difficul2_0_ 
    from
        difficulties difficulty0_
2024-06-22 01:14:18.383 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:14:18.383 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:14:18.383 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:14:18.383 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Easy
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:14:18.384 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:14:18.386 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:14:18.386 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:18.387 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TransportTypeModel'

2024-06-22 01:14:18.387 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:14:18.387 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel (<no alias>) -> transportt0_
2024-06-22 01:14:18.387 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:14:18.387 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} transporttypes transportt0_ ) )
2024-06-22 01:14:18.387 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:14:18.388 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TransportTypeModel): [transporttypes]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:14:18.388 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [transporttypes transportt0_]
2024-06-22 01:14:18.388 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:14:18.388 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (transporttypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'transportt0_.transporttypeid as transpor1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transporttypes,tableAlias=transportt0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'transportt0_.name as name2_4_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[transportt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'transporttypes transportt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transporttypes,tableAlias=transportt0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel}}

2024-06-22 01:14:18.388 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:18.388 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:14:18.388 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select transportt0_.transporttypeid as transpor1_4_, transportt0_.name as name2_4_ from transporttypes transportt0_
2024-06-22 01:14:18.388 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:14:18.388 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-22 01:14:18.391 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:14:18.391 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:14:18.391 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:14:18.391 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:14:18.392 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:14:41.057 [Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
2024-06-22 01:15:56.595 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-22 01:15:56.606 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-22 01:15:56.608 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-22 01:15:56.613 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-22 01:15:56.638 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version [WORKING]
2024-06-22 01:15:56.640 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-06-22 01:15:56.818 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2024-06-22 01:15:56.819 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2024-06-22 01:15:56.826 [JavaFX Application Thread] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-22 01:15:57.066 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-22 01:15:57.066 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-22 01:15:57.066 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-22 01:15:57.074 [JavaFX Application Thread] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-06-22 01:15:57.074 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
2024-06-22 01:15:57.084 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-22 01:15:57.085 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-06-22 01:15:57.100 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-22 01:15:57.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@690ad033
2024-06-22 01:15:57.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@690ad033
2024-06-22 01:15:57.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@690ad033
2024-06-22 01:15:57.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@336eeece
2024-06-22 01:15:57.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c49c61
2024-06-22 01:15:57.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@8fbd586
2024-06-22 01:15:57.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@636d0c60
2024-06-22 01:15:57.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@636d0c60
2024-06-22 01:15:57.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@636d0c60
2024-06-22 01:15:57.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@40cd40c6
2024-06-22 01:15:57.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@40cd40c6
2024-06-22 01:15:57.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40cd40c6
2024-06-22 01:15:57.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@15adfd84
2024-06-22 01:15:57.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@15adfd84
2024-06-22 01:15:57.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15adfd84
2024-06-22 01:15:57.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@37b810b1
2024-06-22 01:15:57.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@37b810b1
2024-06-22 01:15:57.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37b810b1
2024-06-22 01:15:57.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@54bc2f20
2024-06-22 01:15:57.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@54bc2f20
2024-06-22 01:15:57.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54bc2f20
2024-06-22 01:15:57.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4ebbf13d
2024-06-22 01:15:57.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4ebbf13d
2024-06-22 01:15:57.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4ebbf13d
2024-06-22 01:15:57.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@17fe7173
2024-06-22 01:15:57.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@17fe7173
2024-06-22 01:15:57.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@17fe7173
2024-06-22 01:15:57.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3fab4839
2024-06-22 01:15:57.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3fab4839
2024-06-22 01:15:57.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fd43e8d
2024-06-22 01:15:57.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fd43e8d
2024-06-22 01:15:57.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@763f4d21
2024-06-22 01:15:57.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@763f4d21
2024-06-22 01:15:57.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@777b4580
2024-06-22 01:15:57.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@16527972
2024-06-22 01:15:57.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@89d07e0
2024-06-22 01:15:57.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@89d07e0
2024-06-22 01:15:57.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@398e8ce0
2024-06-22 01:15:57.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@398e8ce0
2024-06-22 01:15:57.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5935fc94
2024-06-22 01:15:57.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5935fc94
2024-06-22 01:15:57.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@d96da2c
2024-06-22 01:15:57.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@d96da2c
2024-06-22 01:15:57.159 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@78960404
2024-06-22 01:15:57.159 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@78960404
2024-06-22 01:15:57.160 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7c926938
2024-06-22 01:15:57.160 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7c926938
2024-06-22 01:15:57.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@58cc34e2
2024-06-22 01:15:57.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@58cc34e2
2024-06-22 01:15:57.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@504518fe
2024-06-22 01:15:57.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@504518fe
2024-06-22 01:15:57.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19bf048
2024-06-22 01:15:57.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19bf048
2024-06-22 01:15:57.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@420d3af0
2024-06-22 01:15:57.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@420d3af0
2024-06-22 01:15:57.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@b26d14f
2024-06-22 01:15:57.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b26d14f
2024-06-22 01:15:57.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5374852e
2024-06-22 01:15:57.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5374852e
2024-06-22 01:15:57.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5374852e
2024-06-22 01:15:57.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b01942f
2024-06-22 01:15:57.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1298f749
2024-06-22 01:15:57.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1298f749
2024-06-22 01:15:57.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1298f749
2024-06-22 01:15:57.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ad67b76
2024-06-22 01:15:57.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3be1c305
2024-06-22 01:15:57.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@560f8f1c
2024-06-22 01:15:57.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@560f8f1c
2024-06-22 01:15:57.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6688ce2c
2024-06-22 01:15:57.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6688ce2c
2024-06-22 01:15:57.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4d02ab4
2024-06-22 01:15:57.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4d02ab4
2024-06-22 01:15:57.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4d58a752
2024-06-22 01:15:57.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d58a752
2024-06-22 01:15:57.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f5ba376
2024-06-22 01:15:57.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f5ba376
2024-06-22 01:15:57.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1363e106
2024-06-22 01:15:57.177 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@137e4f3e
2024-06-22 01:15:57.177 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@137e4f3e
2024-06-22 01:15:57.177 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@137e4f3e
2024-06-22 01:15:57.178 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@52b768d1
2024-06-22 01:15:57.178 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@52b768d1
2024-06-22 01:15:57.178 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@52b768d1
2024-06-22 01:15:57.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40475b5a
2024-06-22 01:15:57.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@64527f25
2024-06-22 01:15:57.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4ff83bbd
2024-06-22 01:15:57.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4ff83bbd
2024-06-22 01:15:57.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4ff83bbd
2024-06-22 01:15:57.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c779071
2024-06-22 01:15:57.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c779071
2024-06-22 01:15:57.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c779071
2024-06-22 01:15:57.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4cfe1b9c
2024-06-22 01:15:57.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@217e82ef
2024-06-22 01:15:57.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@483d2db7
2024-06-22 01:15:57.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@483d2db7
2024-06-22 01:15:57.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6faa5bc1
2024-06-22 01:15:57.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@34508711
2024-06-22 01:15:57.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@34508711
2024-06-22 01:15:57.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@242f7ac2
2024-06-22 01:15:57.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@242f7ac2
2024-06-22 01:15:57.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@121c2c78
2024-06-22 01:15:57.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2ab7c4a1
2024-06-22 01:15:57.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3041dcaa
2024-06-22 01:15:57.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@745e8f62
2024-06-22 01:15:57.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@745e8f62
2024-06-22 01:15:57.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d964e64
2024-06-22 01:15:57.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4237a9e4
2024-06-22 01:15:57.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7220ec89
2024-06-22 01:15:57.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@70a8e77d
2024-06-22 01:15:57.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f627262
2024-06-22 01:15:57.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@206598e3
2024-06-22 01:15:57.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55d46cc2
2024-06-22 01:15:57.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62f0fa0a
2024-06-22 01:15:57.217 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-22 01:15:57.218 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-22 01:15:57.219 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-22 01:15:57.219 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-22 01:15:57.219 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-22 01:15:57.220 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-22 01:15:57.221 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-22 01:15:57.222 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-22 01:15:57.222 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-06-22 01:15:57.223 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-22 01:15:57.223 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-22 01:15:57.224 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-06-22 01:15:57.224 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-22 01:15:57.225 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-22 01:15:57.229 [JavaFX Application Thread] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-06-22 01:15:57.233 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/tour_planner_g5_db]
2024-06-22 01:15:57.234 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-22 01:15:57.234 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-06-22 01:15:57.237 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-06-22 01:15:57.237 [JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-06-22 01:15:57.465 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 16.3 (Debian 16.3-1.pgdg120+1)
      major : 16
      minor : 3
2024-06-22 01:15:57.466 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.7.2
      major : 42
      minor : 7
2024-06-22 01:15:57.466 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-06-22 01:15:57.478 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-06-22 01:15:57.492 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-22 01:15:57.522 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6de94231
2024-06-22 01:15:57.523 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6de94231
2024-06-22 01:15:57.523 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1f5ba376
2024-06-22 01:15:57.524 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f75578] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43720951]
2024-06-22 01:15:57.549 [JavaFX Application Thread] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-22 01:15:57.557 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:15:57.568 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:15:57.571 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourModel
2024-06-22 01:15:57.573 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel on table tours
2024-06-22 01:15:57.589 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=tourid, insertable=true, updatable=false, unique=false}
2024-06-22 01:15:57.591 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-22 01:15:57.591 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:15:57.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:15:57.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:id]
2024-06-22 01:15:57.595 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:15:57.596 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:15:57.597 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourid)]), id, assigned, , ...)
2024-06-22 01:15:57.597 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=description, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.597 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
2024-06-22 01:15:57.597 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:description]
2024-06-22 01:15:57.597 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for description
2024-06-22 01:15:57.598 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property description
2024-06-22 01:15:57.598 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=destination, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.598 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property destination with lazy=false
2024-06-22 01:15:57.598 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:destination]
2024-06-22 01:15:57.598 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for destination
2024-06-22 01:15:57.598 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property destination
2024-06-22 01:15:57.598 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.598 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-22 01:15:57.598 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:distance]
2024-06-22 01:15:57.599 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-22 01:15:57.599 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-22 01:15:57.599 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.599 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-22 01:15:57.599 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:name]
2024-06-22 01:15:57.599 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-22 01:15:57.599 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-22 01:15:57.599 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=start, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.599 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property start with lazy=false
2024-06-22 01:15:57.599 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:start]
2024-06-22 01:15:57.600 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for start
2024-06-22 01:15:57.600 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property start
2024-06-22 01:15:57.600 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=time, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.600 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property time with lazy=false
2024-06-22 01:15:57.600 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:time]
2024-06-22 01:15:57.600 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for time
2024-06-22 01:15:57.600 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property time
2024-06-22 01:15:57.601 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-22 01:15:57.602 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.604 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-22 01:15:57.609 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:15:57.609 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:15:57.609 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourLogModel
2024-06-22 01:15:57.609 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel on table tourlogs
2024-06-22 01:15:57.610 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tourlogid, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.610 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-22 01:15:57.610 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:15:57.610 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:15:57.610 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:id]
2024-06-22 01:15:57.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:15:57.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:15:57.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourlogid)]), id, assigned, , ...)
2024-06-22 01:15:57.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2024-06-22 01:15:57.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:comment]
2024-06-22 01:15:57.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2024-06-22 01:15:57.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2024-06-22 01:15:57.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:date]
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='difficultyid', referencedColumn='difficultyid', mappedBy=''}
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:distance]
2024-06-22 01:15:57.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-22 01:15:57.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-22 01:15:57.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=rating, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property rating with lazy=false
2024-06-22 01:15:57.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:rating]
2024-06-22 01:15:57.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for rating
2024-06-22 01:15:57.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property rating
2024-06-22 01:15:57.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeHours, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeHours with lazy=false
2024-06-22 01:15:57.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeHours]
2024-06-22 01:15:57.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeHours
2024-06-22 01:15:57.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeHours
2024-06-22 01:15:57.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeMinutes, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeMinutes with lazy=false
2024-06-22 01:15:57.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeMinutes]
2024-06-22 01:15:57.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeMinutes
2024-06-22 01:15:57.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeMinutes
2024-06-22 01:15:57.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=totaltime, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property totalTime with lazy=false
2024-06-22 01:15:57.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:totalTime]
2024-06-22 01:15:57.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for totalTime
2024-06-22 01:15:57.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property totalTime
2024-06-22 01:15:57.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='tourid_fk', referencedColumn='tourid', mappedBy=''}
2024-06-22 01:15:57.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tour, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tour
2024-06-22 01:15:57.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-22 01:15:57.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-22 01:15:57.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:15:57.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:15:57.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourMapModel
2024-06-22 01:15:57.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel on table maps
2024-06-22 01:15:57.619 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.620 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-22 01:15:57.620 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:15:57.620 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:15:57.620 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:id]
2024-06-22 01:15:57.620 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:15:57.620 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:15:57.621 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-06-22 01:15:57.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=filename, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property filename with lazy=false
2024-06-22 01:15:57.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:filename]
2024-06-22 01:15:57.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for filename
2024-06-22 01:15:57.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property filename
2024-06-22 01:15:57.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=tourid_fk, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property tourId with lazy=false
2024-06-22 01:15:57.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:tourId]
2024-06-22 01:15:57.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for tourId
2024-06-22 01:15:57.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tourId
2024-06-22 01:15:57.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:15:57.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:15:57.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name DifficultyModel
2024-06-22 01:15:57.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel on table difficulties
2024-06-22 01:15:57.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficultyid, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.624 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-22 01:15:57.624 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:15:57.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:15:57.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:id]
2024-06-22 01:15:57.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:15:57.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:15:57.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(difficultyid)]), id, identity, , ...)
2024-06-22 01:15:57.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property difficulty with lazy=false
2024-06-22 01:15:57.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:difficulty]
2024-06-22 01:15:57.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for difficulty
2024-06-22 01:15:57.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-22 01:15:57.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:15:57.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:15:57.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TransportTypeModel
2024-06-22 01:15:57.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel on table transporttypes
2024-06-22 01:15:57.626 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=transporttypeid, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.626 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-22 01:15:57.626 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:15:57.626 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:15:57.626 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:id]
2024-06-22 01:15:57.627 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:15:57.627 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:15:57.627 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(transporttypeid)]), id, identity, , ...)
2024-06-22 01:15:57.627 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-22 01:15:57.627 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-22 01:15:57.627 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:name]
2024-06-22 01:15:57.627 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-22 01:15:57.627 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-22 01:15:57.628 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:15:57.628 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for description
2024-06-22 01:15:57.628 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for destination
2024-06-22 01:15:57.628 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-22 01:15:57.628 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-22 01:15:57.628 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for start
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for time
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for comment
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for rating
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeHours
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeMinutes
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for totalTime
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for filename
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for tourId
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for difficulty
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:15:57.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-22 01:15:57.632 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourid] to be non-null as it is part of the primary key for table [tours]
2024-06-22 01:15:57.632 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourlogid] to be non-null as it is part of the primary key for table [tourlogs]
2024-06-22 01:15:57.633 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [maps]
2024-06-22 01:15:57.633 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [difficultyid] to be non-null as it is part of the primary key for table [difficulties]
2024-06-22 01:15:57.633 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [transporttypeid] to be non-null as it is part of the primary key for table [transporttypes]
2024-06-22 01:15:57.633 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:15:57.635 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:15:57.636 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:15:57.636 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:15:57.637 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:15:57.637 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:15:57.637 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:15:57.637 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:15:57.657 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-06-22 01:15:57.658 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-06-22 01:15:57.658 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-06-22 01:15:57.658 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-06-22 01:15:57.658 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-06-22 01:15:57.658 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-06-22 01:15:57.659 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-06-22 01:15:57.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
2024-06-22 01:15:57.661 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-06-22 01:15:57.661 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
2024-06-22 01:15:57.661 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-06-22 01:15:57.661 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
2024-06-22 01:15:57.661 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-06-22 01:15:57.661 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-06-22 01:15:57.661 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-06-22 01:15:57.661 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-06-22 01:15:57.661 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-06-22 01:15:57.661 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-06-22 01:15:57.662 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-06-22 01:15:57.706 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:15:57.707 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:15:57.719 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-06-22 01:15:57.720 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=21, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Users\helen\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-web\21\javafx-web-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-media\21\javafx-media-21.jar;C:\Users\helen\.m2\repository\org\jacoco\org.jacoco.agent\0.8.8\org.jacoco.agent-0.8.8-runtime.jar;C:\Users\helen\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\helen\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\helen\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\helen\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\helen\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\helen\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\helen\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\helen\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\helen\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\helen\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\helen\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\helen\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\helen\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\helen\.m2\repository\org\postgresql\postgresql\42.7.2\postgresql-42.7.2.jar;C:\Users\helen\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.17.2\log4j-slf4j-impl-2.17.2.jar;C:\Users\helen\.m2\repository\com\squareup\okio\okio\2.8.0\okio-2.8.0.jar;C:\Users\helen\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.0\kotlin-stdlib-common-1.4.0.jar;C:\Users\helen\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.10\kotlin-stdlib-1.4.10.jar;C:\Users\helen\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\helen\.m2\repository\com\itextpdf\bouncy-castle-connector\8.0.4\bouncy-castle-connector-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\io\8.0.4\io-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\commons\8.0.4\commons-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\forms\8.0.4\forms-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\pdfa\8.0.4\pdfa-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\sign\8.0.4\sign-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\barcodes\8.0.4\barcodes-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\font-asian\8.0.4\font-asian-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\hyph\8.0.4\hyph-8.0.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Vienna, java.vm.specification.version=21, os.name=Windows 11, javafx.version=21, sun.java.launcher=SUN_STANDARD, user.country=AT, sun.boot.library.path=C:\Users\helen\.jdks\openjdk-21.0.1\bin, sun.java.command=technikum.at.tourplanner_swen2_team5/technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\helen, user.language=de, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\helen\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\helen\.m2\repository\com\squareup\okhttp3\okhttp\4.9.3\okhttp-4.9.3.jar;C:\Users\helen\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-web\21\javafx-web-21-win.jar;C:\Users\helen\.m2\repository\com\itextpdf\kernel\8.0.4\kernel-8.0.4.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\helen\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-media\21\javafx-media-21-win.jar;C:\Users\helen\.m2\repository\org\json\json\20210307\json-20210307.jar;C:\Users\helen\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-core\2.23.1\log4j-core-2.23.1.jar;C:\Users\helen\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\helen\.m2\repository\com\itextpdf\layout\8.0.4\layout-8.0.4.jar;C:\Users\helen\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\helen\OneDrive - FH Technikum Wien\FH\SS2024\SWEN2\TourPlanner_SWEN2_Team5\target\classes;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar, java.version.date=2023-10-17, java.home=C:\Users\helen\.jdks\openjdk-21.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, jdk.module.main.class=technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.module.main=technikum.at.tourplanner_swen2_team5, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.1+12-29, user.name=helen, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/tour_planner_g5_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\helen\AppData\Local\Temp\, java.version=21.0.1, user.dir=C:\Users\helen\OneDrive - FH Technikum Wien\FH\SS2024\SWEN2\TourPlanner_SWEN2_Team5, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@fcd529e, native.encoding=Cp1252, java.library.path=C:\Users\helen\.jdks\openjdk-21.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\xampp\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\Program Files\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\helen\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\helen\AppData\Local\Programs\Python\Python38\;C:\Users\helen\AppData\Local\Microsoft\WindowsApps;C:\Users\helen\AppData\Local\Programs\Microsoft VS Code\bin;PATH TO PYTHON;C:\Users\helen\AppData\Local\GitHubDesktop\bin;C:\Users\helen\AppData\Roaming\npm;C:\Users\helen\AppData\Roaming\Composer\vendor\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\msys64\ucrt64\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2023.2.4\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.1+12-29, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=65.0}
2024-06-22 01:15:57.733 [JavaFX Application Thread] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-06-22 01:15:57.734 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-06-22 01:15:57.734 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f75578] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@14683219]
2024-06-22 01:15:57.787 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-22 01:15:57.787 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:15:57.954 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-22 01:15:57.954 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:15:57.972 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:57.974 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:57.974 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:57.974 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:57.974 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:57.975 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:57.975 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-22 01:15:57.975 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:15:58.000 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:58.001 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:58.001 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:58.001 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:58.001 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:58.001 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:58.002 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-22 01:15:58.002 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:15:58.012 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:58.014 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:58.014 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-22 01:15:58.014 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:15:58.028 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:58.028 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:15:58.035 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:15:58.035 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select difficultyid from difficulties where difficultyid =?
2024-06-22 01:15:58.035 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select difficulty_.difficultyid, difficulty_.difficulty as difficul2_0_ from difficulties difficulty_ where difficulty_.difficultyid=?
2024-06-22 01:15:58.035 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into difficulties (difficulty, difficultyid) values (?, ?)
2024-06-22 01:15:58.035 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update difficulties set difficulty=? where difficultyid=?
2024-06-22 01:15:58.035 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from difficulties where difficultyid=?
2024-06-22 01:15:58.035 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into difficulties (difficulty) values (?)
2024-06-22 01:15:58.050 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cd1bb70]
2024-06-22 01:15:58.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-22 01:15:58.051 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:15:58.057 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:15:58.059 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
          - SQL table alias mapping - difficulty0_
          - alias suffix - 0_
          - suffixed key columns - {difficul1_0_0_}

2024-06-22 01:15:58.060 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel [NONE]: select difficulty0_.difficultyid as difficul1_0_0_, difficulty0_.difficulty as difficul2_0_0_ from difficulties difficulty0_ where difficulty0_.difficultyid=?
2024-06-22 01:15:58.060 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from maps where id =?
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmapmod_.id, tourmapmod_.filename as filename2_1_, tourmapmod_.tourid_fk as tourid_f3_1_ from maps tourmapmod_ where tourmapmod_.id=?
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into maps (filename, tourid_fk, id) values (?, ?, ?)
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update maps set filename=?, tourid_fk=? where id=?
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from maps where id=?
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into maps (filename, tourid_fk) values (?, ?)
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac8c13f]
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : filename
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tourId
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:15:58.061 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
          - SQL table alias mapping - tourmapmod0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel [NONE]: select tourmapmod0_.id as id1_1_0_, tourmapmod0_.filename as filename2_1_0_, tourmapmod0_.tourid_fk as tourid_f3_1_0_ from maps tourmapmod0_ where tourmapmod0_.id=?
2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourlogid from tourlogs where tourlogid =?
2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourlogmod_.tourlogid, tourlogmod_.comment as comment2_2_, tourlogmod_.date as date3_2_, tourlogmod_.difficultyid as difficul9_2_, tourlogmod_.distance as distance4_2_, tourlogmod_.rating as rating5_2_, tourlogmod_.timeHours as timehour6_2_, tourlogmod_.timeMinutes as timeminu7_2_, tourlogmod_.totaltime as totaltim8_2_, tourlogmod_.tourid_fk as tourid_10_2_, tourlogmod_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod_ where tourlogmod_.tourlogid=?
2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tourlogs (comment, date, difficultyid, distance, rating, timeHours, timeMinutes, totaltime, tourid_fk, transporttypeid_fk, tourlogid) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tourlogs set comment=?, date=?, difficultyid=?, distance=?, rating=?, timeHours=?, timeMinutes=?, totaltime=?, tourid_fk=?, transporttypeid_fk=? where tourlogid=?
2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tourlogs where tourlogid=?
2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4ba41c]
2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-06-22 01:15:58.062 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-22 01:15:58.064 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e75d7f6]
2024-06-22 01:15:58.065 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty.difficulty
2024-06-22 01:15:58.065 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : rating
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeHours
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeMinutes
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : totalTime
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c6e3fd1]
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.description
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.destination
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.distance
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.name
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.start
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.time
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40b39d5b]
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType.name
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@442b5b3a]
2024-06-22 01:15:58.066 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-22 01:15:58.067 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:15:58.067 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:15:58.067 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.difficulty)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:2>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour)
             - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:3>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour.transportType)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:4>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - SQL table alias mapping - tourlogmod0_
          - alias suffix - 0_
          - suffixed key columns - {tourlogi1_2_0_}
          - JOIN (JoinDefinedByMetadata(difficulty)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
                - SQL table alias mapping - difficulty1_
                - alias suffix - 1_
                - suffixed key columns - {difficul1_0_1_}
          - JOIN (JoinDefinedByMetadata(tour)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
                - SQL table alias mapping - tourmodel2_
                - alias suffix - 2_
                - suffixed key columns - {tourid1_3_2_}
                - JOIN (JoinDefinedByMetadata(transportType)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                      - SQL table alias mapping - transportt3_
                      - alias suffix - 3_
                      - suffixed key columns - {transpor1_4_3_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt4_
                - alias suffix - 4_
                - suffixed key columns - {transpor1_4_4_}

2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel [NONE]: select tourlogmod0_.tourlogid as tourlogi1_2_0_, tourlogmod0_.comment as comment2_2_0_, tourlogmod0_.date as date3_2_0_, tourlogmod0_.difficultyid as difficul9_2_0_, tourlogmod0_.distance as distance4_2_0_, tourlogmod0_.rating as rating5_2_0_, tourlogmod0_.timeHours as timehour6_2_0_, tourlogmod0_.timeMinutes as timeminu7_2_0_, tourlogmod0_.totaltime as totaltim8_2_0_, tourlogmod0_.tourid_fk as tourid_10_2_0_, tourlogmod0_.transporttypeid_fk as transpo11_2_0_, difficulty1_.difficultyid as difficul1_0_1_, difficulty1_.difficulty as difficul2_0_1_, tourmodel2_.tourid as tourid1_3_2_, tourmodel2_.description as descript2_3_2_, tourmodel2_.destination as destinat3_3_2_, tourmodel2_.distance as distance4_3_2_, tourmodel2_.name as name5_3_2_, tourmodel2_.start as start6_3_2_, tourmodel2_.time as time7_3_2_, tourmodel2_.transporttypeid_fk as transpor8_3_2_, transportt3_.transporttypeid as transpor1_4_3_, transportt3_.name as name2_4_3_, transportt4_.transporttypeid as transpor1_4_4_, transportt4_.name as name2_4_4_ from tourlogs tourlogmod0_ left outer join difficulties difficulty1_ on tourlogmod0_.difficultyid=difficulty1_.difficultyid inner join tours tourmodel2_ on tourlogmod0_.tourid_fk=tourmodel2_.tourid inner join transporttypes transportt3_ on tourmodel2_.transporttypeid_fk=transportt3_.transporttypeid left outer join transporttypes transportt4_ on tourlogmod0_.transporttypeid_fk=transportt4_.transporttypeid where tourlogmod0_.tourlogid=?
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select transporttypeid from transporttypes where transporttypeid =?
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select transportt_.transporttypeid, transportt_.name as name2_4_ from transporttypes transportt_ where transportt_.transporttypeid=?
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into transporttypes (name, transporttypeid) values (?, ?)
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update transporttypes set name=? where transporttypeid=?
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from transporttypes where transporttypeid=?
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into transporttypes (name) values (?)
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb15d70]
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
          - SQL table alias mapping - transportt0_
          - alias suffix - 0_
          - suffixed key columns - {transpor1_4_0_}

2024-06-22 01:15:58.068 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel [NONE]: select transportt0_.transporttypeid as transpor1_4_0_, transportt0_.name as name2_4_0_ from transporttypes transportt0_ where transportt0_.transporttypeid=?
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourid from tours where tourid =?
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmodel_.tourid, tourmodel_.description as descript2_3_, tourmodel_.destination as destinat3_3_, tourmodel_.distance as distance4_3_, tourmodel_.name as name5_3_, tourmodel_.start as start6_3_, tourmodel_.time as time7_3_, tourmodel_.transporttypeid_fk as transpor8_3_ from tours tourmodel_ where tourmodel_.tourid=?
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tours (description, destination, distance, name, start, time, transporttypeid_fk, tourid) values (?, ?, ?, ?, ?, ?, ?, ?)
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tours set description=?, destination=?, distance=?, name=?, start=?, time=?, transporttypeid_fk=? where tourid=?
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tours where tourid=?
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d9c9c11]
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : destination
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : start
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : time
2024-06-22 01:15:58.069 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-22 01:15:58.070 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54291383]
2024-06-22 01:15:58.070 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-22 01:15:58.070 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:15:58.070 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:15:58.070 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - SQL table alias mapping - tourmodel0_
          - alias suffix - 0_
          - suffixed key columns - {tourid1_3_0_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt1_
                - alias suffix - 1_
                - suffixed key columns - {transpor1_4_1_}

2024-06-22 01:15:58.070 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel [NONE]: select tourmodel0_.tourid as tourid1_3_0_, tourmodel0_.description as descript2_3_0_, tourmodel0_.destination as destinat3_3_0_, tourmodel0_.distance as distance4_3_0_, tourmodel0_.name as name5_3_0_, tourmodel0_.start as start6_3_0_, tourmodel0_.time as time7_3_0_, tourmodel0_.transporttypeid_fk as transpor8_3_0_, transportt1_.transporttypeid as transpor1_4_1_, transportt1_.name as name2_4_1_ from tours tourmodel0_ inner join transporttypes transportt1_ on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid where tourmodel0_.tourid=?
2024-06-22 01:15:58.098 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@ee1cf5a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-06-22 01:15:58.232 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : difficulties
2024-06-22 01:15:58.232 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : maps
2024-06-22 01:15:58.232 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tourlogs
2024-06-22 01:15:58.232 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tours
2024-06-22 01:15:58.232 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : transporttypes
2024-06-22 01:15:58.466 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-06-22 01:15:58.467 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-22 01:15:58.474 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-22 01:15:58.475 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-22 01:15:58.483 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:15:58.486 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@60595d4a
2024-06-22 01:15:58.492 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
2024-06-22 01:15:58.493 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-06-22 01:15:58.495 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6a2b4fe2
2024-06-22 01:15:58.497 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 51cd3f66-dcb6-42fd-8e17-3c4c87ef88ca (<unnamed>)
2024-06-22 01:15:58.497 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-22 01:15:58.497 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.DAL.HibernateUtil - Hibernate SessionFactory created successfully
2024-06-22 01:15:58.553 [JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-06-22 01:15:58.583 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:15:58.586 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:15:58.592 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourModel'

2024-06-22 01:15:58.611 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:15:58.620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-22 01:15:58.620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:15:58.620 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) )
2024-06-22 01:15:58.623 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:15:58.625 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:15:58.628 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-22 01:15:58.628 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:15:58.629 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}

2024-06-22 01:15:58.629 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:15:58.633 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:15:58.633 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_
2024-06-22 01:15:58.633 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:15:58.643 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-22 01:15:58.647 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:15:58.649 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:15:58.653 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:15:58.654 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:15:58.655 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:15:58.655 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:15:58.655 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.655 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:15:58.655 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.655 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:15:58.656 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.656 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:15:58.656 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.656 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:15:58.656 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.656 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:15:58.656 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.656 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:15:58.656 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.660 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:15:58.665 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:15:58.665 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:15:58.665 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:15:58.666 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.667 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:15:58.669 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:15:58.671 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:15:58.671 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:15:58.671 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:15:58.671 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.671 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:15:58.671 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.672 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:15:58.674 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:15:58.674 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:15:58.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:15:58.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:15:58.675 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-22 01:15:58.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:15:58.676 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:15:58.699 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-22 01:15:58.703 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:15:58.703 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:15:58.703 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:15:58.703 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:15:58.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:15:58.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:15:58.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:15:58.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.704 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:15:58.707 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.708 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:15:58.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:15:58.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:15:58.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:15:58.709 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.709 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:15:58.711 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:15:58.712 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:15:58.712 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:15:58.712 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:15:58.712 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:15:58.712 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-22 01:15:58.712 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:15:58.712 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:16:00.590 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-22 01:16:00.591 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:00.592 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-22 01:16:00.592 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:16:00.592 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-22 01:16:00.594 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-22 01:16:00.595 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@763f4d21
2024-06-22 01:16:00.596 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourmodel0_.tourid
2024-06-22 01:16:00.597 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:16:00.597 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) ( WHERE ( = ( tourmodel0_.tourid {synthetic-alias} id ) ? ) ) )
2024-06-22 01:16:00.598 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:16:00.599 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-22 01:16:00.599 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-22 01:16:00.599 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:16:00.600 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourmodel0_.tourid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourmodel0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@763f4d21}

2024-06-22 01:16:00.600 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:00.600 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-22 01:16:00.600 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_ where tourmodel0_.tourid=?
2024-06-22 01:16:00.600 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:00.603 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_ 
    where
        tourmodel0_.tourid=?
2024-06-22 01:16:00.607 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:16:00.607 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.608 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:16:00.610 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:16:00.611 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:16:00.611 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:16:00.611 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.611 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:16:00.611 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:16:00.611 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:16:00.611 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:16:00.658 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:16:00.660 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:00.661 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourLogModel'

2024-06-22 01:16:00.661 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:16:00.661 [Thread-4] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-22 01:16:00.661 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:16:00.661 [Thread-4] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) )
2024-06-22 01:16:00.662 [Thread-4] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:16:00.662 [Thread-4] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:16:00.662 [Thread-4] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-22 01:16:00.662 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:16:00.662 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}

2024-06-22 01:16:00.663 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:00.663 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:16:00.663 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_
2024-06-22 01:16:00.663 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:00.663 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-22 01:16:00.667 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:16:00.668 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:16:00.668 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:16:00.668 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:16:00.668 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:16:00.668 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:16:00.668 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:16:00.668 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:16:00.669 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.669 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:16:00.669 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.669 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:16:00.669 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.669 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:16:00.672 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:16:00.672 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:16:00.672 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:16:00.672 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.673 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:16:00.678 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:16:00.678 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:16:00.679 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.681 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:16:00.681 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:16:00.681 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:16:00.681 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.681 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:16:00.681 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:16:00.681 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:16:00.681 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.682 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:16:00.686 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.687 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = ecscd
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 12.06.2024
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 4
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.688 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:16:00.691 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:16:00.692 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:16:00.692 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:16:00.692 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.692 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:16:00.692 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 5
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 5
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 1h 0min
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 3
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.693 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:16:00.696 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:16:00.698 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:16:00.698 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:16:00.698 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:00.698 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:16:00.698 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3
2024-06-22 01:16:00.698 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:16:00.698 [Thread-4] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:16:06.036 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel WHERE id = :id
2024-06-22 01:16:06.038 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:06.039 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourLogModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-22 01:16:06.039 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:16:06.039 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-22 01:16:06.039 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-22 01:16:06.039 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@763f4d21
2024-06-22 01:16:06.039 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourlogmod0_.tourlogid
2024-06-22 01:16:06.040 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:16:06.040 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) ( WHERE ( = ( tourlogmod0_.tourlogid {synthetic-alias} id ) ? ) ) )
2024-06-22 01:16:06.040 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:16:06.041 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-22 01:16:06.041 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-22 01:16:06.041 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:16:06.041 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourlogmod0_.tourlogid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourlogmod0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@763f4d21}

2024-06-22 01:16:06.042 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:06.042 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel WHERE id = :id
2024-06-22 01:16:06.042 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_ where tourlogmod0_.tourlogid=?
2024-06-22 01:16:06.042 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:06.042 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_ 
    where
        tourlogmod0_.tourlogid=?
2024-06-22 01:16:06.046 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:16:06.046 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:16:06.046 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:16:06.046 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:16:06.046 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.046 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:16:06.046 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.046 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:16:06.046 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.046 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:16:06.049 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:16:06.049 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:16:06.049 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:16:06.049 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.049 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:16:06.049 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.050 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:16:06.053 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:16:06.054 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.055 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:16:06.055 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:16:06.055 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:16:06.055 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.055 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:16:06.056 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:16:06.056 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:16:06.056 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.056 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:16:06.056 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:16:06.101 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel 
2024-06-22 01:16:06.101 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:06.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'DifficultyModel'

2024-06-22 01:16:06.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:16:06.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel (<no alias>) -> difficulty0_
2024-06-22 01:16:06.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:16:06.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} difficulties difficulty0_ ) )
2024-06-22 01:16:06.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:16:06.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity DifficultyModel): [difficulties]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:16:06.103 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [difficulties difficulty0_]
2024-06-22 01:16:06.103 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:16:06.103 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (difficulties)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'difficulty0_.difficultyid as difficul1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=difficulties,tableAlias=difficulty0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'difficulty0_.difficulty as difficul2_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[difficulty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'difficulties difficulty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=difficulties,tableAlias=difficulty0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel}}

2024-06-22 01:16:06.103 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:06.103 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel 
2024-06-22 01:16:06.103 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select difficulty0_.difficultyid as difficul1_0_, difficulty0_.difficulty as difficul2_0_ from difficulties difficulty0_
2024-06-22 01:16:06.103 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:06.103 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_,
        difficulty0_.difficulty as difficul2_0_ 
    from
        difficulties difficulty0_
2024-06-22 01:16:06.105 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:16:06.105 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:16:06.105 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:16:06.105 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Easy
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.106 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:16:06.107 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:16:06.109 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:16:06.110 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:06.110 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TransportTypeModel'

2024-06-22 01:16:06.110 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:16:06.110 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel (<no alias>) -> transportt0_
2024-06-22 01:16:06.110 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:16:06.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} transporttypes transportt0_ ) )
2024-06-22 01:16:06.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:16:06.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TransportTypeModel): [transporttypes]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:16:06.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [transporttypes transportt0_]
2024-06-22 01:16:06.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:16:06.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (transporttypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'transportt0_.transporttypeid as transpor1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transporttypes,tableAlias=transportt0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'transportt0_.name as name2_4_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[transportt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'transporttypes transportt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transporttypes,tableAlias=transportt0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel}}

2024-06-22 01:16:06.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:06.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:16:06.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select transportt0_.transporttypeid as transpor1_4_, transportt0_.name as name2_4_ from transporttypes transportt0_
2024-06-22 01:16:06.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:16:06.112 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:16:06.114 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:16:06.115 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:16:06.115 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.115 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:16:06.115 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:16:06.115 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:16:06.115 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:16:06.115 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:16:06.115 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:16:27.470 [Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
2024-06-22 01:18:12.488 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-22 01:18:12.497 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-22 01:18:12.500 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-22 01:18:12.504 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-22 01:18:12.530 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version [WORKING]
2024-06-22 01:18:12.531 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-06-22 01:18:12.714 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2024-06-22 01:18:12.715 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2024-06-22 01:18:12.721 [JavaFX Application Thread] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-22 01:18:12.906 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-22 01:18:12.907 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-22 01:18:12.907 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-22 01:18:12.916 [JavaFX Application Thread] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-06-22 01:18:12.917 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
2024-06-22 01:18:12.928 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-22 01:18:12.929 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-06-22 01:18:12.946 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-22 01:18:12.988 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@70a1d928
2024-06-22 01:18:12.988 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@70a1d928
2024-06-22 01:18:12.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@70a1d928
2024-06-22 01:18:12.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78fee6ef
2024-06-22 01:18:12.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2890985e
2024-06-22 01:18:12.990 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@351c9635
2024-06-22 01:18:12.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@56d5293f
2024-06-22 01:18:12.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@56d5293f
2024-06-22 01:18:12.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56d5293f
2024-06-22 01:18:12.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4293f903
2024-06-22 01:18:12.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4293f903
2024-06-22 01:18:12.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4293f903
2024-06-22 01:18:12.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5ee54fb7
2024-06-22 01:18:12.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5ee54fb7
2024-06-22 01:18:12.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ee54fb7
2024-06-22 01:18:12.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7b753491
2024-06-22 01:18:12.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7b753491
2024-06-22 01:18:12.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7b753491
2024-06-22 01:18:12.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@562a8b56
2024-06-22 01:18:12.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@562a8b56
2024-06-22 01:18:12.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@562a8b56
2024-06-22 01:18:12.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@37adbfe6
2024-06-22 01:18:12.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@37adbfe6
2024-06-22 01:18:12.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37adbfe6
2024-06-22 01:18:12.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@19feb936
2024-06-22 01:18:12.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@19feb936
2024-06-22 01:18:12.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19feb936
2024-06-22 01:18:12.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67b1b0e8
2024-06-22 01:18:12.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67b1b0e8
2024-06-22 01:18:12.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6d998a
2024-06-22 01:18:12.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6d998a
2024-06-22 01:18:12.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3aa93f06
2024-06-22 01:18:12.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3aa93f06
2024-06-22 01:18:13.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a34d15d
2024-06-22 01:18:13.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@77580273
2024-06-22 01:18:13.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7360fc02
2024-06-22 01:18:13.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7360fc02
2024-06-22 01:18:13.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22720485
2024-06-22 01:18:13.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22720485
2024-06-22 01:18:13.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2ce570e
2024-06-22 01:18:13.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2ce570e
2024-06-22 01:18:13.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@27053f43
2024-06-22 01:18:13.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@27053f43
2024-06-22 01:18:13.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@124c645a
2024-06-22 01:18:13.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@124c645a
2024-06-22 01:18:13.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2261b779
2024-06-22 01:18:13.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2261b779
2024-06-22 01:18:13.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7043c1cb
2024-06-22 01:18:13.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7043c1cb
2024-06-22 01:18:13.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30044493
2024-06-22 01:18:13.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30044493
2024-06-22 01:18:13.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e8b19b5
2024-06-22 01:18:13.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e8b19b5
2024-06-22 01:18:13.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4326557f
2024-06-22 01:18:13.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4326557f
2024-06-22 01:18:13.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1b166539
2024-06-22 01:18:13.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b166539
2024-06-22 01:18:13.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@472dfb3a
2024-06-22 01:18:13.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@472dfb3a
2024-06-22 01:18:13.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@472dfb3a
2024-06-22 01:18:13.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23317ec3
2024-06-22 01:18:13.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@47c89e7d
2024-06-22 01:18:13.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@47c89e7d
2024-06-22 01:18:13.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@47c89e7d
2024-06-22 01:18:13.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@772bd9d
2024-06-22 01:18:13.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4a57f30f
2024-06-22 01:18:13.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6073bafa
2024-06-22 01:18:13.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6073bafa
2024-06-22 01:18:13.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@69ec3973
2024-06-22 01:18:13.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@69ec3973
2024-06-22 01:18:13.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2bcb68eb
2024-06-22 01:18:13.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2bcb68eb
2024-06-22 01:18:13.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@497aadce
2024-06-22 01:18:13.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@497aadce
2024-06-22 01:18:13.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f43e10b
2024-06-22 01:18:13.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f43e10b
2024-06-22 01:18:13.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ddb8a25
2024-06-22 01:18:13.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5bda57ba
2024-06-22 01:18:13.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5bda57ba
2024-06-22 01:18:13.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5bda57ba
2024-06-22 01:18:13.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6959dafa
2024-06-22 01:18:13.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6959dafa
2024-06-22 01:18:13.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6959dafa
2024-06-22 01:18:13.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@789195be
2024-06-22 01:18:13.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3e70c2ef
2024-06-22 01:18:13.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6889716e
2024-06-22 01:18:13.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6889716e
2024-06-22 01:18:13.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6889716e
2024-06-22 01:18:13.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23bfc0da
2024-06-22 01:18:13.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23bfc0da
2024-06-22 01:18:13.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23bfc0da
2024-06-22 01:18:13.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4642bf96
2024-06-22 01:18:13.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5937ecff
2024-06-22 01:18:13.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5b9a4994
2024-06-22 01:18:13.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b9a4994
2024-06-22 01:18:13.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12499bad
2024-06-22 01:18:13.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@369c5fd
2024-06-22 01:18:13.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@369c5fd
2024-06-22 01:18:13.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@35abd18d
2024-06-22 01:18:13.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35abd18d
2024-06-22 01:18:13.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41aac34e
2024-06-22 01:18:13.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@252f8b95
2024-06-22 01:18:13.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5294ec26
2024-06-22 01:18:13.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1fb5f251
2024-06-22 01:18:13.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1fb5f251
2024-06-22 01:18:13.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7220ec89
2024-06-22 01:18:13.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@70a8e77d
2024-06-22 01:18:13.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f627262
2024-06-22 01:18:13.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@206598e3
2024-06-22 01:18:13.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55d46cc2
2024-06-22 01:18:13.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62f0fa0a
2024-06-22 01:18:13.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ecd7554
2024-06-22 01:18:13.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22e352ee
2024-06-22 01:18:13.054 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-22 01:18:13.054 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-22 01:18:13.055 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-22 01:18:13.055 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-22 01:18:13.055 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-22 01:18:13.056 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-22 01:18:13.056 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-22 01:18:13.057 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-22 01:18:13.058 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-06-22 01:18:13.058 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-22 01:18:13.058 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-22 01:18:13.059 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-06-22 01:18:13.059 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-22 01:18:13.060 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-22 01:18:13.065 [JavaFX Application Thread] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-06-22 01:18:13.068 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/tour_planner_g5_db]
2024-06-22 01:18:13.069 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-22 01:18:13.069 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-06-22 01:18:13.071 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-06-22 01:18:13.071 [JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-06-22 01:18:13.336 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 16.3 (Debian 16.3-1.pgdg120+1)
      major : 16
      minor : 3
2024-06-22 01:18:13.336 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.7.2
      major : 42
      minor : 7
2024-06-22 01:18:13.336 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-06-22 01:18:13.348 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-06-22 01:18:13.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-22 01:18:13.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@24974d9b
2024-06-22 01:18:13.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@24974d9b
2024-06-22 01:18:13.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7f43e10b
2024-06-22 01:18:13.392 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16e2229a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7fe4d7ea]
2024-06-22 01:18:13.418 [JavaFX Application Thread] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-22 01:18:13.429 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:18:13.440 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:18:13.443 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourModel
2024-06-22 01:18:13.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel on table tours
2024-06-22 01:18:13.461 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=tourid, insertable=true, updatable=false, unique=false}
2024-06-22 01:18:13.463 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-22 01:18:13.463 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:18:13.463 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:18:13.465 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:id]
2024-06-22 01:18:13.466 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:18:13.468 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:18:13.469 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourid)]), id, assigned, , ...)
2024-06-22 01:18:13.470 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=description, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.470 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
2024-06-22 01:18:13.470 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:description]
2024-06-22 01:18:13.470 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for description
2024-06-22 01:18:13.471 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property description
2024-06-22 01:18:13.471 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=destination, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.471 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property destination with lazy=false
2024-06-22 01:18:13.471 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:destination]
2024-06-22 01:18:13.471 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for destination
2024-06-22 01:18:13.471 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property destination
2024-06-22 01:18:13.471 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.471 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-22 01:18:13.472 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:distance]
2024-06-22 01:18:13.472 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-22 01:18:13.472 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-22 01:18:13.472 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.472 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-22 01:18:13.472 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:name]
2024-06-22 01:18:13.472 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-22 01:18:13.473 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-22 01:18:13.473 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=start, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.473 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property start with lazy=false
2024-06-22 01:18:13.473 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:start]
2024-06-22 01:18:13.473 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for start
2024-06-22 01:18:13.473 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property start
2024-06-22 01:18:13.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=time, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property time with lazy=false
2024-06-22 01:18:13.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:time]
2024-06-22 01:18:13.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for time
2024-06-22 01:18:13.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property time
2024-06-22 01:18:13.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-22 01:18:13.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-22 01:18:13.482 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:18:13.482 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:18:13.482 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourLogModel
2024-06-22 01:18:13.483 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel on table tourlogs
2024-06-22 01:18:13.484 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tourlogid, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.484 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-22 01:18:13.484 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:18:13.484 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:18:13.484 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:id]
2024-06-22 01:18:13.484 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:18:13.484 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:18:13.484 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourlogid)]), id, assigned, , ...)
2024-06-22 01:18:13.485 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.485 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2024-06-22 01:18:13.485 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:comment]
2024-06-22 01:18:13.485 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2024-06-22 01:18:13.485 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2024-06-22 01:18:13.485 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.485 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-06-22 01:18:13.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:date]
2024-06-22 01:18:13.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-06-22 01:18:13.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-06-22 01:18:13.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='difficultyid', referencedColumn='difficultyid', mappedBy=''}
2024-06-22 01:18:13.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-22 01:18:13.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-22 01:18:13.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:distance]
2024-06-22 01:18:13.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-22 01:18:13.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-22 01:18:13.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=rating, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property rating with lazy=false
2024-06-22 01:18:13.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:rating]
2024-06-22 01:18:13.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for rating
2024-06-22 01:18:13.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property rating
2024-06-22 01:18:13.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeHours, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeHours with lazy=false
2024-06-22 01:18:13.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeHours]
2024-06-22 01:18:13.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeHours
2024-06-22 01:18:13.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeHours
2024-06-22 01:18:13.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeMinutes, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeMinutes with lazy=false
2024-06-22 01:18:13.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeMinutes]
2024-06-22 01:18:13.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeMinutes
2024-06-22 01:18:13.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeMinutes
2024-06-22 01:18:13.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=totaltime, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property totalTime with lazy=false
2024-06-22 01:18:13.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:totalTime]
2024-06-22 01:18:13.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for totalTime
2024-06-22 01:18:13.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property totalTime
2024-06-22 01:18:13.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='tourid_fk', referencedColumn='tourid', mappedBy=''}
2024-06-22 01:18:13.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tour, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tour
2024-06-22 01:18:13.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-22 01:18:13.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.491 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-22 01:18:13.491 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:18:13.492 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:18:13.492 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourMapModel
2024-06-22 01:18:13.492 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel on table maps
2024-06-22 01:18:13.494 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.494 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-22 01:18:13.494 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:18:13.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:18:13.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:id]
2024-06-22 01:18:13.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:18:13.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:18:13.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-06-22 01:18:13.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=filename, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property filename with lazy=false
2024-06-22 01:18:13.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:filename]
2024-06-22 01:18:13.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for filename
2024-06-22 01:18:13.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property filename
2024-06-22 01:18:13.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=tourid_fk, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property tourId with lazy=false
2024-06-22 01:18:13.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:tourId]
2024-06-22 01:18:13.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for tourId
2024-06-22 01:18:13.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tourId
2024-06-22 01:18:13.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:18:13.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:18:13.498 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name DifficultyModel
2024-06-22 01:18:13.498 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel on table difficulties
2024-06-22 01:18:13.498 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficultyid, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.498 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-22 01:18:13.498 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:18:13.499 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:18:13.499 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:id]
2024-06-22 01:18:13.499 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:18:13.499 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:18:13.499 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(difficultyid)]), id, identity, , ...)
2024-06-22 01:18:13.499 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.499 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property difficulty with lazy=false
2024-06-22 01:18:13.500 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:difficulty]
2024-06-22 01:18:13.500 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for difficulty
2024-06-22 01:18:13.500 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-22 01:18:13.500 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:18:13.500 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-22 01:18:13.500 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TransportTypeModel
2024-06-22 01:18:13.501 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel on table transporttypes
2024-06-22 01:18:13.501 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=transporttypeid, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.501 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-22 01:18:13.501 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:18:13.502 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-22 01:18:13.502 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:id]
2024-06-22 01:18:13.502 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-22 01:18:13.502 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-22 01:18:13.502 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(transporttypeid)]), id, identity, , ...)
2024-06-22 01:18:13.502 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-22 01:18:13.502 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-22 01:18:13.503 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:name]
2024-06-22 01:18:13.503 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-22 01:18:13.503 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-22 01:18:13.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:18:13.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for description
2024-06-22 01:18:13.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for destination
2024-06-22 01:18:13.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for start
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for time
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for comment
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for rating
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeHours
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeMinutes
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for totalTime
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:18:13.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for filename
2024-06-22 01:18:13.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for tourId
2024-06-22 01:18:13.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:18:13.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for difficulty
2024-06-22 01:18:13.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-22 01:18:13.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-22 01:18:13.510 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourid] to be non-null as it is part of the primary key for table [tours]
2024-06-22 01:18:13.510 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourlogid] to be non-null as it is part of the primary key for table [tourlogs]
2024-06-22 01:18:13.510 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [maps]
2024-06-22 01:18:13.510 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [difficultyid] to be non-null as it is part of the primary key for table [difficulties]
2024-06-22 01:18:13.510 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [transporttypeid] to be non-null as it is part of the primary key for table [transporttypes]
2024-06-22 01:18:13.511 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:18:13.513 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:18:13.513 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:18:13.513 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:18:13.514 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:18:13.514 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:18:13.514 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:18:13.514 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:18:13.534 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-06-22 01:18:13.535 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-06-22 01:18:13.535 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-06-22 01:18:13.536 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
2024-06-22 01:18:13.537 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-06-22 01:18:13.538 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
2024-06-22 01:18:13.538 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-06-22 01:18:13.538 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
2024-06-22 01:18:13.538 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-06-22 01:18:13.538 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-06-22 01:18:13.538 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-06-22 01:18:13.538 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-06-22 01:18:13.538 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-06-22 01:18:13.538 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-06-22 01:18:13.538 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-06-22 01:18:13.578 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:18:13.579 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:18:13.591 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-06-22 01:18:13.592 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=21, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Users\helen\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-web\21\javafx-web-21.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-media\21\javafx-media-21.jar;C:\Users\helen\.m2\repository\org\jacoco\org.jacoco.agent\0.8.8\org.jacoco.agent-0.8.8-runtime.jar;C:\Users\helen\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\helen\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\helen\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\helen\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\helen\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\helen\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\helen\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\helen\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\helen\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\helen\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\helen\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\helen\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\helen\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\helen\.m2\repository\org\postgresql\postgresql\42.7.2\postgresql-42.7.2.jar;C:\Users\helen\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.17.2\log4j-slf4j-impl-2.17.2.jar;C:\Users\helen\.m2\repository\com\squareup\okio\okio\2.8.0\okio-2.8.0.jar;C:\Users\helen\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.0\kotlin-stdlib-common-1.4.0.jar;C:\Users\helen\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.10\kotlin-stdlib-1.4.10.jar;C:\Users\helen\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\helen\.m2\repository\com\itextpdf\bouncy-castle-connector\8.0.4\bouncy-castle-connector-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\io\8.0.4\io-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\commons\8.0.4\commons-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\forms\8.0.4\forms-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\pdfa\8.0.4\pdfa-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\sign\8.0.4\sign-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\barcodes\8.0.4\barcodes-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\font-asian\8.0.4\font-asian-8.0.4.jar;C:\Users\helen\.m2\repository\com\itextpdf\hyph\8.0.4\hyph-8.0.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Vienna, java.vm.specification.version=21, os.name=Windows 11, javafx.version=21, sun.java.launcher=SUN_STANDARD, user.country=AT, sun.boot.library.path=C:\Users\helen\.jdks\openjdk-21.0.1\bin, sun.java.command=technikum.at.tourplanner_swen2_team5/technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\helen, user.language=de, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\helen\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\helen\.m2\repository\com\squareup\okhttp3\okhttp\4.9.3\okhttp-4.9.3.jar;C:\Users\helen\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-web\21\javafx-web-21-win.jar;C:\Users\helen\.m2\repository\com\itextpdf\kernel\8.0.4\kernel-8.0.4.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\helen\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-media\21\javafx-media-21-win.jar;C:\Users\helen\.m2\repository\org\json\json\20210307\json-20210307.jar;C:\Users\helen\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-core\2.23.1\log4j-core-2.23.1.jar;C:\Users\helen\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\helen\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\helen\.m2\repository\com\itextpdf\layout\8.0.4\layout-8.0.4.jar;C:\Users\helen\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\helen\OneDrive - FH Technikum Wien\FH\SS2024\SWEN2\TourPlanner_SWEN2_Team5\target\classes;C:\Users\helen\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar, java.version.date=2023-10-17, java.home=C:\Users\helen\.jdks\openjdk-21.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, jdk.module.main.class=technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.module.main=technikum.at.tourplanner_swen2_team5, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.1+12-29, user.name=helen, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/tour_planner_g5_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\helen\AppData\Local\Temp\, java.version=21.0.1, user.dir=C:\Users\helen\OneDrive - FH Technikum Wien\FH\SS2024\SWEN2\TourPlanner_SWEN2_Team5, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1c01214, native.encoding=Cp1252, java.library.path=C:\Users\helen\.jdks\openjdk-21.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\xampp\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\Program Files\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\helen\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\helen\AppData\Local\Programs\Python\Python38\;C:\Users\helen\AppData\Local\Microsoft\WindowsApps;C:\Users\helen\AppData\Local\Programs\Microsoft VS Code\bin;PATH TO PYTHON;C:\Users\helen\AppData\Local\GitHubDesktop\bin;C:\Users\helen\AppData\Roaming\npm;C:\Users\helen\AppData\Roaming\Composer\vendor\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\msys64\ucrt64\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2023.2.4\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.1+12-29, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=65.0}
2024-06-22 01:18:13.605 [JavaFX Application Thread] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-06-22 01:18:13.606 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-06-22 01:18:13.606 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16e2229a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@21f4dec4]
2024-06-22 01:18:13.662 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-22 01:18:13.663 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:18:13.845 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-22 01:18:13.846 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:18:13.862 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.865 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.865 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.865 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.865 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.865 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.866 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-22 01:18:13.866 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:18:13.888 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.889 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.889 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.889 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.889 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.889 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.890 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-22 01:18:13.890 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:18:13.903 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.903 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.903 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-22 01:18:13.904 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:18:13.920 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.920 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-22 01:18:13.931 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-22 01:18:13.931 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select difficultyid from difficulties where difficultyid =?
2024-06-22 01:18:13.931 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select difficulty_.difficultyid, difficulty_.difficulty as difficul2_0_ from difficulties difficulty_ where difficulty_.difficultyid=?
2024-06-22 01:18:13.932 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into difficulties (difficulty, difficultyid) values (?, ?)
2024-06-22 01:18:13.932 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update difficulties set difficulty=? where difficultyid=?
2024-06-22 01:18:13.932 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from difficulties where difficultyid=?
2024-06-22 01:18:13.932 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into difficulties (difficulty) values (?)
2024-06-22 01:18:13.952 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@700a41d]
2024-06-22 01:18:13.953 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-22 01:18:13.953 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:18:13.963 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:18:13.966 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
          - SQL table alias mapping - difficulty0_
          - alias suffix - 0_
          - suffixed key columns - {difficul1_0_0_}

2024-06-22 01:18:13.969 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel [NONE]: select difficulty0_.difficultyid as difficul1_0_0_, difficulty0_.difficulty as difficul2_0_0_ from difficulties difficulty0_ where difficulty0_.difficultyid=?
2024-06-22 01:18:13.969 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-22 01:18:13.969 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from maps where id =?
2024-06-22 01:18:13.969 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmapmod_.id, tourmapmod_.filename as filename2_1_, tourmapmod_.tourid_fk as tourid_f3_1_ from maps tourmapmod_ where tourmapmod_.id=?
2024-06-22 01:18:13.969 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into maps (filename, tourid_fk, id) values (?, ?, ?)
2024-06-22 01:18:13.969 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update maps set filename=?, tourid_fk=? where id=?
2024-06-22 01:18:13.969 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from maps where id=?
2024-06-22 01:18:13.969 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into maps (filename, tourid_fk) values (?, ?)
2024-06-22 01:18:13.970 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da0404c]
2024-06-22 01:18:13.970 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : filename
2024-06-22 01:18:13.970 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tourId
2024-06-22 01:18:13.970 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:18:13.970 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:18:13.970 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
          - SQL table alias mapping - tourmapmod0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel [NONE]: select tourmapmod0_.id as id1_1_0_, tourmapmod0_.filename as filename2_1_0_, tourmapmod0_.tourid_fk as tourid_f3_1_0_ from maps tourmapmod0_ where tourmapmod0_.id=?
2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourlogid from tourlogs where tourlogid =?
2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourlogmod_.tourlogid, tourlogmod_.comment as comment2_2_, tourlogmod_.date as date3_2_, tourlogmod_.difficultyid as difficul9_2_, tourlogmod_.distance as distance4_2_, tourlogmod_.rating as rating5_2_, tourlogmod_.timeHours as timehour6_2_, tourlogmod_.timeMinutes as timeminu7_2_, tourlogmod_.totaltime as totaltim8_2_, tourlogmod_.tourid_fk as tourid_10_2_, tourlogmod_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod_ where tourlogmod_.tourlogid=?
2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tourlogs (comment, date, difficultyid, distance, rating, timeHours, timeMinutes, totaltime, tourid_fk, transporttypeid_fk, tourlogid) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tourlogs set comment=?, date=?, difficultyid=?, distance=?, rating=?, timeHours=?, timeMinutes=?, totaltime=?, tourid_fk=?, transporttypeid_fk=? where tourlogid=?
2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tourlogs where tourlogid=?
2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@234bcf16]
2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-06-22 01:18:13.971 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-22 01:18:13.974 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69b98666]
2024-06-22 01:18:13.976 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty.difficulty
2024-06-22 01:18:13.976 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-22 01:18:13.976 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : rating
2024-06-22 01:18:13.976 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeHours
2024-06-22 01:18:13.976 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeMinutes
2024-06-22 01:18:13.976 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : totalTime
2024-06-22 01:18:13.976 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6362ebd5]
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.description
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.destination
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.distance
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.name
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.start
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.time
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e75d7f6]
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType.name
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-22 01:18:13.977 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73001e9b]
2024-06-22 01:18:13.978 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-22 01:18:13.978 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:18:13.978 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:18:13.979 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.difficulty)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:2>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour)
             - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:3>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour.transportType)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:4>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - SQL table alias mapping - tourlogmod0_
          - alias suffix - 0_
          - suffixed key columns - {tourlogi1_2_0_}
          - JOIN (JoinDefinedByMetadata(difficulty)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
                - SQL table alias mapping - difficulty1_
                - alias suffix - 1_
                - suffixed key columns - {difficul1_0_1_}
          - JOIN (JoinDefinedByMetadata(tour)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
                - SQL table alias mapping - tourmodel2_
                - alias suffix - 2_
                - suffixed key columns - {tourid1_3_2_}
                - JOIN (JoinDefinedByMetadata(transportType)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                      - SQL table alias mapping - transportt3_
                      - alias suffix - 3_
                      - suffixed key columns - {transpor1_4_3_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt4_
                - alias suffix - 4_
                - suffixed key columns - {transpor1_4_4_}

2024-06-22 01:18:13.979 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel [NONE]: select tourlogmod0_.tourlogid as tourlogi1_2_0_, tourlogmod0_.comment as comment2_2_0_, tourlogmod0_.date as date3_2_0_, tourlogmod0_.difficultyid as difficul9_2_0_, tourlogmod0_.distance as distance4_2_0_, tourlogmod0_.rating as rating5_2_0_, tourlogmod0_.timeHours as timehour6_2_0_, tourlogmod0_.timeMinutes as timeminu7_2_0_, tourlogmod0_.totaltime as totaltim8_2_0_, tourlogmod0_.tourid_fk as tourid_10_2_0_, tourlogmod0_.transporttypeid_fk as transpo11_2_0_, difficulty1_.difficultyid as difficul1_0_1_, difficulty1_.difficulty as difficul2_0_1_, tourmodel2_.tourid as tourid1_3_2_, tourmodel2_.description as descript2_3_2_, tourmodel2_.destination as destinat3_3_2_, tourmodel2_.distance as distance4_3_2_, tourmodel2_.name as name5_3_2_, tourmodel2_.start as start6_3_2_, tourmodel2_.time as time7_3_2_, tourmodel2_.transporttypeid_fk as transpor8_3_2_, transportt3_.transporttypeid as transpor1_4_3_, transportt3_.name as name2_4_3_, transportt4_.transporttypeid as transpor1_4_4_, transportt4_.name as name2_4_4_ from tourlogs tourlogmod0_ left outer join difficulties difficulty1_ on tourlogmod0_.difficultyid=difficulty1_.difficultyid inner join tours tourmodel2_ on tourlogmod0_.tourid_fk=tourmodel2_.tourid inner join transporttypes transportt3_ on tourmodel2_.transporttypeid_fk=transportt3_.transporttypeid left outer join transporttypes transportt4_ on tourlogmod0_.transporttypeid_fk=transportt4_.transporttypeid where tourlogmod0_.tourlogid=?
2024-06-22 01:18:13.979 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:18:13.979 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select transporttypeid from transporttypes where transporttypeid =?
2024-06-22 01:18:13.979 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select transportt_.transporttypeid, transportt_.name as name2_4_ from transporttypes transportt_ where transportt_.transporttypeid=?
2024-06-22 01:18:13.979 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into transporttypes (name, transporttypeid) values (?, ?)
2024-06-22 01:18:13.980 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update transporttypes set name=? where transporttypeid=?
2024-06-22 01:18:13.980 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from transporttypes where transporttypeid=?
2024-06-22 01:18:13.980 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into transporttypes (name) values (?)
2024-06-22 01:18:13.980 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d1094a0]
2024-06-22 01:18:13.980 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-22 01:18:13.980 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:18:13.980 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:18:13.980 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
          - SQL table alias mapping - transportt0_
          - alias suffix - 0_
          - suffixed key columns - {transpor1_4_0_}

2024-06-22 01:18:13.980 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel [NONE]: select transportt0_.transporttypeid as transpor1_4_0_, transportt0_.name as name2_4_0_ from transporttypes transportt0_ where transportt0_.transporttypeid=?
2024-06-22 01:18:13.980 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourid from tours where tourid =?
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmodel_.tourid, tourmodel_.description as descript2_3_, tourmodel_.destination as destinat3_3_, tourmodel_.distance as distance4_3_, tourmodel_.name as name5_3_, tourmodel_.start as start6_3_, tourmodel_.time as time7_3_, tourmodel_.transporttypeid_fk as transpor8_3_ from tours tourmodel_ where tourmodel_.tourid=?
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tours (description, destination, distance, name, start, time, transporttypeid_fk, tourid) values (?, ?, ?, ?, ?, ?, ?, ?)
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tours set description=?, destination=?, distance=?, name=?, start=?, time=?, transporttypeid_fk=? where tourid=?
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tours where tourid=?
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4108d9ef]
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : destination
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : start
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : time
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-22 01:18:13.981 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3277404]
2024-06-22 01:18:13.982 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-22 01:18:13.982 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-22 01:18:13.982 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-22 01:18:13.982 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - SQL table alias mapping - tourmodel0_
          - alias suffix - 0_
          - suffixed key columns - {tourid1_3_0_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt1_
                - alias suffix - 1_
                - suffixed key columns - {transpor1_4_1_}

2024-06-22 01:18:13.982 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel [NONE]: select tourmodel0_.tourid as tourid1_3_0_, tourmodel0_.description as descript2_3_0_, tourmodel0_.destination as destinat3_3_0_, tourmodel0_.distance as distance4_3_0_, tourmodel0_.name as name5_3_0_, tourmodel0_.start as start6_3_0_, tourmodel0_.time as time7_3_0_, tourmodel0_.transporttypeid_fk as transpor8_3_0_, transportt1_.transporttypeid as transpor1_4_1_, transportt1_.name as name2_4_1_ from tours tourmodel0_ inner join transporttypes transportt1_ on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid where tourmodel0_.tourid=?
2024-06-22 01:18:14.006 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3e98e57a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-06-22 01:18:14.049 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : difficulties
2024-06-22 01:18:14.049 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : maps
2024-06-22 01:18:14.049 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tourlogs
2024-06-22 01:18:14.049 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tours
2024-06-22 01:18:14.049 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : transporttypes
2024-06-22 01:18:14.141 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-06-22 01:18:14.142 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-22 01:18:14.145 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-22 01:18:14.146 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-22 01:18:14.151 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-22 01:18:14.152 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2eb81f2f
2024-06-22 01:18:14.156 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
2024-06-22 01:18:14.156 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-06-22 01:18:14.158 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@475d7edb
2024-06-22 01:18:14.160 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: fc995880-0d28-47b3-bd3f-24a2f96ab7ac (<unnamed>)
2024-06-22 01:18:14.160 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-22 01:18:14.161 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.DAL.HibernateUtil - Hibernate SessionFactory created successfully
2024-06-22 01:18:14.195 [JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-06-22 01:18:14.227 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:18:14.230 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:14.237 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourModel'

2024-06-22 01:18:14.257 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:18:14.270 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-22 01:18:14.270 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:18:14.270 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) )
2024-06-22 01:18:14.274 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:18:14.277 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:18:14.281 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-22 01:18:14.281 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:18:14.282 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}

2024-06-22 01:18:14.282 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:14.286 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-22 01:18:14.286 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_
2024-06-22 01:18:14.286 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:14.295 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-22 01:18:14.300 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:14.302 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:14.307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:14.307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:14.309 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:14.309 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:18:14.309 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:14.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.319 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:18:14.328 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:14.329 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:14.329 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:14.330 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:14.335 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:18:14.338 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.339 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:18:14.339 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.339 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:18:14.339 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.339 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:18:14.344 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:14.344 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:14.344 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:18:14.345 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.345 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:14.345 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-22 01:18:14.345 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:14.347 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:14.371 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-22 01:18:14.374 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:14.375 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:14.375 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:14.375 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:14.376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:14.376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:18:14.376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:18:14.376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:18:14.376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:18:14.376 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.377 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:18:14.377 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.377 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:18:14.377 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.377 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:14.377 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.377 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:18:14.379 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:14.380 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:14.380 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:14.380 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.380 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:14.380 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:18:14.380 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:14.380 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:14.380 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:18:14.380 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.381 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:18:14.383 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:14.383 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:14.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:18:14.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:14.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:14.384 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-22 01:18:14.384 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:14.384 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:16.106 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-22 01:18:16.108 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:16.110 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-22 01:18:16.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:18:16.111 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-22 01:18:16.115 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-22 01:18:16.116 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@3aa93f06
2024-06-22 01:18:16.117 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourmodel0_.tourid
2024-06-22 01:18:16.119 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:18:16.119 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) ( WHERE ( = ( tourmodel0_.tourid {synthetic-alias} id ) ? ) ) )
2024-06-22 01:18:16.120 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:18:16.121 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-22 01:18:16.121 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-22 01:18:16.121 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:18:16.123 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourmodel0_.tourid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourmodel0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@3aa93f06}

2024-06-22 01:18:16.123 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:16.124 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-22 01:18:16.124 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_ where tourmodel0_.tourid=?
2024-06-22 01:18:16.124 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:16.130 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_ 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:16.137 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:16.137 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:16.137 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:16.137 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.138 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:18:16.141 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:16.141 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:16.141 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:16.141 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.141 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:16.142 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-22 01:18:16.142 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:16.142 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:16.192 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:18:16.193 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:16.194 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourLogModel'

2024-06-22 01:18:16.194 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:18:16.194 [Thread-4] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-22 01:18:16.195 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:18:16.195 [Thread-4] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) )
2024-06-22 01:18:16.195 [Thread-4] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:18:16.195 [Thread-4] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:18:16.195 [Thread-4] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-22 01:18:16.195 [Thread-4] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:18:16.196 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}

2024-06-22 01:18:16.196 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:16.196 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-22 01:18:16.196 [Thread-4] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_
2024-06-22 01:18:16.196 [Thread-4] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:16.197 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-22 01:18:16.201 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:16.201 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:16.201 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:16.201 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:16.201 [Thread-4] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:18:16.202 [Thread-4] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:16.202 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:16.202 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:18:16.202 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.202 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:18:16.202 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.202 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:18:16.202 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.202 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:16.205 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:16.205 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:16.206 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:18:16.206 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.206 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.207 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:16.211 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:16.211 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:16.211 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:18:16.211 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:16.212 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.213 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:16.213 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:16.213 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:16.213 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.213 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:16.213 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:16.213 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:16.213 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.214 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:16.214 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:16.214 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-22 01:18:16.214 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.214 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:18:16.214 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.214 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:18:16.214 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:18:16.215 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.216 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:16.220 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:16.220 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:16.220 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:18:16.221 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:18:16.222 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.222 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:16.222 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:16.222 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = ecscd
2024-06-22 01:18:16.222 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.222 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 12.06.2024
2024-06-22 01:18:16.222 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.222 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 4
2024-06-22 01:18:16.222 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.222 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:16.224 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:16.225 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:16.225 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:18:16.225 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.225 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 5
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 5
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 1h 0min
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 3
2024-06-22 01:18:16.226 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.227 [Thread-4] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:18:16.230 [Thread-4] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:16.230 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:16.230 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:18:16.230 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:16.231 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:16.231 [Thread-4] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3
2024-06-22 01:18:16.231 [Thread-4] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:16.231 [Thread-4] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:20.261 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel WHERE id = :id
2024-06-22 01:18:20.262 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:20.263 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourLogModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-22 01:18:20.264 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:18:20.264 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-22 01:18:20.265 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-22 01:18:20.265 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@3aa93f06
2024-06-22 01:18:20.265 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourlogmod0_.tourlogid
2024-06-22 01:18:20.265 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:18:20.265 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) ( WHERE ( = ( tourlogmod0_.tourlogid {synthetic-alias} id ) ? ) ) )
2024-06-22 01:18:20.266 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:18:20.267 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-22 01:18:20.267 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-22 01:18:20.267 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:18:20.268 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourlogmod0_.tourlogid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourlogmod0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@3aa93f06}

2024-06-22 01:18:20.268 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:20.268 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel WHERE id = :id
2024-06-22 01:18:20.268 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_ where tourlogmod0_.tourlogid=?
2024-06-22 01:18:20.268 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:20.269 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_ 
    where
        tourlogmod0_.tourlogid=?
2024-06-22 01:18:20.275 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:20.275 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:20.275 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:20.275 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:18:20.276 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.276 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:18:20.276 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.276 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:18:20.276 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.276 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:20.279 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:20.280 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.281 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:20.283 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:20.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:20.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:18:20.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:18:20.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:18:20.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:18:20.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.284 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:20.285 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:20.286 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.286 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:20.286 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:20.327 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel 
2024-06-22 01:18:20.328 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:20.328 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'DifficultyModel'

2024-06-22 01:18:20.328 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:18:20.328 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel (<no alias>) -> difficulty0_
2024-06-22 01:18:20.328 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:18:20.328 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} difficulties difficulty0_ ) )
2024-06-22 01:18:20.328 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:18:20.329 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity DifficultyModel): [difficulties]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:18:20.329 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [difficulties difficulty0_]
2024-06-22 01:18:20.329 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:18:20.329 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (difficulties)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'difficulty0_.difficultyid as difficul1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=difficulties,tableAlias=difficulty0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'difficulty0_.difficulty as difficul2_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[difficulty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'difficulties difficulty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=difficulties,tableAlias=difficulty0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel}}

2024-06-22 01:18:20.329 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:20.329 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel 
2024-06-22 01:18:20.329 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select difficulty0_.difficultyid as difficul1_0_, difficulty0_.difficulty as difficul2_0_ from difficulties difficulty0_
2024-06-22 01:18:20.329 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:20.329 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_,
        difficulty0_.difficulty as difficul2_0_ 
    from
        difficulties difficulty0_
2024-06-22 01:18:20.331 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:20.331 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Easy
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:18:20.332 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.333 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:20.333 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:20.335 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:18:20.335 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:20.335 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TransportTypeModel'

2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel (<no alias>) -> transportt0_
2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} transporttypes transportt0_ ) )
2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TransportTypeModel): [transporttypes]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [transporttypes transportt0_]
2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (transporttypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'transportt0_.transporttypeid as transpor1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transporttypes,tableAlias=transportt0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'transportt0_.name as name2_4_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[transportt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'transporttypes transportt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transporttypes,tableAlias=transportt0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel}}

2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select transportt0_.transporttypeid as transpor1_4_, transportt0_.name as name2_4_ from transporttypes transportt0_
2024-06-22 01:18:20.336 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-22 01:18:20.337 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-22 01:18:20.339 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:20.339 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:18:20.339 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:20.339 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:20.339 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:18:20.339 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:20.339 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:20.340 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:25.642 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-22 01:18:25.642 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
2024-06-22 01:18:25.652 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
2024-06-22 01:18:25.653 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2024-06-22 01:18:25.654 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2024-06-22 01:18:25.661 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-22 01:18:25.661 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-22 01:18:25.662 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
2024-06-22 01:18:25.662 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel{date=05.06.2024, difficulty=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2, distance=1521, totalTime=25h 21min, rating=10, comment=It was very nice!, transportType=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4, id=356b9cc3-e07f-497f-8b68-d25521993405, timeHours=7, timeMinutes=0, tour=technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51}
2024-06-22 01:18:25.667 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    update
        tourlogs 
    set
        comment=?,
        date=?,
        difficultyid=?,
        distance=?,
        rating=?,
        timeHours=?,
        timeMinutes=?,
        totaltime=?,
        tourid_fk=?,
        transporttypeid_fk=? 
    where
        tourlogid=?
2024-06-22 01:18:25.686 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:25.686 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:25.686 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2024-06-22 01:18:25.687 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-22 01:18:25.689 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:25.689 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:25.689 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:25.689 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:25.689 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:18:25.689 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:25.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:25.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-22 01:18:25.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:18:25.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:18:25.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.690 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:18:25.692 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.693 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:25.695 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:25.695 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:18:25.696 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.697 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:25.697 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:25.697 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = ecscd
2024-06-22 01:18:25.697 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.697 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 12.06.2024
2024-06-22 01:18:25.697 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.697 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 4
2024-06-22 01:18:25.697 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.697 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 5
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 5
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.699 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 1h 0min
2024-06-22 01:18:25.700 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.700 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:25.700 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.700 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:25.702 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:25.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:25.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:25.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:25.703 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:25.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 3
2024-06-22 01:18:25.703 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.703 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.705 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:18:25.706 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.706 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:25.706 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.706 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:25.706 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:25.706 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:25.706 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:29.882 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_ 
    where
        tourlogmod0_.tourlogid=?
2024-06-22 01:18:29.886 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:29.886 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:29.886 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:29.886 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:18:29.886 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.886 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:18:29.887 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.887 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:18:29.887 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.887 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:29.889 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:29.889 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:29.889 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:18:29.889 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.889 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:18:29.890 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.891 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:29.891 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.891 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:18:29.893 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:29.894 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:29.907 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_,
        difficulty0_.difficulty as difficul2_0_ 
    from
        difficulties difficulty0_
2024-06-22 01:18:29.909 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Easy
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:18:29.910 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:29.911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:18:29.911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-22 01:18:29.911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:18:29.911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:29.911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:18:29.911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.911 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:29.911 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:29.912 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-22 01:18:29.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:29.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:18:29.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:29.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:29.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:18:29.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:29.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:18:29.914 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:29.914 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:29.915 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:35.664 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-22 01:18:35.664 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
2024-06-22 01:18:35.665 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
2024-06-22 01:18:35.665 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2024-06-22 01:18:35.665 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2024-06-22 01:18:35.665 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-22 01:18:35.665 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-22 01:18:35.665 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
2024-06-22 01:18:35.665 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel{date=05.06.2024, difficulty=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2, distance=1521, totalTime=25h 21min, rating=10, comment=It was very nice!, transportType=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4, id=356b9cc3-e07f-497f-8b68-d25521993405, timeHours=7, timeMinutes=9, tour=technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51}
2024-06-22 01:18:35.666 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    update
        tourlogs 
    set
        comment=?,
        date=?,
        difficultyid=?,
        distance=?,
        rating=?,
        timeHours=?,
        timeMinutes=?,
        totaltime=?,
        tourid_fk=?,
        transporttypeid_fk=? 
    where
        tourlogid=?
2024-06-22 01:18:35.671 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:35.671 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:35.671 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2024-06-22 01:18:35.672 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-22 01:18:35.674 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:35.674 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:35.674 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:35.674 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:35.674 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:18:35.674 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:35.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:35.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-22 01:18:35.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:18:35.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:18:35.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.675 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:35.676 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.677 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:35.680 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:18:35.681 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = ecscd
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 12.06.2024
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 4
2024-06-22 01:18:35.682 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.683 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:35.684 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 5
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 5
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 1h 0min
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.685 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:35.687 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:35.688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:35.688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:35.688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:35.688 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:35.688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 3
2024-06-22 01:18:35.688 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.688 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:18:35.689 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:35.689 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:35.690 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:37.543 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_ 
    where
        tourlogmod0_.tourlogid=?
2024-06-22 01:18:37.548 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:37.548 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:37.548 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:37.548 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = ecscd
2024-06-22 01:18:37.548 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.548 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 12.06.2024
2024-06-22 01:18:37.548 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.548 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 4
2024-06-22 01:18:37.548 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.549 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:37.552 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:37.552 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:37.552 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:18:37.552 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.552 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:37.552 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 5
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 5
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 1h 0min
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.553 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:37.557 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:37.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.559 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:37.559 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:37.559 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 3
2024-06-22 01:18:37.559 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.559 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:18:37.562 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:37.562 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:37.562 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:18:37.562 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.562 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:37.562 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3
2024-06-22 01:18:37.562 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:37.562 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:37.574 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_,
        difficulty0_.difficulty as difficul2_0_ 
    from
        difficulties difficulty0_
2024-06-22 01:18:37.576 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:37.576 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:18:37.576 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:37.576 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:37.576 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:18:37.576 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Easy
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.577 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:37.578 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:37.579 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-22 01:18:37.581 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:37.581 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:18:37.581 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:37.581 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:37.581 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:37.582 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:43.333 [Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
2024-06-22 01:18:45.333 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-22 01:18:45.333 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
2024-06-22 01:18:45.333 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
2024-06-22 01:18:45.333 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2024-06-22 01:18:45.333 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2024-06-22 01:18:45.334 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-22 01:18:45.334 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-22 01:18:45.334 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
2024-06-22 01:18:45.334 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel{date=12.06.2024, difficulty=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4, distance=5, totalTime=1h 0min, rating=5, comment=ecscd, transportType=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3, id=d49e30b2-27fe-49b5-aeca-492f7586ef33, timeHours=23, timeMinutes=9, tour=technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51}
2024-06-22 01:18:45.334 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    update
        tourlogs 
    set
        comment=?,
        date=?,
        difficultyid=?,
        distance=?,
        rating=?,
        timeHours=?,
        timeMinutes=?,
        totaltime=?,
        tourid_fk=?,
        transporttypeid_fk=? 
    where
        tourlogid=?
2024-06-22 01:18:45.339 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:45.339 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:18:45.339 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2024-06-22 01:18:45.340 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-22 01:18:45.342 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-22 01:18:45.342 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:18:45.343 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.344 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-22 01:18:45.346 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.347 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-22 01:18:45.347 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.347 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-22 01:18:45.347 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.347 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:18:45.347 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.347 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:45.351 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:45.351 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:45.351 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-22 01:18:45.351 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.351 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-22 01:18:45.351 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.351 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-22 01:18:45.351 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.351 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 7
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:45.352 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.353 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-22 01:18:45.355 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = ecscd
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 12.06.2024
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 4
2024-06-22 01:18:45.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.357 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-22 01:18:45.359 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:45.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:45.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-22 01:18:45.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-22 01:18:45.359 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4
2024-06-22 01:18:45.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 5
2024-06-22 01:18:45.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 5
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 23
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 9
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 1h 0min
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 3
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.360 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-22 01:18:45.362 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-22 01:18:45.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:45.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-22 01:18:45.363 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-22 01:18:45.363 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-22 01:18:45.363 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3
2024-06-22 01:18:45.363 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#d49e30b2-27fe-49b5-aeca-492f7586ef33]
2024-06-22 01:18:45.363 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-22 01:22:31.766 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-22 01:22:33.405 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.DAL.HibernateUtil - Hibernate SessionFactory created successfully
2024-06-22 01:22:33.665 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.TourListController - Updated tour list
2024-06-22 01:22:33.683 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.NavbarController - Map pin clicked
2024-06-22 01:22:35.226 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.TourEntryController - Detail Button clicked
2024-06-22 01:22:35.399 [Thread-4] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.TourLogListController - Successfully loaded tour logs for tour with id: 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:22:35.413 [Thread-4] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.TourLogListController - Successfully loaded tour logs for tour with id: 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:22:39.507 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.TourLogListController - Edit button clicked for tourLog with id 356b9cc3-e07f-497f-8b68-d25521993405
2024-06-22 01:22:44.835 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.TourLogListController - Successfully loaded tour logs for tour with id: 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:22:44.843 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.TourLogListController - Successfully loaded tour logs for tour with id: 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-22 01:35:59.883 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-22 01:36:01.799 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.DAL.HibernateUtil - Hibernate SessionFactory created successfully
2024-06-22 01:36:02.044 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.TourListController - Updated tour list
2024-06-22 01:36:02.058 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.NavbarController - Map pin clicked
2024-06-22 01:40:05.603 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.View.controllers.TourEntryController - Download Tour Report Button clicked
2024-06-22 01:40:31.790 [JavaFX Application Thread] INFO  technikum.at.tourplanner_swen2_team5.util.PDFGenerator - Successfully generated tour report for tour with id 76615c12-a3b7-4125-9e53-78bc40245f51
