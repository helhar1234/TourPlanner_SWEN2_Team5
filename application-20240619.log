2024-06-19 20:44:08.376 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-19 20:44:08.380 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-19 20:44:08.381 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-19 20:44:08.383 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-19 20:44:08.393 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version [WORKING]
2024-06-19 20:44:08.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-06-19 20:44:08.462 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2024-06-19 20:44:08.462 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2024-06-19 20:44:08.464 [JavaFX Application Thread] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-19 20:44:08.567 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-19 20:44:08.567 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-19 20:44:08.567 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-19 20:44:08.570 [JavaFX Application Thread] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-06-19 20:44:08.570 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
2024-06-19 20:44:08.575 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-19 20:44:08.575 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-06-19 20:44:08.584 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-19 20:44:08.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@50096777
2024-06-19 20:44:08.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@50096777
2024-06-19 20:44:08.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@50096777
2024-06-19 20:44:08.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3fd6af47
2024-06-19 20:44:08.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a57055c
2024-06-19 20:44:08.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@27dbf484
2024-06-19 20:44:08.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@593b5646
2024-06-19 20:44:08.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@593b5646
2024-06-19 20:44:08.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@593b5646
2024-06-19 20:44:08.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e5a8a04
2024-06-19 20:44:08.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e5a8a04
2024-06-19 20:44:08.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e5a8a04
2024-06-19 20:44:08.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3247b28a
2024-06-19 20:44:08.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3247b28a
2024-06-19 20:44:08.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3247b28a
2024-06-19 20:44:08.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@39c86daa
2024-06-19 20:44:08.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@39c86daa
2024-06-19 20:44:08.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@39c86daa
2024-06-19 20:44:08.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3902c44e
2024-06-19 20:44:08.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3902c44e
2024-06-19 20:44:08.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3902c44e
2024-06-19 20:44:08.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4ca010ab
2024-06-19 20:44:08.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4ca010ab
2024-06-19 20:44:08.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4ca010ab
2024-06-19 20:44:08.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6800c5c
2024-06-19 20:44:08.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6800c5c
2024-06-19 20:44:08.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6800c5c
2024-06-19 20:44:08.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58d4223
2024-06-19 20:44:08.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58d4223
2024-06-19 20:44:08.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8b304f8
2024-06-19 20:44:08.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8b304f8
2024-06-19 20:44:08.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@19095d3
2024-06-19 20:44:08.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@19095d3
2024-06-19 20:44:08.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4d2c4e12
2024-06-19 20:44:08.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5279dc6b
2024-06-19 20:44:08.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@27be917c
2024-06-19 20:44:08.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@27be917c
2024-06-19 20:44:08.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6a1c0ade
2024-06-19 20:44:08.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6a1c0ade
2024-06-19 20:44:08.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3b1ead2d
2024-06-19 20:44:08.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3b1ead2d
2024-06-19 20:44:08.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b3d43a
2024-06-19 20:44:08.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b3d43a
2024-06-19 20:44:08.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7ee2b744
2024-06-19 20:44:08.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7ee2b744
2024-06-19 20:44:08.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5e059a44
2024-06-19 20:44:08.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5e059a44
2024-06-19 20:44:08.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@387bf9fd
2024-06-19 20:44:08.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@387bf9fd
2024-06-19 20:44:08.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1cd277b4
2024-06-19 20:44:08.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1cd277b4
2024-06-19 20:44:08.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27273413
2024-06-19 20:44:08.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27273413
2024-06-19 20:44:08.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@a5d6c8f
2024-06-19 20:44:08.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@a5d6c8f
2024-06-19 20:44:08.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4cb0bd1d
2024-06-19 20:44:08.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4cb0bd1d
2024-06-19 20:44:08.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@45344e5f
2024-06-19 20:44:08.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@45344e5f
2024-06-19 20:44:08.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@45344e5f
2024-06-19 20:44:08.609 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@20f06b92
2024-06-19 20:44:08.609 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@775bd9fb
2024-06-19 20:44:08.609 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@775bd9fb
2024-06-19 20:44:08.609 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@775bd9fb
2024-06-19 20:44:08.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@107d2c70
2024-06-19 20:44:08.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@38727f64
2024-06-19 20:44:08.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4f83de8
2024-06-19 20:44:08.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4f83de8
2024-06-19 20:44:08.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5c28ec7a
2024-06-19 20:44:08.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5c28ec7a
2024-06-19 20:44:08.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7593e4e5
2024-06-19 20:44:08.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7593e4e5
2024-06-19 20:44:08.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6e50c766
2024-06-19 20:44:08.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e50c766
2024-06-19 20:44:08.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c19c55a
2024-06-19 20:44:08.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c19c55a
2024-06-19 20:44:08.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ac0b17d
2024-06-19 20:44:08.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@131a2ac4
2024-06-19 20:44:08.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@131a2ac4
2024-06-19 20:44:08.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@131a2ac4
2024-06-19 20:44:08.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75366a3f
2024-06-19 20:44:08.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75366a3f
2024-06-19 20:44:08.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75366a3f
2024-06-19 20:44:08.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1c88efcb
2024-06-19 20:44:08.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3414f100
2024-06-19 20:44:08.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@37f227bb
2024-06-19 20:44:08.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@37f227bb
2024-06-19 20:44:08.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@37f227bb
2024-06-19 20:44:08.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b95f6b0
2024-06-19 20:44:08.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b95f6b0
2024-06-19 20:44:08.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b95f6b0
2024-06-19 20:44:08.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@49eabd4b
2024-06-19 20:44:08.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3278799c
2024-06-19 20:44:08.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7cf066ca
2024-06-19 20:44:08.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7cf066ca
2024-06-19 20:44:08.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f88b858
2024-06-19 20:44:08.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65a2a25f
2024-06-19 20:44:08.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65a2a25f
2024-06-19 20:44:08.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@50f66538
2024-06-19 20:44:08.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50f66538
2024-06-19 20:44:08.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@283e9a86
2024-06-19 20:44:08.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5675ef07
2024-06-19 20:44:08.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3275e21f
2024-06-19 20:44:08.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@73c94442
2024-06-19 20:44:08.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@73c94442
2024-06-19 20:44:08.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@434cd1f9
2024-06-19 20:44:08.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@231a37b8
2024-06-19 20:44:08.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f595b1
2024-06-19 20:44:08.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6eef1b62
2024-06-19 20:44:08.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b89cc5f
2024-06-19 20:44:08.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@395c8561
2024-06-19 20:44:08.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72cfd7e6
2024-06-19 20:44:08.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64ede6d6
2024-06-19 20:44:08.627 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-19 20:44:08.627 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-19 20:44:08.628 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-19 20:44:08.628 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-19 20:44:08.628 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-19 20:44:08.628 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-19 20:44:08.628 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-19 20:44:08.629 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-19 20:44:08.629 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-06-19 20:44:08.629 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-19 20:44:08.629 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-19 20:44:08.629 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-06-19 20:44:08.629 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-19 20:44:08.630 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-19 20:44:08.631 [JavaFX Application Thread] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-06-19 20:44:08.634 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/tour_planner_g5_db]
2024-06-19 20:44:08.634 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-19 20:44:08.634 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-06-19 20:44:08.635 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-06-19 20:44:08.635 [JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-06-19 20:44:08.764 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 16.3 (Debian 16.3-1.pgdg120+1)
      major : 16
      minor : 3
2024-06-19 20:44:08.764 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.7.2
      major : 42
      minor : 7
2024-06-19 20:44:08.764 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-06-19 20:44:08.769 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-06-19 20:44:08.773 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-19 20:44:08.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@95a114
2024-06-19 20:44:08.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@95a114
2024-06-19 20:44:08.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1c19c55a
2024-06-19 20:44:08.808 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4cac16f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c609e25]
2024-06-19 20:44:08.822 [JavaFX Application Thread] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-19 20:44:08.827 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 20:44:08.833 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-19 20:44:08.835 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourModel
2024-06-19 20:44:08.836 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel on table tours
2024-06-19 20:44:08.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=tourid, insertable=true, updatable=false, unique=false}
2024-06-19 20:44:08.844 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-19 20:44:08.844 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 20:44:08.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-19 20:44:08.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:id]
2024-06-19 20:44:08.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-19 20:44:08.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-19 20:44:08.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourid)]), id, assigned, , ...)
2024-06-19 20:44:08.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=description, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
2024-06-19 20:44:08.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:description]
2024-06-19 20:44:08.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for description
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property description
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=destination, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property destination with lazy=false
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:destination]
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for destination
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property destination
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:distance]
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:name]
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-19 20:44:08.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=start, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property start with lazy=false
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:start]
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for start
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property start
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=time, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property time with lazy=false
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:time]
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for time
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property time
2024-06-19 20:44:08.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-19 20:44:08.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-19 20:44:08.854 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 20:44:08.854 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-19 20:44:08.854 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourLogModel
2024-06-19 20:44:08.854 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel on table tourlogs
2024-06-19 20:44:08.854 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tourlogid, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.854 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:id]
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourlogid)]), id, assigned, , ...)
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:comment]
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:date]
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-06-19 20:44:08.855 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='difficultyid', referencedColumn='difficultyid', mappedBy=''}
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:distance]
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=rating, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property rating with lazy=false
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:rating]
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for rating
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property rating
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeHours, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeHours with lazy=false
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeHours]
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeHours
2024-06-19 20:44:08.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeHours
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeMinutes, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeMinutes with lazy=false
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeMinutes]
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeMinutes
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeMinutes
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=totaltime, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property totalTime with lazy=false
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:totalTime]
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for totalTime
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property totalTime
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='tourid_fk', referencedColumn='tourid', mappedBy=''}
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tour, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tour
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-19 20:44:08.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-19 20:44:08.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-19 20:44:08.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourMapModel
2024-06-19 20:44:08.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel on table maps
2024-06-19 20:44:08.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.859 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:id]
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=filename, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property filename with lazy=false
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:filename]
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for filename
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property filename
2024-06-19 20:44:08.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=tourid_fk, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property tourId with lazy=false
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:tourId]
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for tourId
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tourId
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name DifficultyModel
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel on table difficulties
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficultyid, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-19 20:44:08.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:id]
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(difficultyid)]), id, identity, , ...)
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property difficulty with lazy=false
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:difficulty]
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for difficulty
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TransportTypeModel
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel on table transporttypes
2024-06-19 20:44:08.862 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=transporttypeid, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:id]
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(transporttypeid)]), id, identity, , ...)
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:name]
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-19 20:44:08.863 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for description
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for destination
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for start
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for time
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for comment
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for rating
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeHours
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeMinutes
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for totalTime
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for filename
2024-06-19 20:44:08.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for tourId
2024-06-19 20:44:08.865 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-19 20:44:08.865 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for difficulty
2024-06-19 20:44:08.865 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-19 20:44:08.865 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-19 20:44:08.866 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourid] to be non-null as it is part of the primary key for table [tours]
2024-06-19 20:44:08.867 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourlogid] to be non-null as it is part of the primary key for table [tourlogs]
2024-06-19 20:44:08.867 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [maps]
2024-06-19 20:44:08.867 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [difficultyid] to be non-null as it is part of the primary key for table [difficulties]
2024-06-19 20:44:08.867 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [transporttypeid] to be non-null as it is part of the primary key for table [transporttypes]
2024-06-19 20:44:08.867 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 20:44:08.869 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 20:44:08.869 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 20:44:08.869 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 20:44:08.870 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 20:44:08.870 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 20:44:08.870 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 20:44:08.870 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 20:44:08.882 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-06-19 20:44:08.883 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
2024-06-19 20:44:08.884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-06-19 20:44:08.884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-06-19 20:44:08.884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-06-19 20:44:08.884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-06-19 20:44:08.884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-06-19 20:44:08.884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-06-19 20:44:08.884 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-06-19 20:44:08.901 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-19 20:44:08.902 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-19 20:44:08.906 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-06-19 20:44:08.906 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=22, javafx.runtime.version=21+31, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/elena/.m2/repository/org/openjfx/javafx-controls/21/javafx-controls-21.jar:/Users/elena/.m2/repository/org/openjfx/javafx-graphics/21/javafx-graphics-21.jar:/Users/elena/.m2/repository/org/openjfx/javafx-base/21/javafx-base-21.jar:/Users/elena/.m2/repository/org/openjfx/javafx-fxml/21/javafx-fxml-21.jar:/Users/elena/.m2/repository/org/openjfx/javafx-web/21/javafx-web-21.jar:/Users/elena/.m2/repository/org/openjfx/javafx-media/21/javafx-media-21.jar:/Users/elena/.m2/repository/org/jacoco/org.jacoco.agent/0.8.8/org.jacoco.agent-0.8.8-runtime.jar:/Users/elena/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/elena/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/elena/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/elena/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/elena/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/Users/elena/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/elena/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/elena/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/elena/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/elena/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/elena/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/elena/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/elena/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/elena/.m2/repository/org/postgresql/postgresql/42.7.2/postgresql-42.7.2.jar:/Users/elena/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/Users/elena/.m2/repository/com/squareup/okio/okio/2.8.0/okio-2.8.0.jar:/Users/elena/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.4.0/kotlin-stdlib-common-1.4.0.jar:/Users/elena/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.4.10/kotlin-stdlib-1.4.10.jar:/Users/elena/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/Users/elena/.m2/repository/com/itextpdf/bouncy-castle-connector/8.0.4/bouncy-castle-connector-8.0.4.jar:/Users/elena/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/elena/.m2/repository/com/itextpdf/io/8.0.4/io-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/commons/8.0.4/commons-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/forms/8.0.4/forms-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/pdfa/8.0.4/pdfa-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/sign/8.0.4/sign-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/barcodes/8.0.4/barcodes-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/font-asian/8.0.4/font-asian-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/hyph/8.0.4/hyph-8.0.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Vienna, java.vm.specification.version=22, os.name=Mac OS X, javafx.version=21, sun.java.launcher=SUN_STANDARD, user.country=AT, sun.boot.library.path=/Users/elena/Library/Java/JavaVirtualMachines/openjdk-22.0.1/Contents/Home/lib, sun.java.command=technikum.at.tourplanner_swen2_team5/technikum.at.tourplanner_swen2_team5.MainTourPlaner, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/elena, user.language=de, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=/Users/elena/.m2/repository/org/openjfx/javafx-base/21/javafx-base-21-mac-aarch64.jar:/Users/elena/.m2/repository/com/squareup/okhttp3/okhttp/4.9.3/okhttp-4.9.3.jar:/Users/elena/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/elena/.m2/repository/com/itextpdf/kernel/8.0.4/kernel-8.0.4.jar:/Users/elena/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/elena/.m2/repository/org/openjfx/javafx-web/21/javafx-web-21-mac-aarch64.jar:/Users/elena/.m2/repository/org/apache/logging/log4j/log4j-core/2.23.1/log4j-core-2.23.1.jar:/Users/elena/.m2/repository/org/openjfx/javafx-controls/21/javafx-controls-21-mac-aarch64.jar:/Users/elena/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/elena/.m2/repository/org/apache/logging/log4j/log4j-api/2.23.1/log4j-api-2.23.1.jar:/Users/elena/.m2/repository/org/openjfx/javafx-fxml/21/javafx-fxml-21-mac-aarch64.jar:/Users/elena/.m2/repository/org/json/json/20210307/json-20210307.jar:/Users/elena/.m2/repository/org/openjfx/javafx-graphics/21/javafx-graphics-21-mac-aarch64.jar:/Users/elena/.m2/repository/org/hibernate/hibernate-core/5.6.15.Final/hibernate-core-5.6.15.Final.jar:/Users/elena/.m2/repository/org/openjfx/javafx-media/21/javafx-media-21-mac-aarch64.jar:/Users/elena/.m2/repository/com/itextpdf/layout/8.0.4/layout-8.0.4.jar:/Users/elena/IdeaProjects/TourPlanner_SWEN2_Team5/target/classes, java.version.date=2024-04-16, java.home=/Users/elena/Library/Java/JavaVirtualMachines/openjdk-22.0.1/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, apple.awt.application.name=MainTourPlaner, jdk.module.main.class=technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.module.main=technikum.at.tourplanner_swen2_team5, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=22.0.1+8-16, user.name=elena, stdout.encoding=UTF-8, path.separator=:, hibernate.connection.username=****, os.version=13.6.7, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/tour_planner_g5_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/gh/g4flnbd93rx23cjr8vm5rgw00000gn/T/, java.version=22.0.1, user.dir=/Users/elena/IdeaProjects/TourPlanner_SWEN2_Team5, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2beb422a, native.encoding=UTF-8, java.library.path=/Users/elena/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=66.0}
2024-06-19 20:44:08.911 [JavaFX Application Thread] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-06-19 20:44:08.911 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-06-19 20:44:08.912 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4cac16f7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4203091]
2024-06-19 20:44:08.932 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-19 20:44:08.933 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 20:44:08.999 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-19 20:44:08.999 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-19 20:44:09.006 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.006 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.006 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.006 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.006 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.007 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.007 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-19 20:44:09.007 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 20:44:09.017 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.017 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.017 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.017 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.017 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.017 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.018 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-19 20:44:09.018 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 20:44:09.023 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.023 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.023 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-19 20:44:09.023 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 20:44:09.030 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.030 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 20:44:09.033 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 20:44:09.033 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select difficultyid from difficulties where difficultyid =?
2024-06-19 20:44:09.033 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select difficulty_.difficultyid, difficulty_.difficulty as difficul2_0_ from difficulties difficulty_ where difficulty_.difficultyid=?
2024-06-19 20:44:09.033 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into difficulties (difficulty, difficultyid) values (?, ?)
2024-06-19 20:44:09.033 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update difficulties set difficulty=? where difficultyid=?
2024-06-19 20:44:09.033 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from difficulties where difficultyid=?
2024-06-19 20:44:09.033 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into difficulties (difficulty) values (?)
2024-06-19 20:44:09.040 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a94f132]
2024-06-19 20:44:09.041 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-19 20:44:09.041 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-19 20:44:09.045 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-19 20:44:09.046 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
          - SQL table alias mapping - difficulty0_
          - alias suffix - 0_
          - suffixed key columns - {difficul1_0_0_}

2024-06-19 20:44:09.046 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel [NONE]: select difficulty0_.difficultyid as difficul1_0_0_, difficulty0_.difficulty as difficul2_0_0_ from difficulties difficulty0_ where difficulty0_.difficultyid=?
2024-06-19 20:44:09.046 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-19 20:44:09.046 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from maps where id =?
2024-06-19 20:44:09.046 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmapmod_.id, tourmapmod_.filename as filename2_1_, tourmapmod_.tourid_fk as tourid_f3_1_ from maps tourmapmod_ where tourmapmod_.id=?
2024-06-19 20:44:09.046 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into maps (filename, tourid_fk, id) values (?, ?, ?)
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update maps set filename=?, tourid_fk=? where id=?
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from maps where id=?
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into maps (filename, tourid_fk) values (?, ?)
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb73076]
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : filename
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tourId
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
          - SQL table alias mapping - tourmapmod0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel [NONE]: select tourmapmod0_.id as id1_1_0_, tourmapmod0_.filename as filename2_1_0_, tourmapmod0_.tourid_fk as tourid_f3_1_0_ from maps tourmapmod0_ where tourmapmod0_.id=?
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourlogid from tourlogs where tourlogid =?
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourlogmod_.tourlogid, tourlogmod_.comment as comment2_2_, tourlogmod_.date as date3_2_, tourlogmod_.difficultyid as difficul9_2_, tourlogmod_.distance as distance4_2_, tourlogmod_.rating as rating5_2_, tourlogmod_.timeHours as timehour6_2_, tourlogmod_.timeMinutes as timeminu7_2_, tourlogmod_.totaltime as totaltim8_2_, tourlogmod_.tourid_fk as tourid_10_2_, tourlogmod_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod_ where tourlogmod_.tourlogid=?
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tourlogs (comment, date, difficultyid, distance, rating, timeHours, timeMinutes, totaltime, tourid_fk, transporttypeid_fk, tourlogid) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tourlogs set comment=?, date=?, difficultyid=?, distance=?, rating=?, timeHours=?, timeMinutes=?, totaltime=?, tourid_fk=?, transporttypeid_fk=? where tourlogid=?
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tourlogs where tourlogid=?
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b952ad0]
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-06-19 20:44:09.047 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-19 20:44:09.049 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e2bdbba]
2024-06-19 20:44:09.049 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty.difficulty
2024-06-19 20:44:09.049 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-19 20:44:09.049 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : rating
2024-06-19 20:44:09.049 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeHours
2024-06-19 20:44:09.049 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeMinutes
2024-06-19 20:44:09.049 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : totalTime
2024-06-19 20:44:09.049 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc370de]
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.description
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.destination
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.distance
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.name
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.start
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.time
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@659d1ef5]
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType.name
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33777b76]
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-19 20:44:09.050 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.difficulty)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:2>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour)
             - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:3>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour.transportType)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:4>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - SQL table alias mapping - tourlogmod0_
          - alias suffix - 0_
          - suffixed key columns - {tourlogi1_2_0_}
          - JOIN (JoinDefinedByMetadata(difficulty)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
                - SQL table alias mapping - difficulty1_
                - alias suffix - 1_
                - suffixed key columns - {difficul1_0_1_}
          - JOIN (JoinDefinedByMetadata(tour)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
                - SQL table alias mapping - tourmodel2_
                - alias suffix - 2_
                - suffixed key columns - {tourid1_3_2_}
                - JOIN (JoinDefinedByMetadata(transportType)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                      - SQL table alias mapping - transportt3_
                      - alias suffix - 3_
                      - suffixed key columns - {transpor1_4_3_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt4_
                - alias suffix - 4_
                - suffixed key columns - {transpor1_4_4_}

2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel [NONE]: select tourlogmod0_.tourlogid as tourlogi1_2_0_, tourlogmod0_.comment as comment2_2_0_, tourlogmod0_.date as date3_2_0_, tourlogmod0_.difficultyid as difficul9_2_0_, tourlogmod0_.distance as distance4_2_0_, tourlogmod0_.rating as rating5_2_0_, tourlogmod0_.timeHours as timehour6_2_0_, tourlogmod0_.timeMinutes as timeminu7_2_0_, tourlogmod0_.totaltime as totaltim8_2_0_, tourlogmod0_.tourid_fk as tourid_10_2_0_, tourlogmod0_.transporttypeid_fk as transpo11_2_0_, difficulty1_.difficultyid as difficul1_0_1_, difficulty1_.difficulty as difficul2_0_1_, tourmodel2_.tourid as tourid1_3_2_, tourmodel2_.description as descript2_3_2_, tourmodel2_.destination as destinat3_3_2_, tourmodel2_.distance as distance4_3_2_, tourmodel2_.name as name5_3_2_, tourmodel2_.start as start6_3_2_, tourmodel2_.time as time7_3_2_, tourmodel2_.transporttypeid_fk as transpor8_3_2_, transportt3_.transporttypeid as transpor1_4_3_, transportt3_.name as name2_4_3_, transportt4_.transporttypeid as transpor1_4_4_, transportt4_.name as name2_4_4_ from tourlogs tourlogmod0_ left outer join difficulties difficulty1_ on tourlogmod0_.difficultyid=difficulty1_.difficultyid inner join tours tourmodel2_ on tourlogmod0_.tourid_fk=tourmodel2_.tourid inner join transporttypes transportt3_ on tourmodel2_.transporttypeid_fk=transportt3_.transporttypeid left outer join transporttypes transportt4_ on tourlogmod0_.transporttypeid_fk=transportt4_.transporttypeid where tourlogmod0_.tourlogid=?
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select transporttypeid from transporttypes where transporttypeid =?
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select transportt_.transporttypeid, transportt_.name as name2_4_ from transporttypes transportt_ where transportt_.transporttypeid=?
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into transporttypes (name, transporttypeid) values (?, ?)
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update transporttypes set name=? where transporttypeid=?
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from transporttypes where transporttypeid=?
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into transporttypes (name) values (?)
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@737cd762]
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
          - SQL table alias mapping - transportt0_
          - alias suffix - 0_
          - suffixed key columns - {transpor1_4_0_}

2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel [NONE]: select transportt0_.transporttypeid as transpor1_4_0_, transportt0_.name as name2_4_0_ from transporttypes transportt0_ where transportt0_.transporttypeid=?
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourid from tours where tourid =?
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmodel_.tourid, tourmodel_.description as descript2_3_, tourmodel_.destination as destinat3_3_, tourmodel_.distance as distance4_3_, tourmodel_.name as name5_3_, tourmodel_.start as start6_3_, tourmodel_.time as time7_3_, tourmodel_.transporttypeid_fk as transpor8_3_ from tours tourmodel_ where tourmodel_.tourid=?
2024-06-19 20:44:09.051 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tours (description, destination, distance, name, start, time, transporttypeid_fk, tourid) values (?, ?, ?, ?, ?, ?, ?, ?)
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tours set description=?, destination=?, distance=?, name=?, start=?, time=?, transporttypeid_fk=? where tourid=?
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tours where tourid=?
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134fb5ee]
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : destination
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : start
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : time
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11583908]
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - SQL table alias mapping - tourmodel0_
          - alias suffix - 0_
          - suffixed key columns - {tourid1_3_0_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt1_
                - alias suffix - 1_
                - suffixed key columns - {transpor1_4_1_}

2024-06-19 20:44:09.052 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel [NONE]: select tourmodel0_.tourid as tourid1_3_0_, tourmodel0_.description as descript2_3_0_, tourmodel0_.destination as destinat3_3_0_, tourmodel0_.distance as distance4_3_0_, tourmodel0_.name as name5_3_0_, tourmodel0_.start as start6_3_0_, tourmodel0_.time as time7_3_0_, tourmodel0_.transporttypeid_fk as transpor8_3_0_, transportt1_.transporttypeid as transpor1_4_1_, transportt1_.name as name2_4_1_ from tours tourmodel0_ inner join transporttypes transportt1_ on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid where tourmodel0_.tourid=?
2024-06-19 20:44:09.066 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@ce58a76] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-06-19 20:44:09.108 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : difficulties
2024-06-19 20:44:09.108 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : maps
2024-06-19 20:44:09.108 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tourlogs
2024-06-19 20:44:09.108 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tours
2024-06-19 20:44:09.108 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : transporttypes
2024-06-19 20:44:09.132 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-06-19 20:44:09.133 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-19 20:44:09.134 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-19 20:44:09.134 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-19 20:44:09.135 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-19 20:44:09.136 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@51d5f8c5
2024-06-19 20:44:09.137 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
2024-06-19 20:44:09.137 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-06-19 20:44:09.138 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2c9de156
2024-06-19 20:44:09.138 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: f2f77707-a081-4f1d-ba8a-0694cc63d5a9 (<unnamed>)
2024-06-19 20:44:09.138 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-19 20:44:09.157 [JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-06-19 20:44:09.170 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 20:44:09.171 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 20:44:09.175 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourModel'

2024-06-19 20:44:09.181 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-19 20:44:09.184 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-19 20:44:09.184 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-19 20:44:09.184 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) )
2024-06-19 20:44:09.185 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-19 20:44:09.186 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-19 20:44:09.187 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-19 20:44:09.187 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-19 20:44:09.187 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}

2024-06-19 20:44:09.187 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 20:44:09.189 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 20:44:09.189 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_
2024-06-19 20:44:09.189 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 20:44:09.192 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-19 20:44:09.195 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 20:44:09.196 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:09.198 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 20:44:09.198 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 20:44:09.198 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 20:44:09.199 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.200 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 20:44:09.208 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 20:44:09.208 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 20:44:09.208 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 20:44:09.208 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.209 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 20:44:09.210 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.211 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 20:44:09.212 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 20:44:09.212 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 20:44:09.212 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 20:44:09.212 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.213 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 20:44:09.213 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-19 20:44:09.213 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 20:44:09.213 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 20:44:09.221 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-19 20:44:09.222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 20:44:09.222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:09.222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 20:44:09.222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.223 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 20:44:09.224 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 20:44:09.224 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 20:44:09.224 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 20:44:09.224 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.224 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 20:44:09.224 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-19 20:44:09.224 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:09.224 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 20:44:09.224 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 20:44:09.224 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.225 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 20:44:09.226 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 20:44:09.226 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 20:44:09.226 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 20:44:09.226 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:09.226 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 20:44:09.226 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-19 20:44:09.226 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 20:44:09.226 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 20:44:10.973 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-19 20:44:10.974 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 20:44:10.974 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-19 20:44:10.974 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-19 20:44:10.974 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-19 20:44:10.975 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-19 20:44:10.976 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@19095d3
2024-06-19 20:44:10.976 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourmodel0_.tourid
2024-06-19 20:44:10.977 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-19 20:44:10.977 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) ( WHERE ( = ( tourmodel0_.tourid {synthetic-alias} id ) ? ) ) )
2024-06-19 20:44:10.977 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-19 20:44:10.977 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-19 20:44:10.977 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-19 20:44:10.977 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-19 20:44:10.978 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourmodel0_.tourid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourmodel0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@19095d3}

2024-06-19 20:44:10.978 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 20:44:10.978 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-19 20:44:10.978 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_ where tourmodel0_.tourid=?
2024-06-19 20:44:10.978 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 20:44:10.980 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_ 
    where
        tourmodel0_.tourid=?
2024-06-19 20:44:10.984 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:10.985 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 20:44:10.987 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 20:44:10.987 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 20:44:10.988 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 20:44:10.988 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:10.988 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 20:44:10.988 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-19 20:44:10.988 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:10.988 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 20:44:11.101 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourLogModel'

2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) )
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}

2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_
2024-06-19 20:44:11.102 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 20:44:11.103 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-19 20:44:11.104 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 20:44:11.104 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.105 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-19 20:44:11.106 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.107 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.108 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.109 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = Nice
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 30.05.2024
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 12.3
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 1
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-19 20:44:11.110 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.111 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 20:44:11.111 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.111 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 20:44:11.111 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 20:44:11.111 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 20:44:11.111 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:47:15.949 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-19 21:47:15.954 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-19 21:47:15.954 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-19 21:47:15.956 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-19 21:47:15.966 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version [WORKING]
2024-06-19 21:47:15.967 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-06-19 21:47:16.039 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2024-06-19 21:47:16.039 [JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2024-06-19 21:47:16.042 [JavaFX Application Thread] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-19 21:47:16.140 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-06-19 21:47:16.140 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-06-19 21:47:16.140 [JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-19 21:47:16.143 [JavaFX Application Thread] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-06-19 21:47:16.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
2024-06-19 21:47:16.148 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-19 21:47:16.149 [JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-06-19 21:47:16.157 [JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-19 21:47:16.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@50096777
2024-06-19 21:47:16.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@50096777
2024-06-19 21:47:16.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@50096777
2024-06-19 21:47:16.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3fd6af47
2024-06-19 21:47:16.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a57055c
2024-06-19 21:47:16.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@27dbf484
2024-06-19 21:47:16.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@593b5646
2024-06-19 21:47:16.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@593b5646
2024-06-19 21:47:16.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@593b5646
2024-06-19 21:47:16.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e5a8a04
2024-06-19 21:47:16.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e5a8a04
2024-06-19 21:47:16.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e5a8a04
2024-06-19 21:47:16.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3247b28a
2024-06-19 21:47:16.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3247b28a
2024-06-19 21:47:16.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3247b28a
2024-06-19 21:47:16.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@39c86daa
2024-06-19 21:47:16.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@39c86daa
2024-06-19 21:47:16.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@39c86daa
2024-06-19 21:47:16.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3902c44e
2024-06-19 21:47:16.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3902c44e
2024-06-19 21:47:16.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3902c44e
2024-06-19 21:47:16.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4ca010ab
2024-06-19 21:47:16.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4ca010ab
2024-06-19 21:47:16.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4ca010ab
2024-06-19 21:47:16.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6800c5c
2024-06-19 21:47:16.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6800c5c
2024-06-19 21:47:16.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6800c5c
2024-06-19 21:47:16.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58d4223
2024-06-19 21:47:16.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58d4223
2024-06-19 21:47:16.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8b304f8
2024-06-19 21:47:16.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8b304f8
2024-06-19 21:47:16.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@19095d3
2024-06-19 21:47:16.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@19095d3
2024-06-19 21:47:16.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4d2c4e12
2024-06-19 21:47:16.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5279dc6b
2024-06-19 21:47:16.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@27be917c
2024-06-19 21:47:16.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@27be917c
2024-06-19 21:47:16.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6a1c0ade
2024-06-19 21:47:16.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6a1c0ade
2024-06-19 21:47:16.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3b1ead2d
2024-06-19 21:47:16.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3b1ead2d
2024-06-19 21:47:16.177 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b3d43a
2024-06-19 21:47:16.177 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b3d43a
2024-06-19 21:47:16.177 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7ee2b744
2024-06-19 21:47:16.177 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7ee2b744
2024-06-19 21:47:16.177 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5e059a44
2024-06-19 21:47:16.178 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5e059a44
2024-06-19 21:47:16.178 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@387bf9fd
2024-06-19 21:47:16.178 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@387bf9fd
2024-06-19 21:47:16.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1cd277b4
2024-06-19 21:47:16.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1cd277b4
2024-06-19 21:47:16.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27273413
2024-06-19 21:47:16.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27273413
2024-06-19 21:47:16.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@a5d6c8f
2024-06-19 21:47:16.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@a5d6c8f
2024-06-19 21:47:16.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4cb0bd1d
2024-06-19 21:47:16.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4cb0bd1d
2024-06-19 21:47:16.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@45344e5f
2024-06-19 21:47:16.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@45344e5f
2024-06-19 21:47:16.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@45344e5f
2024-06-19 21:47:16.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@20f06b92
2024-06-19 21:47:16.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@775bd9fb
2024-06-19 21:47:16.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@775bd9fb
2024-06-19 21:47:16.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@775bd9fb
2024-06-19 21:47:16.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@107d2c70
2024-06-19 21:47:16.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@38727f64
2024-06-19 21:47:16.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4f83de8
2024-06-19 21:47:16.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4f83de8
2024-06-19 21:47:16.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5c28ec7a
2024-06-19 21:47:16.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5c28ec7a
2024-06-19 21:47:16.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7593e4e5
2024-06-19 21:47:16.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7593e4e5
2024-06-19 21:47:16.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6e50c766
2024-06-19 21:47:16.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e50c766
2024-06-19 21:47:16.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c19c55a
2024-06-19 21:47:16.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c19c55a
2024-06-19 21:47:16.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ac0b17d
2024-06-19 21:47:16.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@131a2ac4
2024-06-19 21:47:16.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@131a2ac4
2024-06-19 21:47:16.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@131a2ac4
2024-06-19 21:47:16.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75366a3f
2024-06-19 21:47:16.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75366a3f
2024-06-19 21:47:16.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75366a3f
2024-06-19 21:47:16.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1c88efcb
2024-06-19 21:47:16.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3414f100
2024-06-19 21:47:16.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@37f227bb
2024-06-19 21:47:16.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@37f227bb
2024-06-19 21:47:16.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@37f227bb
2024-06-19 21:47:16.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b95f6b0
2024-06-19 21:47:16.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b95f6b0
2024-06-19 21:47:16.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b95f6b0
2024-06-19 21:47:16.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@49eabd4b
2024-06-19 21:47:16.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3278799c
2024-06-19 21:47:16.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7cf066ca
2024-06-19 21:47:16.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7cf066ca
2024-06-19 21:47:16.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f88b858
2024-06-19 21:47:16.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65a2a25f
2024-06-19 21:47:16.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65a2a25f
2024-06-19 21:47:16.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@50f66538
2024-06-19 21:47:16.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50f66538
2024-06-19 21:47:16.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@283e9a86
2024-06-19 21:47:16.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5675ef07
2024-06-19 21:47:16.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3275e21f
2024-06-19 21:47:16.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@73c94442
2024-06-19 21:47:16.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@73c94442
2024-06-19 21:47:16.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@434cd1f9
2024-06-19 21:47:16.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@231a37b8
2024-06-19 21:47:16.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f595b1
2024-06-19 21:47:16.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6eef1b62
2024-06-19 21:47:16.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b89cc5f
2024-06-19 21:47:16.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@395c8561
2024-06-19 21:47:16.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72cfd7e6
2024-06-19 21:47:16.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64ede6d6
2024-06-19 21:47:16.201 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-19 21:47:16.201 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-19 21:47:16.201 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-19 21:47:16.201 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-19 21:47:16.201 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-19 21:47:16.201 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-19 21:47:16.201 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-19 21:47:16.202 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-19 21:47:16.202 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-06-19 21:47:16.202 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-19 21:47:16.202 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-19 21:47:16.202 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-06-19 21:47:16.202 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-19 21:47:16.203 [JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-19 21:47:16.204 [JavaFX Application Thread] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-06-19 21:47:16.207 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/tour_planner_g5_db]
2024-06-19 21:47:16.207 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-19 21:47:16.207 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-06-19 21:47:16.208 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-06-19 21:47:16.208 [JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-06-19 21:47:16.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 16.3 (Debian 16.3-1.pgdg120+1)
      major : 16
      minor : 3
2024-06-19 21:47:16.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.7.2
      major : 42
      minor : 7
2024-06-19 21:47:16.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-06-19 21:47:16.327 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-06-19 21:47:16.331 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-19 21:47:16.349 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@95a114
2024-06-19 21:47:16.349 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@95a114
2024-06-19 21:47:16.349 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1c19c55a
2024-06-19 21:47:16.350 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4cac16f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c609e25]
2024-06-19 21:47:16.365 [JavaFX Application Thread] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-19 21:47:16.370 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 21:47:16.377 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-19 21:47:16.378 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourModel
2024-06-19 21:47:16.379 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel on table tours
2024-06-19 21:47:16.387 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=tourid, insertable=true, updatable=false, unique=false}
2024-06-19 21:47:16.388 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-19 21:47:16.388 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 21:47:16.388 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-19 21:47:16.389 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:id]
2024-06-19 21:47:16.390 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-19 21:47:16.390 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-19 21:47:16.391 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourid)]), id, assigned, , ...)
2024-06-19 21:47:16.391 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=description, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.391 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:description]
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for description
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property description
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=destination, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property destination with lazy=false
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:destination]
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for destination
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property destination
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:distance]
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-19 21:47:16.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:name]
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=start, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property start with lazy=false
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:start]
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for start
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property start
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=time, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property time with lazy=false
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourModel:time]
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for time
2024-06-19 21:47:16.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property time
2024-06-19 21:47:16.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-19 21:47:16.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tours), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-19 21:47:16.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 21:47:16.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-19 21:47:16.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourLogModel
2024-06-19 21:47:16.398 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel on table tourlogs
2024-06-19 21:47:16.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tourlogid, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.399 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-19 21:47:16.399 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 21:47:16.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-19 21:47:16.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:id]
2024-06-19 21:47:16.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-19 21:47:16.399 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tourlogid)]), id, assigned, , ...)
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=comment, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property comment with lazy=false
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:comment]
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for comment
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property comment
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:date]
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='difficultyid', referencedColumn='difficultyid', mappedBy=''}
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=distance, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.400 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property distance with lazy=false
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:distance]
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for distance
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property distance
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=rating, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property rating with lazy=false
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:rating]
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for rating
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property rating
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeHours, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeHours with lazy=false
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeHours]
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeHours
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeHours
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=timeMinutes, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property timeMinutes with lazy=false
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:timeMinutes]
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for timeMinutes
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property timeMinutes
2024-06-19 21:47:16.401 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=totaltime, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property totalTime with lazy=false
2024-06-19 21:47:16.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel:totalTime]
2024-06-19 21:47:16.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for totalTime
2024-06-19 21:47:16.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property totalTime
2024-06-19 21:47:16.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='tourid_fk', referencedColumn='tourid', mappedBy=''}
2024-06-19 21:47:16.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=tour, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tour
2024-06-19 21:47:16.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='transporttypeid_fk', referencedColumn='transporttypeid', mappedBy=''}
2024-06-19 21:47:16.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tourlogs), mappingColumn=transportType, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.402 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property transportType
2024-06-19 21:47:16.403 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-19 21:47:16.403 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-19 21:47:16.403 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TourMapModel
2024-06-19 21:47:16.403 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel on table maps
2024-06-19 21:47:16.404 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.404 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-19 21:47:16.404 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-19 21:47:16.404 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-19 21:47:16.404 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:id]
2024-06-19 21:47:16.404 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-19 21:47:16.404 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=filename, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property filename with lazy=false
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:filename]
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for filename
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property filename
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(maps), mappingColumn=tourid_fk, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property tourId with lazy=false
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel:tourId]
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for tourId
2024-06-19 21:47:16.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property tourId
2024-06-19 21:47:16.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 21:47:16.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-19 21:47:16.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name DifficultyModel
2024-06-19 21:47:16.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel on table difficulties
2024-06-19 21:47:16.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficultyid, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.406 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-19 21:47:16.406 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 21:47:16.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-19 21:47:16.406 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:id]
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(difficultyid)]), id, identity, , ...)
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(difficulties), mappingColumn=difficulty, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property difficulty with lazy=false
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel:difficulty]
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for difficulty
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property difficulty
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name TransportTypeModel
2024-06-19 21:47:16.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel on table transporttypes
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=transporttypeid, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:id]
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(transporttypeid)]), id, identity, , ...)
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(transporttypes), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel:name]
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-06-19 21:47:16.408 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for description
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for destination
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for start
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for time
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for comment
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for distance
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for rating
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeHours
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for timeMinutes
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for totalTime
2024-06-19 21:47:16.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-19 21:47:16.410 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for filename
2024-06-19 21:47:16.410 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for tourId
2024-06-19 21:47:16.410 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-19 21:47:16.410 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for difficulty
2024-06-19 21:47:16.410 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-06-19 21:47:16.410 [JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-06-19 21:47:16.412 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourid] to be non-null as it is part of the primary key for table [tours]
2024-06-19 21:47:16.412 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [tourlogid] to be non-null as it is part of the primary key for table [tourlogs]
2024-06-19 21:47:16.412 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [maps]
2024-06-19 21:47:16.412 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [difficultyid] to be non-null as it is part of the primary key for table [difficulties]
2024-06-19 21:47:16.412 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [transporttypeid] to be non-null as it is part of the primary key for table [transporttypes]
2024-06-19 21:47:16.412 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 21:47:16.414 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 21:47:16.414 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 21:47:16.414 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 21:47:16.415 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 21:47:16.415 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 21:47:16.415 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 21:47:16.415 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 21:47:16.429 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-06-19 21:47:16.429 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
2024-06-19 21:47:16.430 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-06-19 21:47:16.431 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-06-19 21:47:16.431 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-06-19 21:47:16.431 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-06-19 21:47:16.431 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-06-19 21:47:16.431 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-06-19 21:47:16.431 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-06-19 21:47:16.448 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-19 21:47:16.449 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-19 21:47:16.454 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-06-19 21:47:16.454 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=22, javafx.runtime.version=21+31, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/elena/.m2/repository/org/openjfx/javafx-controls/21/javafx-controls-21.jar:/Users/elena/.m2/repository/org/openjfx/javafx-graphics/21/javafx-graphics-21.jar:/Users/elena/.m2/repository/org/openjfx/javafx-base/21/javafx-base-21.jar:/Users/elena/.m2/repository/org/openjfx/javafx-fxml/21/javafx-fxml-21.jar:/Users/elena/.m2/repository/org/openjfx/javafx-web/21/javafx-web-21.jar:/Users/elena/.m2/repository/org/openjfx/javafx-media/21/javafx-media-21.jar:/Users/elena/.m2/repository/org/jacoco/org.jacoco.agent/0.8.8/org.jacoco.agent-0.8.8-runtime.jar:/Users/elena/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/elena/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/elena/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/elena/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/elena/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/Users/elena/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/elena/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/elena/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/elena/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/elena/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/elena/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/elena/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/elena/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/elena/.m2/repository/org/postgresql/postgresql/42.7.2/postgresql-42.7.2.jar:/Users/elena/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/Users/elena/.m2/repository/com/squareup/okio/okio/2.8.0/okio-2.8.0.jar:/Users/elena/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.4.0/kotlin-stdlib-common-1.4.0.jar:/Users/elena/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.4.10/kotlin-stdlib-1.4.10.jar:/Users/elena/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/Users/elena/.m2/repository/com/itextpdf/bouncy-castle-connector/8.0.4/bouncy-castle-connector-8.0.4.jar:/Users/elena/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/elena/.m2/repository/com/itextpdf/io/8.0.4/io-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/commons/8.0.4/commons-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/forms/8.0.4/forms-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/pdfa/8.0.4/pdfa-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/sign/8.0.4/sign-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/barcodes/8.0.4/barcodes-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/font-asian/8.0.4/font-asian-8.0.4.jar:/Users/elena/.m2/repository/com/itextpdf/hyph/8.0.4/hyph-8.0.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Vienna, java.vm.specification.version=22, os.name=Mac OS X, javafx.version=21, sun.java.launcher=SUN_STANDARD, user.country=AT, sun.boot.library.path=/Users/elena/Library/Java/JavaVirtualMachines/openjdk-22.0.1/Contents/Home/lib, sun.java.command=technikum.at.tourplanner_swen2_team5/technikum.at.tourplanner_swen2_team5.MainTourPlaner, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/elena, user.language=de, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=/Users/elena/.m2/repository/org/openjfx/javafx-web/21/javafx-web-21-mac-aarch64.jar:/Users/elena/.m2/repository/org/openjfx/javafx-graphics/21/javafx-graphics-21-mac-aarch64.jar:/Users/elena/.m2/repository/org/openjfx/javafx-controls/21/javafx-controls-21-mac-aarch64.jar:/Users/elena/.m2/repository/com/squareup/okhttp3/okhttp/4.9.3/okhttp-4.9.3.jar:/Users/elena/.m2/repository/org/openjfx/javafx-base/21/javafx-base-21-mac-aarch64.jar:/Users/elena/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/elena/.m2/repository/com/itextpdf/kernel/8.0.4/kernel-8.0.4.jar:/Users/elena/.m2/repository/org/openjfx/javafx-media/21/javafx-media-21-mac-aarch64.jar:/Users/elena/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/elena/.m2/repository/org/apache/logging/log4j/log4j-api/2.23.1/log4j-api-2.23.1.jar:/Users/elena/.m2/repository/org/json/json/20210307/json-20210307.jar:/Users/elena/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/elena/.m2/repository/org/openjfx/javafx-fxml/21/javafx-fxml-21-mac-aarch64.jar:/Users/elena/.m2/repository/org/hibernate/hibernate-core/5.6.15.Final/hibernate-core-5.6.15.Final.jar:/Users/elena/.m2/repository/com/itextpdf/layout/8.0.4/layout-8.0.4.jar:/Users/elena/IdeaProjects/TourPlanner_SWEN2_Team5/target/classes:/Users/elena/.m2/repository/org/apache/logging/log4j/log4j-core/2.23.1/log4j-core-2.23.1.jar, java.version.date=2024-04-16, java.home=/Users/elena/Library/Java/JavaVirtualMachines/openjdk-22.0.1/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, apple.awt.application.name=MainTourPlaner, jdk.module.main.class=technikum.at.tourplanner_swen2_team5.MainTourPlaner, jdk.module.main=technikum.at.tourplanner_swen2_team5, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=22.0.1+8-16, user.name=elena, stdout.encoding=UTF-8, path.separator=:, hibernate.connection.username=****, os.version=13.6.7, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/tour_planner_g5_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/gh/g4flnbd93rx23cjr8vm5rgw00000gn/T/, java.version=22.0.1, user.dir=/Users/elena/IdeaProjects/TourPlanner_SWEN2_Team5, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2beb422a, native.encoding=UTF-8, java.library.path=/Users/elena/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=66.0}
2024-06-19 21:47:16.460 [JavaFX Application Thread] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-06-19 21:47:16.460 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-06-19 21:47:16.460 [JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4cac16f7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4203091]
2024-06-19 21:47:16.483 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel] is safe
2024-06-19 21:47:16.483 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 21:47:16.547 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel] is safe
2024-06-19 21:47:16.547 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-19 21:47:16.553 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.553 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.553 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.553 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.553 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.553 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.553 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel] is safe
2024-06-19 21:47:16.553 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 21:47:16.563 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.563 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.563 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.563 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#difficulty` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.564 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#tour` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.564 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.564 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel] is safe
2024-06-19 21:47:16.564 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 21:47:16.569 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.569 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.569 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [technikum.at.tourplanner_swen2_team5.BL.models.TourModel] is safe
2024-06-19 21:47:16.569 [JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 21:47:16.576 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.576 [JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `technikum.at.tourplanner_swen2_team5.BL.models.TourModel#transportType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-06-19 21:47:16.579 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel
2024-06-19 21:47:16.580 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select difficultyid from difficulties where difficultyid =?
2024-06-19 21:47:16.580 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select difficulty_.difficultyid, difficulty_.difficulty as difficul2_0_ from difficulties difficulty_ where difficulty_.difficultyid=?
2024-06-19 21:47:16.580 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into difficulties (difficulty, difficultyid) values (?, ?)
2024-06-19 21:47:16.580 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update difficulties set difficulty=? where difficultyid=?
2024-06-19 21:47:16.580 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from difficulties where difficultyid=?
2024-06-19 21:47:16.580 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into difficulties (difficulty) values (?)
2024-06-19 21:47:16.587 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a94f132]
2024-06-19 21:47:16.587 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-19 21:47:16.587 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-19 21:47:16.591 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-19 21:47:16.592 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
          - SQL table alias mapping - difficulty0_
          - alias suffix - 0_
          - suffixed key columns - {difficul1_0_0_}

2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel [NONE]: select difficulty0_.difficultyid as difficul1_0_0_, difficulty0_.difficulty as difficul2_0_0_ from difficulties difficulty0_ where difficulty0_.difficultyid=?
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from maps where id =?
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmapmod_.id, tourmapmod_.filename as filename2_1_, tourmapmod_.tourid_fk as tourid_f3_1_ from maps tourmapmod_ where tourmapmod_.id=?
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into maps (filename, tourid_fk, id) values (?, ?, ?)
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update maps set filename=?, tourid_fk=? where id=?
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from maps where id=?
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into maps (filename, tourid_fk) values (?, ?)
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb73076]
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : filename
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tourId
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-19 21:47:16.593 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel)
          - SQL table alias mapping - tourmapmod0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel [NONE]: select tourmapmod0_.id as id1_1_0_, tourmapmod0_.filename as filename2_1_0_, tourmapmod0_.tourid_fk as tourid_f3_1_0_ from maps tourmapmod0_ where tourmapmod0_.id=?
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourlogid from tourlogs where tourlogid =?
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourlogmod_.tourlogid, tourlogmod_.comment as comment2_2_, tourlogmod_.date as date3_2_, tourlogmod_.difficultyid as difficul9_2_, tourlogmod_.distance as distance4_2_, tourlogmod_.rating as rating5_2_, tourlogmod_.timeHours as timehour6_2_, tourlogmod_.timeMinutes as timeminu7_2_, tourlogmod_.totaltime as totaltim8_2_, tourlogmod_.tourid_fk as tourid_10_2_, tourlogmod_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod_ where tourlogmod_.tourlogid=?
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tourlogs (comment, date, difficultyid, distance, rating, timeHours, timeMinutes, totaltime, tourid_fk, transporttypeid_fk, tourlogid) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tourlogs set comment=?, date=?, difficultyid=?, distance=?, rating=?, timeHours=?, timeMinutes=?, totaltime=?, tourid_fk=?, transporttypeid_fk=? where tourlogid=?
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tourlogs where tourlogid=?
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b952ad0]
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-06-19 21:47:16.594 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty
2024-06-19 21:47:16.595 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e2bdbba]
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : difficulty.difficulty
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : rating
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeHours
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : timeMinutes
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : totalTime
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc370de]
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.description
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.destination
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.distance
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.name
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.start
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.time
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@659d1ef5]
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : tour.transportType.name
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33777b76]
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-19 21:47:16.596 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-19 21:47:16.597 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-19 21:47:16.597 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.difficulty)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:2>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour)
             - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:3>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.tour.transportType)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:4>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
          - SQL table alias mapping - tourlogmod0_
          - alias suffix - 0_
          - suffixed key columns - {tourlogi1_2_0_}
          - JOIN (JoinDefinedByMetadata(difficulty)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
                - SQL table alias mapping - difficulty1_
                - alias suffix - 1_
                - suffixed key columns - {difficul1_0_1_}
          - JOIN (JoinDefinedByMetadata(tour)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
                - SQL table alias mapping - tourmodel2_
                - alias suffix - 2_
                - suffixed key columns - {tourid1_3_2_}
                - JOIN (JoinDefinedByMetadata(transportType)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                      - SQL table alias mapping - transportt3_
                      - alias suffix - 3_
                      - suffixed key columns - {transpor1_4_3_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt4_
                - alias suffix - 4_
                - suffixed key columns - {transpor1_4_4_}

2024-06-19 21:47:16.597 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel [NONE]: select tourlogmod0_.tourlogid as tourlogi1_2_0_, tourlogmod0_.comment as comment2_2_0_, tourlogmod0_.date as date3_2_0_, tourlogmod0_.difficultyid as difficul9_2_0_, tourlogmod0_.distance as distance4_2_0_, tourlogmod0_.rating as rating5_2_0_, tourlogmod0_.timeHours as timehour6_2_0_, tourlogmod0_.timeMinutes as timeminu7_2_0_, tourlogmod0_.totaltime as totaltim8_2_0_, tourlogmod0_.tourid_fk as tourid_10_2_0_, tourlogmod0_.transporttypeid_fk as transpo11_2_0_, difficulty1_.difficultyid as difficul1_0_1_, difficulty1_.difficulty as difficul2_0_1_, tourmodel2_.tourid as tourid1_3_2_, tourmodel2_.description as descript2_3_2_, tourmodel2_.destination as destinat3_3_2_, tourmodel2_.distance as distance4_3_2_, tourmodel2_.name as name5_3_2_, tourmodel2_.start as start6_3_2_, tourmodel2_.time as time7_3_2_, tourmodel2_.transporttypeid_fk as transpor8_3_2_, transportt3_.transporttypeid as transpor1_4_3_, transportt3_.name as name2_4_3_, transportt4_.transporttypeid as transpor1_4_4_, transportt4_.name as name2_4_4_ from tourlogs tourlogmod0_ left outer join difficulties difficulty1_ on tourlogmod0_.difficultyid=difficulty1_.difficultyid inner join tours tourmodel2_ on tourlogmod0_.tourid_fk=tourmodel2_.tourid inner join transporttypes transportt3_ on tourmodel2_.transporttypeid_fk=transportt3_.transporttypeid left outer join transporttypes transportt4_ on tourlogmod0_.transporttypeid_fk=transportt4_.transporttypeid where tourlogmod0_.tourlogid=?
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select transporttypeid from transporttypes where transporttypeid =?
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select transportt_.transporttypeid, transportt_.name as name2_4_ from transporttypes transportt_ where transportt_.transporttypeid=?
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into transporttypes (name, transporttypeid) values (?, ?)
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update transporttypes set name=? where transporttypeid=?
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from transporttypes where transporttypeid=?
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into transporttypes (name) values (?)
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@737cd762]
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
          - SQL table alias mapping - transportt0_
          - alias suffix - 0_
          - suffixed key columns - {transpor1_4_0_}

2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel [NONE]: select transportt0_.transporttypeid as transpor1_4_0_, transportt0_.name as name2_4_0_ from transporttypes transportt0_ where transportt0_.transporttypeid=?
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select tourid from tours where tourid =?
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select tourmodel_.tourid, tourmodel_.description as descript2_3_, tourmodel_.destination as destinat3_3_, tourmodel_.distance as distance4_3_, tourmodel_.name as name5_3_, tourmodel_.start as start6_3_, tourmodel_.time as time7_3_, tourmodel_.transporttypeid_fk as transpor8_3_ from tours tourmodel_ where tourmodel_.tourid=?
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into tours (description, destination, distance, name, start, time, transporttypeid_fk, tourid) values (?, ?, ?, ?, ?, ?, ?, ?)
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update tours set description=?, destination=?, distance=?, name=?, start=?, time=?, transporttypeid_fk=? where tourid=?
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from tours where tourid=?
2024-06-19 21:47:16.598 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134fb5ee]
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : destination
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : distance
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : start
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : time
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11583908]
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : transportType.name
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    - Returns
       - EntityReturnImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel, querySpaceUid=<gen:0>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - EntityAttributeFetchImpl(entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel, querySpaceUid=<gen:1>, path=technikum.at.tourplanner_swen2_team5.BL.models.TourModel.transportType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          - SQL table alias mapping - tourmodel0_
          - alias suffix - 0_
          - suffixed key columns - {tourid1_3_0_}
          - JOIN (JoinDefinedByMetadata(transportType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
                - SQL table alias mapping - transportt1_
                - alias suffix - 1_
                - suffixed key columns - {transpor1_4_1_}

2024-06-19 21:47:16.599 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity technikum.at.tourplanner_swen2_team5.BL.models.TourModel [NONE]: select tourmodel0_.tourid as tourid1_3_0_, tourmodel0_.description as descript2_3_0_, tourmodel0_.destination as destinat3_3_0_, tourmodel0_.distance as distance4_3_0_, tourmodel0_.name as name5_3_0_, tourmodel0_.start as start6_3_0_, tourmodel0_.time as time7_3_0_, tourmodel0_.transporttypeid_fk as transpor8_3_0_, transportt1_.transporttypeid as transpor1_4_1_, transportt1_.name as name2_4_1_ from tours tourmodel0_ inner join transporttypes transportt1_ on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid where tourmodel0_.tourid=?
2024-06-19 21:47:16.613 [JavaFX Application Thread] INFO  org.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@ce58a76] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-06-19 21:47:16.638 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : difficulties
2024-06-19 21:47:16.638 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : maps
2024-06-19 21:47:16.638 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tourlogs
2024-06-19 21:47:16.638 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : tours
2024-06-19 21:47:16.638 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table - No alter strings for table : transporttypes
2024-06-19 21:47:16.683 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-06-19 21:47:16.684 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-19 21:47:16.685 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-19 21:47:16.685 [JavaFX Application Thread] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-19 21:47:16.686 [JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-19 21:47:16.687 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@51d5f8c5
2024-06-19 21:47:16.688 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
2024-06-19 21:47:16.688 [JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-06-19 21:47:16.689 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2c9de156
2024-06-19 21:47:16.690 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 40239288-a5d0-465f-9d77-64ac821549b7 (<unnamed>)
2024-06-19 21:47:16.690 [JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-19 21:47:16.708 [JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-06-19 21:47:16.721 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 21:47:16.722 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:47:16.726 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourModel'

2024-06-19 21:47:16.732 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-19 21:47:16.735 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-19 21:47:16.735 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-19 21:47:16.735 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) )
2024-06-19 21:47:16.736 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-19 21:47:16.737 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-19 21:47:16.738 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-19 21:47:16.738 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-19 21:47:16.738 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}

2024-06-19 21:47:16.738 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:47:16.740 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel
2024-06-19 21:47:16.740 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_
2024-06-19 21:47:16.740 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:47:16.744 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-19 21:47:16.746 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:47:16.747 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:47:16.748 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:47:16.749 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.751 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:47:16.754 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:47:16.754 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:47:16.754 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:47:16.754 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.754 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:47:16.755 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.756 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:47:16.757 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:47:16.757 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:47:16.757 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:47:16.757 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.757 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:47:16.757 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-19 21:47:16.757 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:47:16.758 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:47:16.765 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-19 21:47:16.766 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:47:16.766 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:47:16.766 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.767 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 21:47:16.768 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:16.769 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:47:16.770 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-19 21:47:16.770 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:47:16.770 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:47:19.722 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 21:47:19.723 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:47:19.723 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TransportTypeModel'

2024-06-19 21:47:19.723 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-19 21:47:19.723 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel (<no alias>) -> transportt0_
2024-06-19 21:47:19.723 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-19 21:47:19.723 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} transporttypes transportt0_ ) )
2024-06-19 21:47:19.723 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-19 21:47:19.724 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TransportTypeModel): [transporttypes]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-19 21:47:19.724 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [transporttypes transportt0_]
2024-06-19 21:47:19.724 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-19 21:47:19.724 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (transporttypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'transportt0_.transporttypeid as transpor1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transporttypes,tableAlias=transportt0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'transportt0_.name as name2_4_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[transportt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'transporttypes transportt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transporttypes,tableAlias=transportt0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel}}

2024-06-19 21:47:19.724 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:47:19.724 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel
2024-06-19 21:47:19.724 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select transportt0_.transporttypeid as transpor1_4_, transportt0_.name as name2_4_ from transporttypes transportt0_
2024-06-19 21:47:19.724 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:47:19.724 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:47:19.726 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:19.727 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:47:19.727 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-19 21:47:19.727 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-19 21:47:19.727 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:19.727 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-19 21:47:19.727 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:47:19.727 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:47:19.727 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:47:19.727 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:47:19.727 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:47:46.325 [Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
2024-06-19 21:48:02.789 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE name = :name
2024-06-19 21:48:02.791 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:02.792 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

2024-06-19 21:48:02.792 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-19 21:48:02.793 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-19 21:48:02.795 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-19 21:48:02.797 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : name -> org.hibernate.type.StringType@19095d3
2024-06-19 21:48:02.797 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.name -> tourmodel0_.name
2024-06-19 21:48:02.798 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-19 21:48:02.798 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) ( WHERE ( = ( tourmodel0_.name {synthetic-alias} name ) ? ) ) )
2024-06-19 21:48:02.798 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-19 21:48:02.799 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          | path: {synthetic-alias}.name
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: name
          \-ParameterNode

2024-06-19 21:48:02.799 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-19 21:48:02.799 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-19 21:48:02.799 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourmodel0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=tourmodel0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@19095d3}

2024-06-19 21:48:02.799 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:02.800 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE name = :name
2024-06-19 21:48:02.800 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_ where tourmodel0_.name=?
2024-06-19 21:48:02.800 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:02.803 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_ 
    where
        tourmodel0_.name=?
2024-06-19 21:48:02.809 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:48:03.535 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-19 21:48:03.535 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
2024-06-19 21:48:03.538 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 2d678b71-70ab-4ef1-9116-a3a2d1253554, using strategy: org.hibernate.id.Assigned
2024-06-19 21:48:03.543 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
2024-06-19 21:48:03.543 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2024-06-19 21:48:03.544 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2024-06-19 21:48:03.545 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-06-19 21:48:03.545 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-19 21:48:03.546 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
2024-06-19 21:48:03.546 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - technikum.at.tourplanner_swen2_team5.BL.models.TourModel{distance=102.8613, destination=Salzburg, name=Neue Tour :), start=Zell am See, description=Schöne Wanderung, transportType=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1, id=2d678b71-70ab-4ef1-9116-a3a2d1253554, time=1542}
2024-06-19 21:48:03.548 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    insert 
    into
        tours
        (description, destination, distance, name, start, time, transporttypeid_fk, tourid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2024-06-19 21:48:03.553 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:48:03.553 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:48:03.553 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2024-06-19 21:48:03.554 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-19 21:48:03.554 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:48:03.554 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:48:03.554 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.555 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.556 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.557 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Schöne Wanderung
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Salzburg
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 103.0
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Neue Tour :)
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Zell am See
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1542
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 1
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.558 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:48:03.559 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:48:03.559 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:48:03.559 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-19 21:48:03.559 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:03.559 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:48:03.559 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1
2024-06-19 21:48:03.559 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:48:03.559 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:48:04.470 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-19 21:48:04.470 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
2024-06-19 21:48:04.470 [JavaFX Application Thread] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2024-06-19 21:48:04.471 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    insert 
    into
        maps
        (filename, tourid_fk) 
    values
        (?, ?)
2024-06-19 21:48:04.475 [JavaFX Application Thread] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 26
2024-06-19 21:48:04.475 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
2024-06-19 21:48:04.476 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
2024-06-19 21:48:04.476 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2024-06-19 21:48:04.476 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2024-06-19 21:48:04.476 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-19 21:48:04.476 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-19 21:48:04.476 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
2024-06-19 21:48:04.476 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - technikum.at.tourplanner_swen2_team5.BL.models.TourMapModel{filename=2d678b71-70ab-4ef1-9116-a3a2d1253554_map.png, tourId=2d678b71-70ab-4ef1-9116-a3a2d1253554, id=26}
2024-06-19 21:48:04.477 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:48:04.477 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:48:04.488 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.489 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.490 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Schöne Wanderung
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Salzburg
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 103.0
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Neue Tour :)
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Zell am See
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1542
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 1
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.491 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:48:04.492 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:48:04.492 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:48:04.492 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-19 21:48:04.492 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:04.492 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:48:04.492 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1
2024-06-19 21:48:04.492 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:48:04.492 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:48:10.154 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-19 21:48:10.154 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:10.155 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'technikum'
    |           |  |  |  |  \-[IDENT] Node: 'at'
    |           |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
    |           |  |  \-[IDENT] Node: 'BL'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'TourModel'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2024-06-19 21:48:10.155 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-19 21:48:10.155 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourModel (<no alias>) -> tourmodel0_
2024-06-19 21:48:10.155 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2024-06-19 21:48:10.155 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.StringType@19095d3
2024-06-19 21:48:10.155 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.id -> tourmodel0_.tourid
2024-06-19 21:48:10.155 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-19 21:48:10.156 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tours tourmodel0_ ) ( WHERE ( = ( tourmodel0_.tourid {synthetic-alias} id ) ? ) ) )
2024-06-19 21:48:10.156 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-19 21:48:10.156 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourModel): [tours]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourModel)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

2024-06-19 21:48:10.156 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tours tourmodel0_]
2024-06-19 21:48:10.156 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-19 21:48:10.156 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tours)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourmodel0_.tourid as tourid1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourmodel0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'tours tourmodel0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tours,tableAlias=tourmodel0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tourmodel0_.tourid' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=tourmodel0_,className=technikum.at.tourplanner_swen2_team5.BL.models.TourModel,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@19095d3}

2024-06-19 21:48:10.156 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:10.156 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourModel WHERE id = :id
2024-06-19 21:48:10.156 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourmodel0_.tourid as tourid1_3_, tourmodel0_.description as descript2_3_, tourmodel0_.destination as destinat3_3_, tourmodel0_.distance as distance4_3_, tourmodel0_.name as name5_3_, tourmodel0_.start as start6_3_, tourmodel0_.time as time7_3_, tourmodel0_.transporttypeid_fk as transpor8_3_ from tours tourmodel0_ where tourmodel0_.tourid=?
2024-06-19 21:48:10.156 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:10.157 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_ 
    where
        tourmodel0_.tourid=?
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Schöne Wanderung
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Salzburg
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 103.0
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Neue Tour :)
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Zell am See
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1542
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 1
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.159 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:48:10.160 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:48:10.160 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:48:10.160 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-19 21:48:10.160 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.160 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:48:10.160 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1
2024-06-19 21:48:10.160 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:48:10.160 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:48:10.184 [Thread-5] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 21:48:10.185 [Thread-5] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:10.185 [Thread-5] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'TourLogModel'

2024-06-19 21:48:10.185 [Thread-5] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-19 21:48:10.185 [Thread-5] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel (<no alias>) -> tourlogmod0_
2024-06-19 21:48:10.185 [Thread-5] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-19 21:48:10.185 [Thread-5] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} tourlogs tourlogmod0_ ) )
2024-06-19 21:48:10.185 [Thread-5] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-19 21:48:10.186 [Thread-5] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TourLogModel): [tourlogs]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-19 21:48:10.186 [Thread-5] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [tourlogs tourlogmod0_]
2024-06-19 21:48:10.186 [Thread-5] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-19 21:48:10.186 [Thread-5] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (tourlogs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tourlogmod0_.tourlogid as tourlogi1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tourlogmod0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'tourlogs tourlogmod0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=tourlogs,tableAlias=tourlogmod0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel}}

2024-06-19 21:48:10.186 [Thread-5] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:10.186 [Thread-5] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel
2024-06-19 21:48:10.186 [Thread-5] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tourlogmod0_.tourlogid as tourlogi1_2_, tourlogmod0_.comment as comment2_2_, tourlogmod0_.date as date3_2_, tourlogmod0_.difficultyid as difficul9_2_, tourlogmod0_.distance as distance4_2_, tourlogmod0_.rating as rating5_2_, tourlogmod0_.timeHours as timehour6_2_, tourlogmod0_.timeMinutes as timeminu7_2_, tourlogmod0_.totaltime as totaltim8_2_, tourlogmod0_.tourid_fk as tourid_10_2_, tourlogmod0_.transporttypeid_fk as transpo11_2_ from tourlogs tourlogmod0_
2024-06-19 21:48:10.186 [Thread-5] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:10.186 [Thread-5] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.188 [Thread-5] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-19 21:48:10.189 [Thread-5] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:48:10.189 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 21:48:10.189 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.190 [Thread-5] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-19 21:48:10.191 [Thread-5] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:48:10.191 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:48:10.191 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 21:48:10.191 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.191 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 21:48:10.191 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-19 21:48:10.192 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.193 [Thread-5] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = Nice
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 30.05.2024
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 12.3
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 1
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.195 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-19 21:48:10.196 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.196 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 21:48:10.196 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.196 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:48:10.196 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:10.196 [Thread-5] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 21:48:10.196 [Thread-5] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:48:17.672 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel 
2024-06-19 21:48:17.672 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:17.672 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'technikum'
                |  |  |  |  \-[IDENT] Node: 'at'
                |  |  |  \-[IDENT] Node: 'tourplanner_swen2_team5'
                |  |  \-[IDENT] Node: 'BL'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'DifficultyModel'

2024-06-19 21:48:17.672 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-06-19 21:48:17.672 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel (<no alias>) -> difficulty0_
2024-06-19 21:48:17.672 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-06-19 21:48:17.672 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} difficulties difficulty0_ ) )
2024-06-19 21:48:17.672 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2024-06-19 21:48:17.672 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity DifficultyModel): [difficulties]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-06-19 21:48:17.673 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [difficulties difficulty0_]
2024-06-19 21:48:17.673 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-06-19 21:48:17.673 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (difficulties)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'difficulty0_.difficultyid as difficul1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=difficulties,tableAlias=difficulty0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel}}}
    |  \-[SQL_TOKEN] SqlFragment: 'difficulty0_.difficulty as difficul2_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[difficulty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'difficulties difficulty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=difficulties,tableAlias=difficulty0_,origin=null,columns={,className=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel}}

2024-06-19 21:48:17.673 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:17.673 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel 
2024-06-19 21:48:17.673 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select difficulty0_.difficultyid as difficul1_0_, difficulty0_.difficulty as difficul2_0_ from difficulties difficulty0_
2024-06-19 21:48:17.673 [JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-06-19 21:48:17.673 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_,
        difficulty0_.difficulty as difficul2_0_ 
    from
        difficulties difficulty0_
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Easy
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#1]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Difficult
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#4]
2024-06-19 21:48:17.675 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:48:17.676 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_,
        transportt0_.name as name2_4_ 
    from
        transporttypes transportt0_
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Running
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#3]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:48:17.677 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:49:13.291 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-19 21:49:13.292 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
2024-06-19 21:49:13.292 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 2fdad555-675a-480c-a484-fb0d67c38d86, using strategy: org.hibernate.id.Assigned
2024-06-19 21:49:13.293 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel_.tourid,
        tourmodel_.description as descript2_3_,
        tourmodel_.destination as destinat3_3_,
        tourmodel_.distance as distance4_3_,
        tourmodel_.name as name5_3_,
        tourmodel_.start as start6_3_,
        tourmodel_.time as time7_3_,
        tourmodel_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel_ 
    where
        tourmodel_.tourid=?
2024-06-19 21:49:13.297 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
2024-06-19 21:49:13.298 [JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
2024-06-19 21:49:13.298 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2024-06-19 21:49:13.298 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2024-06-19 21:49:13.298 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2024-06-19 21:49:13.298 [JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-19 21:49:13.298 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
2024-06-19 21:49:13.299 [JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter - technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel{date=18.06.2024, difficulty=technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3, distance=103, totalTime=27h 40min, rating=9, comment=Tolle Tour, aber sehr anspruchsvoll!, transportType=technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1, id=2fdad555-675a-480c-a484-fb0d67c38d86, timeHours=8, timeMinutes=0, tour=technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554}
2024-06-19 21:49:13.299 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    insert 
    into
        tourlogs
        (comment, date, difficultyid, distance, rating, timeHours, timeMinutes, totaltime, tourid_fk, transporttypeid_fk, tourlogid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2024-06-19 21:49:13.304 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:49:13.304 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:49:13.305 [JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2024-06-19 21:49:13.305 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-19 21:49:13.306 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:49:13.306 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 21:49:13.307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:49:13.307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 21:49:13.307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 21:49:13.307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 21:49:13.307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-19 21:49:13.307 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#2fdad555-675a-480c-a484-fb0d67c38d86]
2024-06-19 21:49:13.307 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 21:49:13.307 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-19 21:49:13.307 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.307 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-19 21:49:13.308 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.308 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 21:49:13.308 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.308 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.310 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-19 21:49:13.311 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.311 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-19 21:49:13.311 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.311 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 21:49:13.311 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.311 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.313 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 21:49:13.314 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.315 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:49:13.317 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = Nice
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 30.05.2024
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 12.3
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 1
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 21:49:13.318 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#2fdad555-675a-480c-a484-fb0d67c38d86]
2024-06-19 21:49:13.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = Tolle Tour, aber sehr anspruchsvoll!
2024-06-19 21:49:13.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 18.06.2024
2024-06-19 21:49:13.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 3
2024-06-19 21:49:13.319 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.319 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 103
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 9
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 8
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 27h 40min
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 2d678b71-70ab-4ef1-9116-a3a2d1253554
2024-06-19 21:49:13.320 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.321 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Schöne Wanderung
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Salzburg
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 103.0
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Neue Tour :)
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Zell am See
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1542
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 1
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:49:13.322 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554
2024-06-19 21:49:13.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 1
2024-06-19 21:49:13.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:13.323 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#2fdad555-675a-480c-a484-fb0d67c38d86]
2024-06-19 21:49:13.323 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:49:29.290 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-19 21:49:29.292 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.293 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 21:49:29.294 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.294 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 21:49:29.294 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.294 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:49:29.294 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.294 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:49:29.294 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:29.294 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.295 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Schöne Wanderung
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Salzburg
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 103.0
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Neue Tour :)
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Zell am See
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1542
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 1
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.296 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:49:29.297 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:29.297 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:49:29.297 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-19 21:49:29.297 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:29.297 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:49:29.297 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1
2024-06-19 21:49:29.297 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:29.297 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:49:31.038 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_ 
    where
        tourmodel0_.tourid=?
2024-06-19 21:49:31.041 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:49:31.041 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Schöne Wanderung
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Salzburg
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 103.0
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Neue Tour :)
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Zell am See
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1542
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 1
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:31.042 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:49:31.044 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:31.044 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:49:31.044 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-19 21:49:31.044 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:31.044 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:49:31.045 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1
2024-06-19 21:49:31.045 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:31.045 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:49:34.321 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_
2024-06-19 21:49:34.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:49:34.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:49:34.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:49:34.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:49:34.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 21:49:34.323 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.324 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 21:49:34.325 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.326 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:49:34.326 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.326 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:49:34.326 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:34.326 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:49:34.326 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:49:34.326 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.326 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Schöne Wanderung
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Salzburg
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 103.0
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Neue Tour :)
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Zell am See
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1542
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 1
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.327 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:49:34.328 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:34.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:49:34.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-19 21:49:34.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:34.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:49:34.328 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1
2024-06-19 21:49:34.328 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:34.328 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:49:37.214 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_,
        tourmodel0_.description as descript2_3_,
        tourmodel0_.destination as destinat3_3_,
        tourmodel0_.distance as distance4_3_,
        tourmodel0_.name as name5_3_,
        tourmodel0_.start as start6_3_,
        tourmodel0_.time as time7_3_,
        tourmodel0_.transporttypeid_fk as transpor8_3_ 
    from
        tours tourmodel0_ 
    where
        tourmodel0_.tourid=?
2024-06-19 21:49:37.217 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:49:37.217 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:37.217 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Schöne Wanderung
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Salzburg
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 103.0
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Neue Tour :)
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Zell am See
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1542
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 1
2024-06-19 21:49:37.218 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.219 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        transportt0_.transporttypeid as transpor1_4_0_,
        transportt0_.name as name2_4_0_ 
    from
        transporttypes transportt0_ 
    where
        transportt0_.transporttypeid=?
2024-06-19 21:49:37.219 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:37.220 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:49:37.220 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Hike
2024-06-19 21:49:37.220 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.220 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1]
2024-06-19 21:49:37.220 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#1
2024-06-19 21:49:37.220 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#2d678b71-70ab-4ef1-9116-a3a2d1253554]
2024-06-19 21:49:37.220 [JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-06-19 21:49:37.354 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourlogmod0_.tourlogid as tourlogi1_2_,
        tourlogmod0_.comment as comment2_2_,
        tourlogmod0_.date as date3_2_,
        tourlogmod0_.difficultyid as difficul9_2_,
        tourlogmod0_.distance as distance4_2_,
        tourlogmod0_.rating as rating5_2_,
        tourlogmod0_.timeHours as timehour6_2_,
        tourlogmod0_.timeMinutes as timeminu7_2_,
        tourlogmod0_.totaltime as totaltim8_2_,
        tourlogmod0_.tourid_fk as tourid_10_2_,
        tourlogmod0_.transporttypeid_fk as transpo11_2_ 
    from
        tourlogs tourlogmod0_
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#2fdad555-675a-480c-a484-fb0d67c38d86]
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was very nice!
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.356 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Moderate
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2]
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#2
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.358 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Description
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = London
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 1521.0
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 1
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Wien
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 1521
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51]
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Vacation
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#4]
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#356b9cc3-e07f-497f-8b68-d25521993405]
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = It was awesome!
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 05.06.2024
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 2
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 54
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 38h 24min
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.359 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-19 21:49:37.360 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.360 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
    from
        tours tourmodel0_ 
    inner join
        transporttypes transportt1_ 
            on tourmodel0_.transporttypeid_fk=transportt1_.transporttypeid 
    where
        tourmodel0_.tourid=?
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `description` : value = Nice Tour
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `destination` : value = Köln
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`destination`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 576.0
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Tour 2
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `start` : value = Berlin
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`start`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `time` : value = 2304
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`time`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9]
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Bike
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TransportTypeModel#2]
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.TourModel#bdf077c7-f715-498a-9b38-2ec9a8a95cb9
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 2
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#e6540083-d9e7-45b8-83a0-0e4f2748e4de]
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = Nice
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 30.05.2024
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 2
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 12.3
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 10
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 0
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 1
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 25h 21min
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 76615c12-a3b7-4125-9e53-78bc40245f51
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `transportType` : value = 4
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`transportType`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#6974b29b-5e30-4c2f-8db8-ee4cf2ac866e]
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.TourLogModel#2fdad555-675a-480c-a484-fb0d67c38d86]
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `comment` : value = Tolle Tour, aber sehr anspruchsvoll!
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`comment`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `date` : value = 18.06.2024
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = 3
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.361 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        difficulty0_.difficultyid as difficul1_0_0_,
        difficulty0_.difficulty as difficul2_0_0_ 
    from
        difficulties difficulty0_ 
    where
        difficulty0_.difficultyid=?
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `difficulty` : value = Challenging
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3]
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : technikum.at.tourplanner_swen2_team5.BL.models.DifficultyModel#3
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `distance` : value = 103
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`distance`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `rating` : value = 9
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`rating`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeHours` : value = 8
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeHours`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `timeMinutes` : value = 0
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`timeMinutes`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `totalTime` : value = 27h 40min
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`totalTime`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `tour` : value = 2d678b71-70ab-4ef1-9116-a3a2d1253554
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`tour`)  - enhanced for lazy-loading? - false
2024-06-19 21:49:37.362 [JavaFX Application Thread] DEBUG org.hibernate.SQL - 
    select
        tourmodel0_.tourid as tourid1_3_0_,
        tourmodel0_.description as descript2_3_0_,
        tourmodel0_.destination as destinat3_3_0_,
        tourmodel0_.distance as distance4_3_0_,
        tourmodel0_.name as name5_3_0_,
        tourmodel0_.start as start6_3_0_,
        tourmodel0_.time as time7_3_0_,
        tourmodel0_.transporttypeid_fk as transpor8_3_0_,
        transportt1_.transporttypeid as transpor1_4_1_,
        transportt1_.name as name2_4_1_ 
   